<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"--------------------ACR ALT SOME INFO-----------------------------------------------------------------------"</Description>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"READ THE DESCRIPTION ON NEXUSMOD PAGE BEFORE USING THE MOD"</Description>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Keep Parkour Mode active when doing parkour, and not active when interact with NPC"</Description>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Keybinds for controller have already been set. Check them out on the description page of Nexusmods"</Description>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Enable Mod"</Description>
          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
alloc(entity,2048)
label(returnhere)
label(exit)

globalalloc(pEntity,4)

globalalloc(bindLegs,1)
globalalloc(bindArmedHand,1)
globalalloc(bindHead,1)
globalalloc(bindEmptyHand,1)
globalalloc(bindFists,1)
globalalloc(bindMedicine,1)
globalalloc(bindHiddenBlade,1)
globalalloc(bindSword,1)
globalalloc(bindMaps,1)
globalalloc(bindMenu,1)
globalalloc(bindTargetLock,1)
globalalloc(bindContextualCam,1)
globalalloc(bindHighProfile,1)
globalalloc(bindWeaponWheel,1)
globalalloc(bindFirstPerson,1)
globalalloc(bindCenterCam,1)

globalalloc(absolute_input_f,8)
globalalloc(absolute_input_cam_f,8)
globalalloc(relative_input_f,4)
globalalloc(direction_input_f,16)

globalalloc(pVelocity,4)
globalalloc(player_velocity,16)
globalalloc(horizontal_velocity,4)
globalalloc(fall_height,4)
globalalloc(walk_strength,4)
globalalloc(walk_mode_index,1)

globalalloc(on_hang_f,1)
globalalloc(on_hang_free_f,1)
globalalloc(on_hang_wall_f,1)
globalalloc(on_hang_crouch_f,1)
globalalloc(on_hang_stand_f,1)
globalalloc(on_vault_f,1)
globalalloc(vault_ground_land_f,1)
globalalloc(on_ground_f,1)
globalalloc(on_nso_f,1)
globalalloc(on_air_f,1)
globalalloc(on_ground_land_f,1)
globalalloc(on_ledge_grab_f,1)
globalalloc(on_run_f,1)
globalalloc(on_water_f,1)

globalalloc(already_rolled_f,1)
globalalloc(dive_beam_f,1)
globalalloc(near_miss_f,1)
globalalloc(smooth_fall_f,1)
globalalloc(instant_swingoff_f,1)
globalalloc(vault_inner_ledge_f,1)
globalalloc(dismount_hang_free_eject_f,1)
globalalloc(freeform_jump_f,1)
globalalloc(ledge_drop_f,1)
globalalloc(eject_clamp_f,1)
globalalloc(swan_dive_f,1)

walk_strength:
dd (float)1

walk_mode_index:
db 00

entity:
mov eax,[esi+08]
mov ecx,[eax+08]
test eax,eax
je exit
push ebx
mov ebx,[eax+8]
mov [pEntity],ebx
pop ebx

exit:
jmp returnhere

"ACRSP.exe"+1372F9D:
jmp entity
nop
returnhere:


alloc(ingame_binds,2048)
label(returnhere2)
label(exit2)

ingame_binds:
movq [esi+20],xmm0

mov edx,[esi+18]
mov [bindLegs],edx

mov edx,[esi+19]
mov [bindArmedHand],edx

mov edx,[esi+1A]
mov [bindHead],edx

mov edx,[esi+1B]
mov [bindEmptyHand],edx

mov edx,[esi+1C]
mov [bindFists],edx

mov edx,[esi+1D]
mov [bindMedicine],edx

mov edx,[esi+1E]
mov [bindHiddenBlade],edx

mov edx,[esi+1F]
mov [bindSword],edx

mov edx,[esi+20]
mov [bindMaps],edx

mov edx,[esi+21]
mov [bindMenu],edx

mov edx,[esi+22]
mov [bindTargetLock],edx

mov edx,[esi+23]
mov [bindContextualCam],edx

mov edx,[esi+24]
mov [bindHighProfile],edx

mov edx,[esi+25]
mov [bindWeaponWheel],edx

mov edx,[esi+26]
mov [bindFirstPerson],edx

mov edx,[esi+27]
mov [bindCenterCam],edx

exit2:
jmp returnhere2

"ACRSP.exe"+185C8FB:
jmp ingame_binds
returnhere2:


alloc(absolute_input,2048)
label(returnhere3)
label(exit3)

absolute_input:
movq xmm0,[eax+000001A0]
movq [absolute_input_cam_f],xmm0
movq xmm0,[eax+00000190]
mulss xmm0,[walk_strength]
shufps xmm0,xmm0,E1
mulss xmm0,[walk_strength]
shufps xmm0,xmm0,E1
movq [absolute_input_f],xmm0
cmp [absolute_input_f],00000000
jne exit3
mov [relative_input_f],00000000

exit3:
jmp returnhere3

"ACRSP.exe"+185C902:
jmp absolute_input
nop 3
returnhere3:


alloc(relative_input,2048)
label(returnhere4)
label(exit4)

relative_input:
fst [relative_input_f]
fstp dword ptr [esi+0000239C]

exit4:
jmp returnhere4

"ACRSP.exe"+1373432:
jmp relative_input
nop
returnhere4:


alloc(direction_input,2048)
label(returnhere5)
label(exit5)

direction_input:
movaps [direction_input_f],xmm0
movaps [esi+000023C0],xmm0

exit5:
jmp returnhere5

"ACRSP.exe"+1373353:
jmp direction_input
nop 2
returnhere5:


alloc(get_velocity,2048)
label(returnhere6)
label(originalcode6)
label(exit6)

get_velocity:
mov [pVelocity],eax
push esi
mov esi,eax
cmp esi,0
je originalcode6
mov esi,[esi+60]
cmp esi,0
je originalcode6
mov esi,[esi+0]
cmp esi,0
je originalcode6
mov esi,[esi+114]
cmp esi,0
je originalcode6
mov esi,[esi+8C]
cmp esi,0
je originalcode6
mov esi,[esi+18]
cmp esi,0
je originalcode6
mov esi,[esi+0]
cmp esi,0
je originalcode6
mov esi,[esi+40]
cmp esi,0
je originalcode6
mov esi,[esi+C]
cmp esi,0
je originalcode6
lea esi,[esi+A0]
cmp esi,0
je originalcode6
movaps xmm0,[esi]
movaps [player_velocity],xmm0
movaps xmm1, xmm0
mulps xmm1, xmm1
haddps xmm1, xmm1
sqrtss xmm1, xmm1
movss [horizontal_velocity],xmm1

originalcode6:
pop esi
sub esp,10
test eax,eax

exit6:
jmp returnhere6

"ACRSP.exe"+3ABCB:
jmp get_velocity
returnhere6:


alloc(get_fall_height,2048)
label(returnhere7)
label(exit7)

get_fall_height:
fst dword ptr [fall_height]
fstp dword ptr [ebp-34]
cmp byte ptr [ebx+08],00

exit7:
jmp returnhere7

"ACRSP.exe"+701FFE:
jmp get_fall_height
nop 2
returnhere7:


alloc(on_hang,2048)
label(returnhere8)
label(hang_crouch)
label(exit8)

on_hang:
mov [on_ground_f],00
mov [on_nso_f],00
mov [on_air_f],00
mov [on_vault_f],00
mov [ledge_drop_f],00
mov [on_water_f],00
mov ecx,[edi+10]
mov edx,[ecx+78]
cmp edx,01
jne hang_crouch
mov [on_hang_f],01
mov [on_hang_free_f],01
mov [on_hang_wall_f],00
mov [on_hang_crouch_f],00
mov [on_hang_stand_f],00
jmp exit8

hang_crouch:
mov [on_hang_f],01
mov [on_hang_free_f],00
mov [on_hang_wall_f],01
mov [on_hang_crouch_f],01
mov [on_hang_stand_f],00

exit8:
jmp returnhere8

"ACRSP.exe"+696F15:
jmp on_hang
nop
returnhere8:


alloc(on_hang_2,2048)
label(returnhere9)
label(exit9)

on_hang_2:
mov [on_ground_f],00
mov [on_nso_f],00
mov [on_air_f],00
mov [on_hang_f],01
mov [on_hang_free_f],00
mov [on_hang_wall_f],01
mov [on_hang_crouch_f],00
mov [on_hang_stand_f],01
mov [on_vault_f],00
mov [ledge_drop_f],00
mov [on_water_f],00
mov ebp,[ebx+04]
mov [esp+04],ebp

exit9:
jmp returnhere9

"ACRSP.exe"+17339CD:
jmp on_hang_2
nop 2
returnhere9:


alloc(on_ground,2048)
label(returnhere10)
label(exit10)

on_ground:
mov [on_ground_f],01
mov [on_nso_f],00
mov [on_air_f],00
mov [on_hang_f],00
mov [on_hang_free_f],00
mov [on_hang_wall_f],00
mov [on_hang_crouch_f],00
mov [on_hang_stand_f],00
mov [on_vault_f],00
mov [dive_beam_f],00
mov [freeform_jump_f],00
mov [eject_clamp_f],00
mov [on_water_f],00
push ebp
mov ebp,esp
mov eax,[ebp+10]

exit10:
jmp returnhere10

"ACRSP.exe"+1614620:
jmp on_ground
nop
returnhere10:


alloc(on_ground_land,2048)
label(returnhere11)
label(exit11)

on_ground_land:
mov [already_rolled_f],00
mov [vault_inner_ledge_f],00
mov eax,[esi+08]
mov edx,[eax+0000010C]

exit11:
jmp returnhere11

"ACRSP.exe"+6F4BD4:
jmp on_ground_land
nop 4
returnhere11:


alloc(on_nso,2048)
label(returnhere12)
label(exit12)

on_nso:
mov [on_nso_f],01
mov [on_ground_f],00
mov [on_air_f],00
mov [on_hang_f],00
mov [on_hang_free_f],00
mov [on_hang_wall_f],00
mov [on_hang_crouch_f],00
mov [on_hang_stand_f],00
mov [on_vault_f],00
mov [vault_inner_ledge_f],00
mov [already_rolled_f],00
mov [dive_beam_f],00
mov [near_miss_f],00
mov [freeform_jump_f],00
mov [ledge_drop_f],00
mov [eject_clamp_f],00
mov [swan_dive_f],00
mov [on_water_f],00
push ebp
mov ebp,esp
mov eax,[ebp+10]

exit12:
jmp returnhere12

"ACRSP.exe"+173AA80:
jmp on_nso
nop
returnhere12:


alloc(on_air,2048)
label(returnhere13)
label(exit13)

on_air:
mov [walk_strength],(float)1
mov [walk_mode_index],00
mov [on_air_f],01
mov ebp,[ebx+04]
mov [esp+04],ebp

exit13:
jmp returnhere13

"ACRSP.exe"+701CBD:
jmp on_air
nop 2
returnhere13:


alloc(on_ledge_grab,2048)
label(returnhere14)
label(exit14)

on_ledge_grab:
mov [already_rolled_f],00
mov [dive_beam_f],00
mov [near_miss_f],00
mov [freeform_jump_f],00
mov [on_vault_f],00
mov [vault_inner_ledge_f],00
mov [ledge_drop_f],00
mov [swan_dive_f],00
mov ebp,esp
cmp dword ptr [ebp+08],00

exit14:
jmp returnhere14

"ACRSP.exe"+6A96A1:
jmp on_ledge_grab
nop
returnhere14:


alloc(on_run,2048)
label(returnhere15)
label(exit15)

on_run:
mov [walk_strength],(float)1
mov [walk_mode_index],00
mov [already_rolled_f],00
mov [dive_beam_f],00
mov [near_miss_f],00
mov [freeform_jump_f],00
mov [dismount_hang_free_eject_f],00
mov [on_vault_f],00
mov [swan_dive_f],00
mov edx,[edi]
mov eax,[edx+000007D8]

exit15:
jmp returnhere15

"ACRSP.exe"+160E3CF:
jmp on_run
nop 3
returnhere15:


alloc(on_prescriptive_move,2048)
label(returnhere16)
label(exit16)

on_prescriptive_move:
mov [smooth_fall_f],00
mov [instant_swingoff_f],00
mov ebp,[ebx+04]
mov [esp+04],ebp

exit16:
jmp returnhere16

"ACRSP.exe"+15C352D:
jmp on_prescriptive_move
nop 2
returnhere16:


alloc(on_vault,2048)
label(returnhere17)
label(exit17)

on_vault:
mov [on_nso_f],00
mov [on_ground_f],00
mov [on_air_f],00
mov [on_hang_f],00
mov [on_hang_free_f],00
mov [on_hang_wall_f],00
mov [on_hang_crouch_f],00
mov [on_hang_stand_f],00
mov [on_vault_f],01
mov [already_rolled_f],00
mov [dive_beam_f],00
mov [near_miss_f],00
mov [freeform_jump_f],00
mov [ledge_drop_f],00
mov [eject_clamp_f],00
mov [on_water_f],00
mov [swan_dive_f],00
push ebp
mov ebp,esp
cmp dword ptr [ebp+08],00

exit17:
jmp returnhere17

"ACRSP.exe"+6B50A0:
jmp on_vault
nop 2
returnhere17:


alloc(on_water,2048)
label(returnhere18)
label(exit18)

on_water:
mov [on_nso_f],00
mov [on_ground_f],00
mov [on_air_f],00
mov [on_hang_f],00
mov [on_hang_free_f],00
mov [on_hang_wall_f],00
mov [on_hang_crouch_f],00
mov [on_hang_stand_f],00
mov [already_rolled_f],00
mov [dive_beam_f],00
mov [near_miss_f],00
mov [freeform_jump_f],00
mov [on_vault_f],00
mov [vault_inner_ledge_f],00
mov [ledge_drop_f],00
mov [eject_clamp_f],00
mov [on_water_f],01
mov [swan_dive_f],00
push ebp
mov ebp,esp
mov eax,[ebp+10]

exit18:
jmp returnhere18

"ACRSP.exe"+173C110:
jmp on_water
nop
returnhere18:


[DISABLE]
"ACRSP.exe"+1372F9D:
db 8B 46 08 8B 48 08
//mov eax,[esi+08]
//mov ecx,[eax+08]

"ACRSP.exe"+185C8FB:
db 66 0F D6 46 20
//movq [esi+20],xmm0

"ACRSP.exe"+185C902:
db F3 0F 7E 80 90 01 00 00
//movq xmm0,[eax+00000190]

"ACRSP.exe"+1373432:
db D9 9E 9C 23 00 00
//fstp dword ptr [esi+0000239C]

"ACRSP.exe"+1373353:
db 0F 29 86 C0 23 00 00
//movaps [esi+000023C0],xmm0

"ACRSP.exe"+3ABCB:
db 83 EC 10 85 C0
//sub esp,10
//test eax,eax

"ACRSP.exe"+701FFE:
db D9 5D CC 80 7B 08 00
//fstp dword ptr [ebp-34]
//cmp byte ptr [ebx+08],00

"ACRSP.exe"+696F15:
db 8B 4F 10 8B 51 78
//mov ecx,[edi+10]
//mov edx,[ecx+78]

"ACRSP.exe"+17339CD:
db 8B 6B 04 89 6C 24 04
//mov ebp,[ebx+04]
//mov [esp+04],ebp

"ACRSP.exe"+1614620:
db 55 8B EC 8B 45 10
//push ebp
//mov ebp,esp
//mov eax,[ebp+10]

"ACRSP.exe"+6F4BD4:
db 8B 46 08 8B 90 0C 01 00 00
//mov eax,[esi+08]
//mov edx,[eax+0000010C]

"ACRSP.exe"+173AA80:
db 55 8B EC 8B 45 10
//push ebp
//mov ebp,esp
//mov eax,[ebp+10]

"ACRSP.exe"+701CBD:
db 8B 6B 04 89 6C 24 04
//mov ebp,[ebx+04]
//mov [esp+04],ebp

"ACRSP.exe"+6A96A1:
db 8B EC 83 7D 08 00
//mov ebp,esp
//cmp dword ptr [ebp+08],00

"ACRSP.exe"+160E3CF:
db 8B 17 8B 82 D8 07 00 00
//mov edx,[edi]
//mov eax,[edx+000007D8]

"ACRSP.exe"+15C352D:
db 8B 6B 04 89 6C 24 04
//mov ebp,[ebx+04]
//mov [esp+04],ebp

"ACRSP.exe"+6B50A0:
db 55 8B EC 83 7D 08 00
//push ebp
//mov ebp,esp
//cmp dword ptr [ebp+08],00

"ACRSP.exe"+173C110:
db 55 8B EC 8B 45 10
//push ebp
//mov ebp,esp
//mov eax,[ebp+10]

dealloc(entity)
dealloc(ingame_binds)
dealloc(absolute_input)
dealloc(relative_input)
dealloc(direction_input)
dealloc(get_velocity)
dealloc(get_fall_height)
dealloc(on_hang)
dealloc(on_hang_2)
dealloc(on_ground)
dealloc(on_ground_land)
dealloc(on_nso)
dealloc(on_air)
dealloc(on_ledge_grab)
dealloc(on_run)
dealloc(on_prescriptive_move)
dealloc(on_vault)
dealloc(on_water)
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>22551</Key>
                <Key>22544</Key>
              </Keys>
              <ID>6</ID>
            </Hotkey>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>22551</Key>
                <Key>22544</Key>
              </Keys>
              <ID>7</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>22551</Key>
                <Key>22545</Key>
              </Keys>
              <ID>8</ID>
            </Hotkey>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>17</Key>
                <Key>49</Key>
              </Keys>
              <ID>9</ID>
            </Hotkey>
            <Hotkey>
              <Action>Activate</Action>
              <Keys>
                <Key>17</Key>
                <Key>49</Key>
              </Keys>
              <ID>10</ID>
            </Hotkey>
            <Hotkey>
              <Action>Deactivate</Action>
              <Keys>
                <Key>17</Key>
                <Key>50</Key>
              </Keys>
              <ID>11</ID>
            </Hotkey>
          </Hotkeys>
          <CheatEntries>
            <CheatEntry>
              <ID>12</ID>
              <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>13</ID>
                  <Description>"Ingame Binds Values"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>14</ID>
                      <Description>"Legs"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindLegs</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>15</ID>
                      <Description>"Legs Tap"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindLegsTap</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>16</ID>
                      <Description>"Armed Hand"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindArmedHand</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>17</ID>
                      <Description>"Head"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindHead</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>18</ID>
                      <Description>"Empty Hand"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindEmptyHand</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>19</ID>
                      <Description>"Fists"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindFists</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>20</ID>
                      <Description>"Medicine"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindMedicine</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>21</ID>
                      <Description>"Hidden Blade"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindHiddenBlade</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>22</ID>
                      <Description>"Sword"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindSword</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>23</ID>
                      <Description>"Maps"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindMaps</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>24</ID>
                      <Description>"Menu"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindMenu</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>25</ID>
                      <Description>"Target Lock"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindTargetLock</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>26</ID>
                      <Description>"Contextual Cam"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindContextualCam</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>27</ID>
                      <Description>"High Profile"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindHighProfile</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>28</ID>
                      <Description>"Weapon Wheel"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindWeaponWheel</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>29</ID>
                      <Description>"First Person"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindFirstPerson</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>30</ID>
                      <Description>"Center Cam"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>bindCenterCam</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>31</ID>
                      <Description>"Input Horizontal"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>absolute_input_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>32</ID>
                      <Description>"Input Vertical"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>absolute_input_f+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>33</ID>
                      <Description>"Cam Input Horizontal"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>absolute_input_cam_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>34</ID>
                      <Description>"Cam Input Vertical"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>absolute_input_cam_f+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>35</ID>
                      <Description>"Relative Input Direction"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>relative_input_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>36</ID>
                      <Description>"X-Axis Input"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>direction_input_f</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>37</ID>
                          <Description>"Y-Axis Input"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Float</VariableType>
                          <Address>+4</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>38</ID>
                  <Description>"Player Values"</Description>
                  <Options moHideChildren="1"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>39</ID>
                      <Description>"pEntity"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pEntity</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>40</ID>
                      <Description>"X-axis Pointer (South Positive)"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>pEntity</Address>
                      <Offsets>
                        <Offset>40</Offset>
                      </Offsets>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>41</ID>
                          <Description>"Y-Axis (East Positive)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>C0C0C0</Color>
                          <VariableType>Float</VariableType>
                          <Address>+4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>42</ID>
                          <Description>"Z-Axis (Height)"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>C0C0C0</Color>
                          <VariableType>Float</VariableType>
                          <Address>+8</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>43</ID>
                          <Description>"Face East"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>C0C0C0</Color>
                          <VariableType>Float</VariableType>
                          <Address>-20</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>44</ID>
                          <Description>"Face North"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>C0C0C0</Color>
                          <VariableType>Float</VariableType>
                          <Address>-1C</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>45</ID>
                          <Description>"Face North"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>C0C0C0</Color>
                          <VariableType>Float</VariableType>
                          <Address>-30</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>46</ID>
                          <Description>"Face West"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <Color>C0C0C0</Color>
                          <VariableType>Float</VariableType>
                          <Address>-2C</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>47</ID>
                      <Description>"X-Axis Speed"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>player_velocity</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>48</ID>
                          <Description>"Y-Axis Speed"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Float</VariableType>
                          <Address>+4</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>49</ID>
                          <Description>"Z-Axis / Vertical Speed"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Float</VariableType>
                          <Address>+8</Address>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>50</ID>
                      <Description>"Horizontal Speed"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>horizontal_velocity</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>51</ID>
                      <Description>"On Ground"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>on_ground_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>52</ID>
                      <Description>"On NSO"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>on_nso_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>53</ID>
                      <Description>"On Hang"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>on_hang_f</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>54</ID>
                          <Description>"On Hang Free"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Byte</VariableType>
                          <Address>on_hang_free_f</Address>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>55</ID>
                          <Description>"On Hang Wall"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Byte</VariableType>
                          <Address>on_hang_wall_f</Address>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>56</ID>
                              <Description>"On Hang Crouch"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>on_hang_crouch_f</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>57</ID>
                              <Description>"On Hang Stand"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>on_hang_stand_f</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>58</ID>
                      <Description>"On Vault"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>on_vault_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>59</ID>
                      <Description>"On Air"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>on_air_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>60</ID>
                      <Description>"On Water"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Byte</VariableType>
                      <Address>on_water_f</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>61</ID>
                      <Description>"Fall Height"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>fall_height</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>62</ID>
                      <Description>"Ground Walk Strength"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Float</VariableType>
                      <Address>walk_strength</Address>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>63</ID>
                          <Description>"Walk Cycle Max"</Description>
                          <ShowAsSigned>0</ShowAsSigned>
                          <VariableType>Byte</VariableType>
                          <Address>walk_mode_cycle</Address>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>64</ID>
                              <Description>"Walk Strength Default"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Float</VariableType>
                              <Address>walk_strength_table</Address>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>65</ID>
                                  <Description>"Walk Strength 2"</Description>
                                  <ShowAsSigned>0</ShowAsSigned>
                                  <VariableType>Float</VariableType>
                                  <Address>+4</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>66</ID>
                                  <Description>"Walk Strength 3"</Description>
                                  <ShowAsSigned>0</ShowAsSigned>
                                  <VariableType>Float</VariableType>
                                  <Address>+8</Address>
                                </CheatEntry>
                                <CheatEntry>
                                  <ID>67</ID>
                                  <Description>"Walk Strength 4"</Description>
                                  <ShowAsSigned>0</ShowAsSigned>
                                  <VariableType>Float</VariableType>
                                  <Address>+C</Address>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>69</ID>
                  <Description>"Binds"</Description>
                  <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
alloc(binds,5120)
label(returnhere)
label(originalcode)
label(exit)

// Labels for activation code
label(vault_controller)
label(parkour_down_controller)
label(forced_hang_controller)
label(parkour_far_controller)
label(freeform_controller)
label(forced_step_controller)
label(beam_drop_controller)
label(beam_drop_2_controller)
label(soft_land_controller)
label(kiosk_moves_controller)
label(kiosk_moves_2_controller)
label(near_miss_controller)
label(swan_dive_controller)
label(horse_flip_controller)

label(vault_kbm)
label(walk_kbm)
label(walk_kbm_2)
label(walk_kbm_reset)
label(parkour_down_kbm)
label(forced_hang_kbm)
label(parkour_far_kbm)
label(freeform_kbm)
label(forced_step_kbm)
label(beam_drop_kbm)
label(beam_drop_2_kbm)
label(soft_land_kbm)
label(kiosk_moves_kbm)
label(kiosk_moves_2_kbm)
label(near_miss_kbm)
label(swan_dive_kbm)
label(horse_flip_kbm)

label(swing_up)
label(parkour_down_low)
label(dive_beam)
label(dive_beam_far)
label(short_freeform)
label(far_freeform)
label(dismount)
label(vault_inner_ledge)
label(vault_landing_far)
label(vault_landing_low)
label(ledge_drop)
label(ledge_drop_2)
label(lamp_drop)
label(disable_ledge_grab)
label(forced_ledge_grab)
label(hang_to_hang)
label(vanilla_beam_entry)
label(ground_roll)
label(forced_ground_roll)
label(kiosk_swing)
label(inner_kiosk)
label(forced_kiosk)
label(kiosk_swing)
label(kiosk_cancel)
label(self_swing)
label(drop_to_fall)
label(dive_beam_alt)
label(dive_beam_alt_2)
label(forced_hang_alt)
label(forced_hook_climb_leap)
label(forced_hook_climb_leap_double)
label(forced_hook_climb_leap_rehook)
label(forced_hook_climb_leap_hang)
label(forced_hook_pull_up)

// Labels for deactivation code
label(kiosk_roll_disable)
label(kiosk_swing_disable)
label(vault_inner_ledge_disable)
label(freeform_disable)
label(dismount_disable)
label(forced_step_disable)
label(forced_hang_disable)
label(parkour_down_disable)
label(ground_roll_disable)
label(vault_landing_low_disable)
label(near_miss_disable)
label(parkour_down_low_disable)
label(swing_up_disable)
label(swan_dive_disable)
label(forced_ledge_grab_disable)
label(dive_beam_alt_disable)
label(forced_hang_alt_disable)
label(forced_hook_climb_leap_rehook_disable)

globalalloc(buttonA,1)          // Button A
globalalloc(buttonX,1)          // Button X
globalalloc(buttonY,1)          // Button Y
globalalloc(buttonB,1)          // Button B
globalalloc(buttonLB,1)         // Left Bumper
globalalloc(buttonRB,1)         // Right Bumper
globalalloc(buttonLT,1)         // Left Trigger
globalalloc(buttonRT,1)         // Right Trigger
globalalloc(buttonLS,1)         // Left Stick Button
globalalloc(buttonRS,1)         // Right Stick Button
globalalloc(buttonDPadUp,1)     // D-Pad Up
globalalloc(buttonDPadDown,1)   // D-Pad Down
globalalloc(buttonDPadLeft,1)   // D-Pad Left
globalalloc(buttonDPadRight,1)  // D-Pad Right
globalalloc(buttonStart,1)      // Start Button
globalalloc(buttonBack,1)       // Back Button

globalalloc(keyMB1,1)           // Left Click
globalalloc(keyMB2,1)           // Right Click
globalalloc(keyMB3,1)           // Scroll Wheel Click
globalalloc(keyMB4,1)           // Side Button 1
globalalloc(keyMB5,1)           // Side Button 2
globalalloc(keyESC,1)           // Escape
globalalloc(key1,1)             // '1'
globalalloc(key2,1)             // '2'
globalalloc(key3,1)             // '3'
globalalloc(key4,1)             // '4'
globalalloc(key5,1)             // '5'
globalalloc(key6,1)             // '6'
globalalloc(key7,1)             // '7'
globalalloc(key8,1)             // '8'
globalalloc(key9,1)             // '9'
globalalloc(key0,1)             // '0'
globalalloc(keyMinus,1)         // '-'
globalalloc(keyEquals,1)        // '='
globalalloc(keyBackspace,1)     // Backspace
globalalloc(keyTab,1)           // Tab
globalalloc(keyQ,1)             // 'Q'
globalalloc(keyW,1)             // 'W'
globalalloc(keyE,1)             // 'E'
globalalloc(keyR,1)             // 'R'
globalalloc(keyT,1)             // 'T'
globalalloc(keyY,1)             // 'Y'
globalalloc(keyU,1)             // 'U'
globalalloc(keyI,1)             // 'I'
globalalloc(keyO,1)             // 'O'
globalalloc(keyP,1)             // 'P'
globalalloc(keyLeftBracket,1)   // '['
globalalloc(keyRightBracket,1)  // ']'
globalalloc(keyEnter,1)         // Enter
globalalloc(keyCapsLock,1)      // Caps Lock
globalalloc(keyA,1)             // 'A'
globalalloc(keyS,1)             // 'S'
globalalloc(keyD,1)             // 'D'
globalalloc(keyF,1)             // 'F'
globalalloc(keyG,1)             // 'G'
globalalloc(keyH,1)             // 'H'
globalalloc(keyJ,1)             // 'J'
globalalloc(keyK,1)             // 'K'
globalalloc(keyL,1)             // 'L'
globalalloc(keySemicolon,1)     // ';'
globalalloc(keyApostrophe,1)    // '''
globalalloc(keyBackslash,1)     // '\'
globalalloc(keyBacktick,1)      // '`'
globalalloc(keyLeftShift,1)     // Left Shift
globalalloc(keyZ,1)             // 'Z'
globalalloc(keyX,1)             // 'X'
globalalloc(keyC,1)             // 'C'
globalalloc(keyV,1)             // 'V'
globalalloc(keyB,1)             // 'B'
globalalloc(keyN,1)             // 'N'
globalalloc(keyM,1)             // 'M'
globalalloc(keyComma,1)         // ','
globalalloc(keyPeriod,1)        // '.'
globalalloc(keySlash,1)         // '/'
globalalloc(keyRightShift,1)    // Right Shift
globalalloc(keyLeftCtrl,1)      // Left Control
globalalloc(keyLeftAlt,1)       // Left Alt
globalalloc(keySpace,1)         // Spacebar
globalalloc(keyRightAlt,1)      // Right Alt
globalalloc(keyRightCtrl,1)     // Right Control
globalalloc(keyInsert,1)        // Insert
globalalloc(keyDelete,1)        // Delete
globalalloc(keyHome,1)          // Home
globalalloc(keyEnd,1)           // End
globalalloc(keyPageUp,1)        // Page Up
globalalloc(keyPageDown,1)      // Page Down
globalalloc(keyArrowUp,1)       // Arrow Up
globalalloc(keyArrowDown,1)     // Arrow Down
globalalloc(keyArrowLeft,1)     // Arrow Left
globalalloc(keyArrowRight,1)    // Arrow Right
globalalloc(keyF1,1)            // F1
globalalloc(keyF2,1)            // F2
globalalloc(keyF3,1)            // F3
globalalloc(keyF4,1)            // F4
globalalloc(keyF5,1)            // F5
globalalloc(keyF6,1)            // F6
globalalloc(keyF7,1)            // F7
globalalloc(keyF8,1)            // F8
globalalloc(keyF9,1)            // F9
globalalloc(keyF10,1)           // F10
globalalloc(keyF11,1)           // F11
globalalloc(keyF12,1)           // F12

globalalloc(bindLegs,1)
globalalloc(bindLegsTap,1)
globalalloc(bindEmptyHand,1)
globalalloc(bindHighProfile,1)

globalalloc(parkour_mode_prev,1)
globalalloc(parkour_mode_hold,1)
globalalloc(parkour_mode_enable,1)
globalalloc(vault_enable,1)
globalalloc(parkour_down_enable,1)
globalalloc(forced_hang_enable,1)
globalalloc(parkour_far_enable,1)
globalalloc(forced_step_enable,1)
globalalloc(dive_beam_enable,1)
globalalloc(dive_beam_far_enable,1)
globalalloc(vault_inner_ledge_enable,1)
globalalloc(parkour_down_low_enable,1)
globalalloc(ledge_drop_enable,1)
globalalloc(ledge_drop_always,1)
globalalloc(beam_drop_enable,1)
globalalloc(lamp_drop_enable,1)
globalalloc(freeform_enable,1)
globalalloc(hang_to_hang_enable,1)
globalalloc(vanilla_beam_entry_enable,1)
globalalloc(ground_roll_enable,1)
globalalloc(ground_roll_alt_enable,1)
globalalloc(soft_land_enable,1)
globalalloc(forced_ground_roll_enable,1)
globalalloc(kiosk_roll_enable,1)
globalalloc(kiosk_swing_enable,1)
globalalloc(forced_kiosk_enable,1)
globalalloc(kiosk_cancel_enable,1)
globalalloc(short_freeform_enable,1)
globalalloc(far_freeform_enable,1)
globalalloc(near_miss_enable,1)
globalalloc(dismount_enable,1)
globalalloc(vault_landing_low_enable,1)
globalalloc(vault_landing_far_enable,1)
globalalloc(vault_step_enable,1)
globalalloc(swing_up_enable,1)
globalalloc(swan_dive_enable,1)
globalalloc(disable_ledge_grab_enable,1)
globalalloc(forced_ledge_grab_enable,1)
globalalloc(self_swing_enable,1)
globalalloc(drop_to_fall_enable,1)
globalalloc(dive_beam_alt_enable,1)
globalalloc(forced_hang_alt_enable,1)
globalalloc(horse_flip_enable,1)
globalalloc(forced_hook_climb_leap_enable,1)
globalalloc(forced_hook_climb_leap_double_enable,1)
globalalloc(forced_hook_climb_leap_rehook_enable,1)
globalalloc(forced_hook_climb_leap_hang_enable,1)
globalalloc(forced_hook_pull_up_enable,1)

globalalloc(on_hang_free_f,1)
globalalloc(on_vault_f,1)

globalalloc(walk_mode_index,1)
globalalloc(walk_prev,1)
globalalloc(walk_mode_cycle,1)
globalalloc(walk_strength_table,16)
globalalloc(walk_strength,4)

walk_mode_index:
db 00

walk_mode_cycle:
db 03

walk_strength_table:
dd (float)1.0 (float)0.8 (float)0.6 (float)0.4

walk_strength:
dd (float)1

binds:
mov [parkour_mode_hold],00
mov [vault_enable],00
mov [freeform_enable],00
mov [parkour_down_enable],00
mov [forced_hang_enable],00
mov [parkour_far_enable],00
mov [forced_step_enable],00
mov [dive_beam_enable],00
mov [dive_beam_far_enable],00
mov [vault_inner_ledge_enable],00
mov [parkour_down_low_enable],00
mov [ledge_drop_enable],00
mov [beam_drop_enable],00
mov [lamp_drop_enable],00
mov [hang_to_hang_enable],00
mov [vanilla_beam_entry_enable],00
mov [ground_roll_enable],00
mov [ground_roll_alt_enable],00
mov [soft_land_enable],00
mov [forced_ground_roll_enable],00
mov [kiosk_roll_enable],00
mov [kiosk_swing_enable],00
mov [forced_kiosk_enable],00
mov [kiosk_cancel_enable],00
mov [short_freeform_enable],00
mov [far_freeform_enable],00
mov [near_miss_enable],00
mov [dismount_enable],00
mov [vault_landing_low_enable],00
mov [vault_landing_far_enable],00
mov [vault_step_enable],00
mov [swing_up_enable],00
mov [swan_dive_enable],00
mov [disable_ledge_grab_enable],00
mov [forced_ledge_grab_enable],00
mov [self_swing_enable],00
mov [drop_to_fall_enable],00
mov [dive_beam_alt_enable],00
mov [forced_hang_alt_enable],00
mov [horse_flip_enable],00
mov [forced_hook_climb_leap_enable],00
mov [forced_hook_climb_leap_double_enable],00
mov [forced_hook_climb_leap_rehook_enable],00
mov [forced_hook_climb_leap_hang_enable],00
mov [forced_hook_pull_up_enable],00

// Controller Activation Code
parkour_mode_controller:
cmp byte ptr [buttonRS],00
je vault_controller
mov [parkour_mode_hold],01

vault_controller:
cmp byte ptr [buttonX],00
je parkour_down_controller
mov [vault_enable],01

parkour_down_controller:
cmp byte ptr [buttonLB],00
je forced_hang_controller
mov [parkour_down_enable],01

forced_hang_controller:
cmp byte ptr [buttonRB],00
je parkour_far_controller
mov [forced_hang_enable],01

parkour_far_controller:
cmp byte ptr [buttonLT],00
je freeform_controller
mov [parkour_far_enable],01

freeform_controller:
cmp byte ptr [buttonLS],00
je forced_step_controller
mov [freeform_enable],01

forced_step_controller:
cmp byte ptr [buttonY],00
je beam_drop_controller
cmp byte ptr [buttonLB],00
je beam_drop_controller
cmp byte ptr [buttonLT],00
je beam_drop_controller
mov [forced_step_enable],01

beam_drop_controller:
cmp byte ptr [buttonB],00
je soft_land_controller
cmp byte ptr [buttonLB],01
je beam_drop_2_controller
cmp byte ptr [buttonLS],01
je beam_drop_2_controller
jmp soft_land_controller

beam_drop_2_controller:
mov [beam_drop_enable],01

soft_land_controller:
cmp byte ptr [buttonY],00
je kiosk_moves_controller
mov [soft_land_enable],01

kiosk_moves_controller:
cmp byte ptr [buttonY],00
je kiosk_moves_2_controller
mov [kiosk_roll_enable],01
jmp near_miss_controller

kiosk_moves_2_controller:
cmp byte ptr [kiosk_roll_enable],01
jne near_miss_controller
cmp byte ptr [on_hang_free_f],01
jne near_miss_controller
mov byte ptr [esi+18],01

near_miss_controller:
cmp byte ptr [buttonLS],00
je swan_dive_controller
cmp byte ptr [buttonRB],00
je swan_dive_controller
mov [near_miss_enable],01

swan_dive_controller:
cmp byte ptr [buttonLS],00
je horse_flip_controller
cmp byte ptr [buttonX],00
je horse_flip_controller
mov [swan_dive_enable],01

horse_flip_controller:
cmp byte ptr [buttonX],00
je parkour_mode_kbm
cmp byte ptr [buttonA],01
je parkour_mode_kbm
mov [horse_flip_enable],01
cmp byte ptr [on_hang_free_f],01
jne parkour_mode_kbm
mov [vault_enable],00
mov byte ptr [esi+18],01
cmp byte ptr [parkour_far_enable],00
je parkour_mode_kbm
cmp byte ptr [bindHighProfile],01
je parkour_mode_kbm
mov [swing_up_enable],01
mov byte ptr [esi+24],01

// KBM Activation Code
parkour_mode_kbm:
cmp byte ptr [keyG],00
je walk_kbm
mov [parkour_mode_hold],01

walk_kbm:
cmp byte ptr [keyLeftAlt],00
je walk_kbm_reset
cmp byte ptr [walk_prev],00
jne vault_kbm
mov [walk_prev],01
inc byte ptr [walk_mode_index]
mov al,[walk_mode_index]
cmp al,[walk_mode_cycle]
jb walk_kbm_2
mov [walk_mode_index],0

walk_kbm_2:
movzx eax, byte [walk_mode_index]
mov eax,[walk_strength_table+eax*4]
mov [walk_strength],eax
jmp vault_kbm

walk_kbm_reset:
mov byte ptr [walk_prev],00

vault_kbm:
cmp byte ptr [keyCapsLock],00
je parkour_down_kbm
mov [vault_enable],01

parkour_down_kbm:
cmp byte ptr [keyMB4],00
je forced_hang_kbm
mov [parkour_down_enable],01

forced_hang_kbm:
cmp byte ptr [keyLeftCtrl],00
je parkour_far_kbm
mov [forced_hang_enable],01

parkour_far_kbm:
cmp byte ptr [keyMB5],00
je freeform_kbm
mov [parkour_far_enable],01

freeform_kbm:
cmp byte ptr [keyTab],00
je forced_step_kbm
mov [freeform_enable],01

forced_step_kbm:
cmp byte ptr [keyE],00
je beam_drop_kbm
mov [forced_step_enable],01

beam_drop_kbm:
cmp byte ptr [keyLeftAlt],00
je soft_land_kbm
cmp byte ptr [keyMB4],00
jne beam_drop_2_kbm
cmp byte ptr [keyLeftCtrl],00
jne beam_drop_2_kbm
mov [beam_drop_enable],01
mov [freeform_enable],01
jmp soft_land_kbm

beam_drop_2_kbm:
mov [beam_drop_enable],01

soft_land_kbm:
cmp byte ptr [keyE],00
je kiosk_moves_kbm
mov [soft_land_enable],01

kiosk_moves_kbm:
cmp byte ptr [keyX],00
je kiosk_moves_2_kbm
mov [kiosk_roll_enable],01
jmp near_miss_kbm

kiosk_moves_2_kbm:
cmp byte ptr [kiosk_roll_enable],01
jne near_miss_kbm
cmp byte ptr [on_hang_free_f],01
jne near_miss_kbm
mov byte ptr [esi+18],01

near_miss_kbm:
cmp byte ptr [keyTab],00
je swan_dive_kbm
cmp byte ptr [keyMB3],00
je swan_dive_kbm
mov [near_miss_enable],01

swan_dive_kbm:
cmp byte ptr [keyTab],00
je horse_flip_kbm
cmp byte ptr [keyLeftCtrl],00
je horse_flip_kbm
mov [swan_dive_enable],01

horse_flip_kbm:
cmp byte ptr [keyC],00
je parkour_mode
mov [horse_flip_enable],01
cmp byte ptr [on_hang_free_f],01
jne parkour_mode
mov byte ptr [esi+18],01

// Activation Code
parkour_mode:
cmp byte ptr [parkour_mode_hold],00
je parkour_mode_2
cmp byte ptr [parkour_mode_prev],01
je swing_up
xor byte ptr [parkour_mode_enable],01
mov [parkour_mode_prev],01
jmp swing_up

parkour_mode_2:
mov [parkour_mode_prev],00

swing_up:
cmp byte ptr [parkour_far_enable],00
je parkour_down_low
cmp byte ptr [bindHighProfile],01
je parkour_down_low
cmp byte ptr [bindLegs],00
je parkour_down_low
mov [swing_up_enable],01
cmp byte ptr [on_hang_free_f],01
jne parkour_down_low
mov byte ptr [esi+18],01
mov byte ptr [esi+24],01

parkour_down_low:
cmp byte ptr [parkour_down_enable],00
je dive_beam
cmp byte ptr [parkour_far_enable],00
je dive_beam
mov [parkour_down_low_enable],01

dive_beam:
cmp byte ptr [forced_hang_enable],00
je dive_beam_far
cmp byte ptr [parkour_down_enable],00
je dive_beam_far
cmp byte ptr [bindHighProfile],00
je dive_beam_far
mov [dive_beam_enable],01

dive_beam_far:
cmp byte ptr [forced_hang_enable],00
je short_freeform
cmp byte ptr [parkour_far_enable],00
je short_freeform
cmp byte ptr [bindHighProfile],00
je short_freeform
mov [dive_beam_far_enable],01

short_freeform:
cmp byte ptr [freeform_enable],00
je far_freeform
cmp byte ptr [parkour_down_enable],00
je far_freeform
mov [short_freeform_enable],01

far_freeform:
cmp byte ptr [freeform_enable],00
je dismount
cmp byte ptr [parkour_far_enable],00
je dismount
mov [far_freeform_enable],01

dismount:
cmp byte ptr [freeform_enable],00
je vault_inner_ledge
cmp byte ptr [parkour_down_low_enable],00
je vault_inner_ledge
mov [dismount_enable],01

vault_inner_ledge:
cmp byte ptr [parkour_down_low_enable],00
je vault_landing_far
cmp byte ptr [vault_enable],00
je vault_landing_far
mov [vault_inner_ledge_enable],01

vault_landing_far:
cmp byte ptr [parkour_far_enable],00
je vault_landing_low
mov [vault_landing_far_enable],01
cmp byte ptr [on_vault_f],00
je vault_landing_low
cmp byte ptr [bindLegs],00
je vault_landing_low
cmp byte ptr [bindHighProfile],01
je vault_landing_low
mov [vault_step_enable],01

vault_landing_low:
cmp byte ptr [parkour_down_enable],00
je ledge_drop
mov [vault_landing_low_enable],01
cmp byte ptr [on_vault_f],00
je ledge_drop
cmp byte ptr [bindLegs],00
je ledge_drop
cmp byte ptr [bindHighProfile],01
je ledge_drop
mov [vault_step_enable],01

ledge_drop:
cmp byte ptr [ledge_drop_always],01
je ledge_drop_2
cmp byte ptr [parkour_down_enable],01
je ledge_drop_2
cmp byte ptr [freeform_enable],01
je ledge_drop_2
jmp lamp_drop

ledge_drop_2:
mov [ledge_drop_enable],01

lamp_drop:
cmp byte ptr [bindEmptyHand],00
je disable_ledge_grab
mov [lamp_drop_enable],01

disable_ledge_grab:
cmp byte ptr [freeform_enable],00
je forced_ledge_grab
mov [disable_ledge_grab_enable],01

forced_ledge_grab:
cmp byte ptr [bindEmptyHand],00
je hang_to_hang
cmp byte ptr [bindHighProfile],00
je hang_to_hang
cmp byte ptr [bindLegs],01
je hang_to_hang
mov [forced_ledge_grab_enable],01

hang_to_hang:
cmp byte ptr [bindLegs],00
je vanilla_beam_entry
cmp byte ptr [bindHighProfile],01
je vanilla_beam_entry
mov [hang_to_hang_enable],01

vanilla_beam_entry:
cmp byte ptr [bindLegs],00
je ground_roll
cmp byte ptr [bindEmptyHand],01
je ground_roll
cmp byte ptr [bindHighProfile],01
je ground_roll
cmp byte ptr [vault_enable],01
je ground_roll
cmp byte ptr [parkour_down_enable],01
je ground_roll
cmp byte ptr [parkour_far_enable],01
je ground_roll
cmp byte ptr [freeform_enable],01
je ground_roll
cmp byte ptr [forced_hang_enable],01
je ground_roll
cmp byte ptr [forced_step_enable],01
je ground_roll
cmp byte ptr [beam_drop_enable],01
je ground_roll
cmp byte ptr [kiosk_roll_enable],01
je ground_roll
cmp byte ptr [soft_land_enable],01
je ground_roll
mov [vanilla_beam_entry_enable],01

ground_roll:
cmp byte ptr [bindEmptyHand],00
je forced_ground_roll
mov [ground_roll_enable],01

forced_ground_roll:
cmp byte ptr [ground_roll_enable],00
je kiosk_swing
cmp byte ptr [freeform_enable],00
je kiosk_swing
cmp byte ptr [kiosk_roll_enable],01
je kiosk_swing
mov [ground_roll_alt_enable],01
mov [forced_ground_roll_enable],01

kiosk_swing:
cmp byte ptr [kiosk_roll_enable],00
je inner_kiosk
cmp byte ptr [forced_hang_enable],00
je inner_kiosk
mov [kiosk_swing_enable],01

inner_kiosk:
cmp byte ptr [kiosk_roll_enable],00
je forced_kiosk
cmp byte ptr [parkour_down_enable],00
je forced_kiosk
mov [parkour_down_low_enable],01

forced_kiosk:
cmp byte ptr [kiosk_roll_enable],00
je kiosk_cancel
cmp byte ptr [freeform_enable],00
je kiosk_cancel
mov [forced_kiosk_enable],01
mov [freeform_enable],01

kiosk_cancel:
cmp byte ptr [bindEmptyHand],00
je self_swing
cmp byte ptr [kiosk_roll_enable],01
je self_swing
mov [kiosk_cancel_enable],01

self_swing:
cmp byte ptr [bindEmptyHand],00
je drop_to_fall
cmp byte ptr [bindLegs],00
je drop_to_fall
cmp byte ptr [forced_hang_enable],00
je drop_to_fall
mov [self_swing_enable],01

drop_to_fall:
cmp byte ptr [freeform_enable],00
je dive_beam_alt
cmp byte ptr [bindLegs],01
je dive_beam_alt
cmp byte ptr [bindEmptyHand],01
je drop_to_fall_2
cmp byte ptr [vault_enable],01
je drop_to_fall_2
jmp dive_beam_alt

drop_to_fall_2:
mov [drop_to_fall_enable],01

dive_beam_alt:
cmp byte ptr [vault_enable],00
je forced_hang_alt
cmp byte ptr [dive_beam_enable],01
je dive_beam_alt_2
cmp byte ptr [dive_beam_far_enable],01
je dive_beam_alt_2
jmp forced_hang_alt

dive_beam_alt_2:
mov [dive_beam_alt_enable],01

forced_hang_alt:
cmp byte ptr [vault_enable],00
je forced_hook_climb_leap
cmp byte ptr [forced_hang_enable],00
je forced_hook_climb_leap
mov [forced_hang_alt_enable],01

forced_hook_climb_leap:
cmp byte ptr [parkour_down_enable],00
je forced_hook_climb_leap_double
mov [forced_hook_climb_leap_enable],01

forced_hook_climb_leap_double:
cmp byte ptr [parkour_far_enable],00
je forced_hook_climb_leap_rehook
mov [forced_hook_climb_leap_double_enable],01

forced_hook_climb_leap_rehook:
cmp byte ptr [parkour_down_enable],00
je forced_hook_climb_leap_hang
cmp byte ptr [parkour_far_enable],00
je forced_hook_climb_leap_hang
mov [forced_hook_climb_leap_rehook_enable],01

forced_hook_climb_leap_hang:
cmp byte ptr [forced_hang_enable],00
je forced_hook_pull_up
mov [forced_hook_climb_leap_hang_enable],01

forced_hook_pull_up:
cmp byte ptr [vault_enable],00
je kiosk_roll_disable
mov [forced_hook_pull_up_enable],01

// Deactivation Code
kiosk_roll_disable:
cmp byte ptr [kiosk_roll_enable],00
je kiosk_swing_disable
mov [vault_enable],00

kiosk_swing_disable:
cmp byte ptr [kiosk_swing_enable],00
je dive_beam_alt_disable
mov [beam_drop_enable],00
mov [swan_dive_enable],00
mov [forced_hang_enable],00
mov [dive_beam_far_enable],00

dive_beam_alt_disable:
cmp byte ptr [dive_beam_alt_enable],00
je forced_hang_alt_disable
mov [vault_enable],00
mov [vault_inner_ledge_enable],00
mov [forced_hang_alt_enable],00

forced_hang_alt_disable:
cmp byte ptr [forced_hang_alt_enable],00
je vault_inner_ledge_disable
mov [vault_enable],00

vault_inner_ledge_disable:
cmp byte ptr [vault_inner_ledge_enable],00
je dismount_disable
mov [parkour_down_low_enable],00
mov [parkour_far_enable],00
mov [horse_flip_enable],00

dismount_disable:
cmp byte ptr [dismount_enable],00
je forced_step_disable
mov [short_freeform_enable],00
mov [far_freeform_enable],00

forced_step_disable:
cmp byte ptr [forced_step_enable],00
je forced_hang_disable
mov [parkour_down_enable],00
mov [parkour_far_enable],00
mov [parkour_down_low_enable],00
mov [vault_landing_low_enable],00
mov [kiosk_roll_enable],00

forced_hang_disable:
cmp byte ptr [forced_hang_enable],00
je parkour_down_disable
mov [forced_step_enable],00

parkour_down_disable:
cmp byte ptr [parkour_down_enable],00
je ground_roll_disable
mov [parkour_far_enable],00

ground_roll_disable:
cmp byte ptr [ground_roll_enable],00
je vault_landing_low_disable
mov [soft_land_enable],00

vault_landing_low_disable:
cmp byte ptr [vault_landing_low_enable],00
je near_miss_disable
mov [vault_landing_far_enable],00

near_miss_disable:
cmp byte ptr [near_miss_enable],00
je freeform_disable
mov [vault_enable],00
mov [freeform_enable],00
mov [short_freeform_enable],00
mov [far_freeform_enable],00
mov [forced_hang_enable],00
mov [dive_beam_enable],00
mov [dive_beam_far_enable],00
mov [self_swing_enable],00
mov [drop_to_fall_enable],00

freeform_disable:
cmp byte ptr [freeform_enable],00
je parkour_down_low_disable
mov [forced_step_enable],00

parkour_down_low_disable:
cmp byte ptr [parkour_down_low_enable],00
je swing_up_disable
mov [dive_beam_far_enable],00
mov [parkour_down_enable],00
mov [swing_up_enable],00

swing_up_disable:
cmp byte ptr [swing_up_enable],00
je swan_dive_disable
mov [parkour_far_enable],00
mov [dive_beam_far_enable],00

swan_dive_disable:
cmp byte ptr [swan_dive_enable],00
je forced_ledge_grab_disable
mov [forced_ground_roll_enable],00

forced_ledge_grab_disable:
cmp byte ptr [forced_ledge_grab_enable],00
je forced_hook_climb_leap_rehook_disable
mov [disable_ledge_grab_enable],00

forced_hook_climb_leap_rehook_disable:
cmp byte ptr [forced_hook_climb_leap_rehook_enable],00
je originalcode
mov [forced_hook_climb_leap_enable],00
mov [forced_hook_climb_leap_double_enable],00

originalcode:
movq [esi+000001A8],xmm0

exit:
jmp returnhere

"ACRSP.exe"+185C937:
jmp binds
nop 3
returnhere:


alloc(controller,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

controller:
mov bl,[esi+18]
mov [buttonA],bl

mov bl,[esi+19]
mov [buttonX],bl

mov bl,[esi+1A]
mov [buttonY],bl

mov bl,[esi+1B]
mov [buttonB],bl

mov bl,[esi+1C]
mov [buttonDPadDown],bl

mov bl,[esi+1D]
mov [buttonDPadLeft],bl

mov bl,[esi+1E]
mov [buttonDPadUp],bl

mov bl,[esi+1F]
mov [buttonDPadRight],bl

mov bl,[esi+20]
mov [buttonBack],bl

mov bl,[esi+21]
mov [buttonStart],bl

mov bl,[esi+22]
mov [buttonLT],bl

mov bl,[esi+23]
mov [buttonLB],bl

mov bl,[esi+24]
mov [buttonRT],bl

mov bl,[esi+25]
mov [buttonRB],bl

mov bl,[esi+26]
mov [buttonLS],bl

mov bl,[esi+27]
mov [buttonRS],bl

originalcode2:
movq xmm0,[esi+18]

exit2:
jmp returnhere2

"ACRSP.exe"+185DEFF:
jmp controller
returnhere2:


alloc(keyboard,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

keyboard:
push edi
lea edi,[eax-08]

mov edx,[edi]
mov [keyMB1],edx

mov edx,[edi+01]
mov [keyMB2],edx

mov edx,[edi+02]
mov [keyMB3],edx

mov edx,[edi+03]
mov [keyMB4],edx

mov edx,[edi+04]
mov [keyMB5],edx

mov edx,[edi+09]
mov [keyESC],edx

mov edx,[edi+0A]
mov [key1],edx

mov edx,[edi+0B]
mov [key2],edx

mov edx,[edi+0C]
mov [key3],edx

mov edx,[edi+0D]
mov [key4],edx

mov edx,[edi+0E]
mov [key5],edx

mov edx,[edi+0F]
mov [key6],edx

mov edx,[edi+10]
mov [key7],edx

mov edx,[edi+11]
mov [key8],edx

mov edx,[edi+12]
mov [key9],edx

mov edx,[edi+13]
mov [key0],edx

mov edx,[edi+14]
mov [keyMinus],edx

mov edx,[edi+15]
mov [keyEquals],edx

mov edx,[edi+16]
mov [keyBackspace],edx

mov edx,[edi+17]
mov [keyTab],edx

mov edx,[edi+18]
mov [keyQ],edx

mov edx,[edi+19]
mov [keyW],edx

mov edx,[edi+1A]
mov [keyE],edx

mov edx,[edi+1B]
mov [keyR],edx

mov edx,[edi+1C]
mov [keyT],edx

mov edx,[edi+1D]
mov [keyY],edx

mov edx,[edi+1E]
mov [keyU],edx

mov edx,[edi+1F]
mov [keyI],edx

mov edx,[edi+20]
mov [keyO],edx

mov edx,[edi+21]
mov [keyP],edx

mov edx,[edi+22]
mov [keyLeftBracket],edx

mov edx,[edi+23]
mov [keyRightBracket],edx

mov edx,[edi+24]
mov [keyEnter],edx

mov edx,[edi+25]
mov [keyLeftCtrl],edx

mov edx,[edi+26]
mov [keyA],edx

mov edx,[edi+27]
mov [keyS],edx

mov edx,[edi+28]
mov [keyD],edx

mov edx,[edi+29]
mov [keyF],edx

mov edx,[edi+2A]
mov [keyG],edx

mov edx,[edi+2B]
mov [keyH],edx

mov edx,[edi+2C]
mov [keyJ],edx

mov edx,[edi+2D]
mov [keyK],edx

mov edx,[edi+2E]
mov [keyL],edx

mov edx,[edi+2F]
mov [keySemicolon],edx

mov edx,[edi+30]
mov [keyApostrophe],edx

mov edx,[edi+31]
mov [keyBacktick],edx

mov edx,[edi+32]
mov [keyLeftShift],edx

mov edx,[edi+33]
mov [keyBackslash],edx

mov edx,[edi+34]
mov [keyZ],edx

mov edx,[edi+35]
mov [keyX],edx

mov edx,[edi+36]
mov [keyC],edx

mov edx,[edi+37]
mov [keyV],edx

mov edx,[edi+38]
mov [keyB],edx

mov edx,[edi+39]
mov [keyN],edx

mov edx,[edi+3A]
mov [keyM],edx

mov edx,[edi+3B]
mov [keyComma],edx

mov edx,[edi+3C]
mov [keyPeriod],edx

mov edx,[edi+3D]
mov [keySlash],edx

mov edx,[edi+3E]
mov [keyRightShift],edx

mov edx,[edi+40]
mov [keyLeftAlt],edx

mov edx,[edi+41]
mov [keySpace],edx

mov edx,[edi+42]
mov [keyCapsLock],edx

mov edx,[edi+43]
mov [keyF1],edx

mov edx,[edi+44]
mov [keyF2],edx

mov edx,[edi+45]
mov [keyF3],edx

mov edx,[edi+46]
mov [keyF4],edx

mov edx,[edi+47]
mov [keyF5],edx

mov edx,[edi+C0]
mov [keyRightAlt],edx

mov edx,[edi+48]
mov [keyF6],edx

mov edx,[edi+49]
mov [keyF7],edx

mov edx,[edi+4A]
mov [keyF8],edx

mov edx,[edi+4B]
mov [keyF9],edx

mov edx,[edi+4C]
mov [keyF10],edx

mov edx,[edi+5F]
mov [keyF11],edx

mov edx,[edi+60]
mov [keyF12],edx

mov edx,[edi+A5]
mov [keyRightCtrl],edx

mov edx,[edi+CF]
mov [keyHome],edx

mov edx,[edi+D0]
mov [keyArrowUp],edx

mov edx,[edi+D1]
mov [keyPageUp],edx

mov edx,[edi+D3]
mov [keyArrowLeft],edx

mov edx,[edi+D5]
mov [keyArrowRight],edx

mov edx,[edi+D7]
mov [keyEnd],edx

mov edx,[edi+D8]
mov [keyArrowDown],edx

mov edx,[edi+D9]
mov [keyPageDown],edx

mov edx,[edi+DA]
mov [keyInsert],edx

mov edx,[edi+DB]
mov [keyDelete],edx

pop edi

originalcode3:
movzx edx,byte ptr [ecx+00022031]

exit3:
jmp returnhere3

"ACRSP.exe"+17C867B:
jmp keyboard
nop 2
returnhere3:


alloc(bind_legs_tap,2048)
label(returnhere4)
label(exit4)

bind_legs_tap:
mov ecx,[esi+0000202A]
mov [bindLegsTap],ecx
mov ecx,edi
call ACRSP.exe+D1100

exit4:
jmp returnhere4

"ACRSP.exe"+13731DE:
jmp bind_legs_tap
nop 2
returnhere4:


[DISABLE]
"ACRSP.exe"+185C937:
db 66 0F D6 86 A8 01 00 00
//movq [esi+000001A8],xmm0

"ACRSP.exe"+185DEFF:
db F3 0F 7E 46 18
//movq xmm0,[esi+18]

"ACRSP.exe"+17C867B:
db 0F B6 91 31 20 02 00
//movzx edx,byte ptr [ecx+00022031]

"ACRSP.exe"+13731DE:
db 8B CF E8 1B DF D5 FE
//mov ecx,edi
//call ACRSP.exe+D1100

dealloc(binds)
dealloc(controller)
dealloc(keyboard)
dealloc(bind_legs_tap)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>100</ID>
                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                      <Options moDeactivateChildrenAsWell="1"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>101</ID>
                          <Description>"Controller Binds Values"</Description>
                          <Options moHideChildren="1"/>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>102</ID>
                              <Description>"A"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonA</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>103</ID>
                              <Description>"X"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonX</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>104</ID>
                              <Description>"Y"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonY</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>105</ID>
                              <Description>"B"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonB</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>106</ID>
                              <Description>"DPad Down"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonDPadDown</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>107</ID>
                              <Description>"DPad Left"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonDPadLeft</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>108</ID>
                              <Description>"DPad Up"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonDPadUp</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>109</ID>
                              <Description>"DPad Right"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonDPadRight</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>110</ID>
                              <Description>"Back"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonBack</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>111</ID>
                              <Description>"Start"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonStart</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>112</ID>
                              <Description>"LT"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonLT</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>113</ID>
                              <Description>"LB"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonLB</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>114</ID>
                              <Description>"RT"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonRT</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>115</ID>
                              <Description>"RB"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonRB</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>116</ID>
                              <Description>"LS"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonLS</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>117</ID>
                              <Description>"RS"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>buttonRS</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>118</ID>
                          <Description>"KBM Binds Values"</Description>
                          <Options moHideChildren="1"/>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>119</ID>
                              <Description>"MB1"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyMB1</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>120</ID>
                              <Description>"MB2"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyMB2</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>121</ID>
                              <Description>"MB3"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyMB3</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>122</ID>
                              <Description>"MB4"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyMB4</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>123</ID>
                              <Description>"MB5"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyMB5</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>124</ID>
                              <Description>"Escape"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyESC</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>125</ID>
                              <Description>"1"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key1</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>126</ID>
                              <Description>"2"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key2</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>127</ID>
                              <Description>"3"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key3</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>128</ID>
                              <Description>"4"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key4</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>129</ID>
                              <Description>"5"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key5</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>130</ID>
                              <Description>"6"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key6</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>131</ID>
                              <Description>"7"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key7</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>132</ID>
                              <Description>"8"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key8</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>133</ID>
                              <Description>"9"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key9</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>134</ID>
                              <Description>"0"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>key0</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>135</ID>
                              <Description>"Minus"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyMinus</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>136</ID>
                              <Description>"Equals"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyEquals</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>137</ID>
                              <Description>"Backspace"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyBackspace</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>138</ID>
                              <Description>"Tab"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyTab</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>139</ID>
                              <Description>"Q"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyQ</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>140</ID>
                              <Description>"W"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyW</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>141</ID>
                              <Description>"E"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyE</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>142</ID>
                              <Description>"R"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyR</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>143</ID>
                              <Description>"T"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyT</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>144</ID>
                              <Description>"Y"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyY</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>145</ID>
                              <Description>"U"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyU</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>146</ID>
                              <Description>"I"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyI</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>147</ID>
                              <Description>"O"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyO</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>148</ID>
                              <Description>"P"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyP</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>149</ID>
                              <Description>"Left Bracket"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyLeftBracket</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>150</ID>
                              <Description>"Right Bracket"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyRightBracket</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>151</ID>
                              <Description>"Enter"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyEnter</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>152</ID>
                              <Description>"Caps Lock"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyCapsLock</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>153</ID>
                              <Description>"A"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyA</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>154</ID>
                              <Description>"S"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyS</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>155</ID>
                              <Description>"D"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyD</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>156</ID>
                              <Description>"F"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>157</ID>
                              <Description>"G"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyG</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>158</ID>
                              <Description>"H"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyH</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>159</ID>
                              <Description>"J"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyJ</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>160</ID>
                              <Description>"K"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyK</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>161</ID>
                              <Description>"L"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyL</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>162</ID>
                              <Description>"Semicolon"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keySemicolon</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>163</ID>
                              <Description>"Apostrophe"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyApostrophe</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>164</ID>
                              <Description>"Backtick"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyBacktick</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>165</ID>
                              <Description>"Left Shift"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyLeftShift</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>166</ID>
                              <Description>"Backslash"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyBackslash</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>167</ID>
                              <Description>"Z"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyZ</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>168</ID>
                              <Description>"X"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyX</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>169</ID>
                              <Description>"C"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyC</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>170</ID>
                              <Description>"V"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyV</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>171</ID>
                              <Description>"B"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyB</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>172</ID>
                              <Description>"N"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyN</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>173</ID>
                              <Description>"M"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyM</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>174</ID>
                              <Description>"Comma"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyComma</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>175</ID>
                              <Description>"Period"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyPeriod</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>176</ID>
                              <Description>"Slash"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keySlash</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>177</ID>
                              <Description>"Right Shift"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyRightShift</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>178</ID>
                              <Description>"Left Ctrl"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyLeftCtrl</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>179</ID>
                              <Description>"Left Alt"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyLeftAlt</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>180</ID>
                              <Description>"Space"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keySpace</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>181</ID>
                              <Description>"Right Alt"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyRightAlt</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>182</ID>
                              <Description>"Right Ctrl"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyRightCtrl</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>183</ID>
                              <Description>"Insert"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyInsert</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>184</ID>
                              <Description>"Delete"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyDelete</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>185</ID>
                              <Description>"Home"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyHome</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>186</ID>
                              <Description>"End"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyEnd</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>187</ID>
                              <Description>"Page Up"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyPageUp</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>188</ID>
                              <Description>"Page Down"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyPageDown</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>189</ID>
                              <Description>"Arrow Up"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyArrowUp</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>190</ID>
                              <Description>"Arrow Down"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyArrowDown</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>191</ID>
                              <Description>"Arrow Left"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyArrowLeft</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>192</ID>
                              <Description>"Arrow Right"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyArrowRight</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>193</ID>
                              <Description>"F1"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF1</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>194</ID>
                              <Description>"F2"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF2</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>195</ID>
                              <Description>"F3"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF3</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>196</ID>
                              <Description>"F4"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF4</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>197</ID>
                              <Description>"F5"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF5</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>198</ID>
                              <Description>"F6"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF6</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>199</ID>
                              <Description>"F7"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF7</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>200</ID>
                              <Description>"F8"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF8</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>201</ID>
                              <Description>"F9"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF9</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>202</ID>
                              <Description>"F10"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF10</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>203</ID>
                              <Description>"F11"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF11</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>204</ID>
                              <Description>"F12"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>keyF12</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>205</ID>
                          <Description>"Function Enable Values"</Description>
                          <Options moHideChildren="1"/>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>206</ID>
                              <Description>"Parkour Mode Toggle"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>parkour_mode_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>207</ID>
                              <Description>"Vault"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>vault_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>208</ID>
                              <Description>"Parkour Down"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>parkour_down_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>209</ID>
                              <Description>"Parkour Down Low"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>parkour_down_low_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>210</ID>
                              <Description>"Forced Hang"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_hang_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>211</ID>
                              <Description>"Parkour Far"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>parkour_far_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>212</ID>
                              <Description>"Forced Step"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_step_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>213</ID>
                              <Description>"Dive Beam"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>dive_beam_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>214</ID>
                              <Description>"Dive Beam Far"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>dive_beam_far_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>215</ID>
                              <Description>"Freeform"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>freeform_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>216</ID>
                              <Description>"Short Freeform"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>short_freeform_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>217</ID>
                              <Description>"Far Freeform"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>far_freeform_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>218</ID>
                              <Description>"Dismount"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>dismount_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>219</ID>
                              <Description>"Vault Inner Ledge"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>vault_inner_ledge_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>220</ID>
                              <Description>"Vault Landing Low"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>vault_landing_low_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>221</ID>
                              <Description>"Vault Landing Far"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>vault_landing_far_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>222</ID>
                              <Description>"Ledge Drop"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>ledge_drop_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>223</ID>
                              <Description>"Beam Drop"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>beam_drop_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>224</ID>
                              <Description>"Lamp Drop"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>lamp_drop_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>225</ID>
                              <Description>"Hang to Hang"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>hang_to_hang_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>226</ID>
                              <Description>"Vanilla Beam Entry"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>vanilla_beam_entry_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>227</ID>
                              <Description>"Ground Roll"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>ground_roll_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>228</ID>
                              <Description>"Ground Roll Alt"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>ground_roll_alt_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>229</ID>
                              <Description>"Soft Land"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>soft_land_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>230</ID>
                              <Description>"Forced Ground Roll"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_ground_roll_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>231</ID>
                              <Description>"Kiosk Roll"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>kiosk_roll_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>232</ID>
                              <Description>"Kiosk Swing"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>kiosk_swing_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>233</ID>
                              <Description>"Forced Kiosk"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_kiosk_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>234</ID>
                              <Description>"Kiosk Cancel"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>kiosk_cancel_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>235</ID>
                              <Description>"Near Miss"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>near_miss_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>236</ID>
                              <Description>"Swing Up"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>swing_up_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>237</ID>
                              <Description>"Horse Flip"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>horse_flip_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>238</ID>
                              <Description>"Swan Dive"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>swan_dive_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>239</ID>
                              <Description>"Disable Ledge Grab"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>disable_ledge_grab_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>240</ID>
                              <Description>"Forced Ledge Grab"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_ledge_grab_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>241</ID>
                              <Description>"Self Swing"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>self_swing_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>242</ID>
                              <Description>"Drop to Fall"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>drop_to_fall_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>243</ID>
                              <Description>"Dive Beam Alt"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>dive_beam_alt_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>244</ID>
                              <Description>"Forced Hang Alt"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_hang_alt_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>245</ID>
                              <Description>"Forced Hook Climb Leap"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_hook_climb_leap_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>246</ID>
                              <Description>"Forced Hook Climb Leap Double"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_hook_climb_leap_double_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>247</ID>
                              <Description>"Forced Hook Climb Leap Rehook"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_hook_climb_leap_rehook_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>248</ID>
                              <Description>"Forced Hook Climb Leap Hang"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_hook_climb_leap_hang_enable</Address>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>249</ID>
                              <Description>"Forced Hook Pull Up"</Description>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>forced_hook_pull_up_enable</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>250</ID>
                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>251</ID>
                          <Description>"Parkour Mode"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(pause,2048)
label(returnhere)
label(exit)

globalalloc(pause_f,1)
globalalloc(buttonY,1)
globalalloc(buttonLS,1)
globalalloc(buttonLB,1)
globalalloc(parkour_mode_enable,1)
globalalloc(forced_hang_enable,1)

pause:
mov [pause_f],cl
mov ecx,[esi+0C]
test ecx,ecx

exit:
jmp returnhere

"ACRSP.exe"+5633A1:
jmp pause
returnhere:


alloc(disable_npc_interaction,2048)
label(returnhere2)
label(exit2)

disable_npc_interaction:
cmp byte ptr [parkour_mode_enable],01
je exit2
cmp edx,[ebp-1C]
jne ACRSP.exe+37CF30

exit2:
jmp returnhere2

"ACRSP.exe"+37D0BD:
jmp disable_npc_interaction
nop
returnhere2:


alloc(disable_ingame_binds,2048)
label(returnhere3)
label(exit3)

disable_ingame_binds:
movq [esi+00000190],xmm0
cmp byte ptr [parkour_mode_enable],01
jne exit3
cmp byte ptr [pause_f],01
je exit3
mov byte ptr [esi+18+1],00
mov byte ptr [esi+18+2],00
mov byte ptr [esi+18+0A],00
mov byte ptr [esi+18+0B],00
mov byte ptr [esi+18+0D],00
mov byte ptr [esi+18+0E],00

exit3:
jmp returnhere3

"ACRSP.exe"+185C90F:
jmp disable_ingame_binds
nop 3
returnhere3:


alloc(disable_combat_grab,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

disable_combat_grab:
cmp byte ptr [parkour_mode_enable],01
jne originalcode4
cmp eax,03
je ACRSP.exe+17EE8E3

originalcode4:
cmp byte ptr [eax+esi+18],00

exit4:
jmp returnhere4

"ACRSP.exe"+17EE8D2:
jmp disable_combat_grab
returnhere4:


alloc(disable_drop_to_hang,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

disable_drop_to_hang:
cmp byte ptr [parkour_mode_enable],01
jne originalcode5
cmp byte ptr [buttonY],01
je ACRSP.exe+173A739
cmp byte ptr [buttonLS],01
je ACRSP.exe+173A739
cmp byte ptr [buttonLB],01
je ACRSP.exe+173A739
cmp byte ptr [forced_hang_enable],01
je ACRSP.exe+173A739

originalcode5:
test al,al
je ACRSP.exe+173A739
mov eax,[ebx+08]

exit5:
jmp returnhere5

"ACRSP.exe"+173A6DA:
jmp disable_drop_to_hang
returnhere5:


[DISABLE]
"ACRSP.exe"+5633A1:
db 8B 4E 0C 85 C9
//mov ecx,[esi+0C]
//test ecx,ecx

"ACRSP.exe"+37D0BD:
db 0F 85 6D FE FF FF
//jne ACRSP.exe+37CF30

"ACRSP.exe"+185C90F:
db 66 0F D6 86 90 01 00 00
//movq [esi+00000190],xmm0

"ACRSP.exe"+17EE8D2:
db 80 7C 30 18 00
//cmp byte ptr [eax+esi+18],00

"ACRSP.exe"+173A6DA:
db 74 5D 8B 43 08
//je ACRSP.exe+173A739
//mov eax,[ebx+08]

dealloc(pause)
dealloc(disable_npc_interaction)
dealloc(disable_ingame_binds)
dealloc(disable_combat_grab)
dealloc(disable_drop_to_hang)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>300</ID>
                          <Description>"Vault"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(vault,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(vault_enable,1)
globalalloc(bindEmptyHand,1)
globalalloc(on_vault_f,1)
globalalloc(vault_inner_ledge_enable,1)
globalalloc(parkour_far_enable,1)
globalalloc(freeform_enable,1)
globalalloc(on_hang_free_f,1)
globalalloc(vault_inner_ledge_f,1)
globalalloc(vault_ground_land_f,1)
globalalloc(vault_required_passes,1)
globalalloc(vault_pass_counter,1)
globalalloc(vault_to_fall_f,1)

vault_inner_ledge_f:
db 00

vault_required_passes:
db 0A

vault_pass_counter:
db 00

vault:
cmp byte ptr [parkour_far_enable],01
je originalcode
cmp byte ptr [vault_enable],01
je exit

originalcode:
cmp dword ptr [ebx+18],02
jne ACRSP.exe+15C3FAE

exit:
jmp returnhere

"ACRSP.exe"+15C3E33:
jmp vault
nop
returnhere:


alloc(vault_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

vault_2:
cmp byte ptr [parkour_far_enable],00
je originalcode2
cmp byte ptr [vault_enable],00
je originalcode2
cmp [ebx+14],00000080
je originalcode2
cmp [ebx+14],00000040
je originalcode2
mov [ebx+14],00000002

originalcode2:
push ecx
lea edx,[ebp-00000320]

exit2:
jmp returnhere2

"ACRSP.exe"+BF07E9:
jmp vault_2
nop 2
returnhere2:


alloc(vault_landing,2048)
label(returnhere3)
label(exit3)

vault_landing:
mov [vault_enable],00
mov [vault_inner_ledge_f],00
mov [on_vault_f],01
mov [vault_pass_counter],00
call ACRSP.exe+15C3520

exit3:
jmp returnhere3

"ACRSP.exe"+1732A42:
jmp vault_landing
returnhere3:


alloc(vault_from_walk,2048)
label(returnhere4)
label(exit4)

vault_from_walk:
cmp byte ptr [vault_enable],01
je ACRSP.exe+160E3BA
cmp byte ptr [eax+00002030],00

exit4:
jmp returnhere4

"ACRSP.exe"+160E3AD:
jmp vault_from_walk
nop 2
returnhere4:


alloc(vault_to_hang,2048)
label(returnhere5)
label(exit5)

vault_to_hang:
mov [vault_inner_ledge_f],00
cmp byte ptr [vault_enable],01
je ACRSP.exe+1732A84
cmp byte ptr [bindEmptyHand],01
je ACRSP.exe+1732A84
test al,al
je ACRSP.exe+1732A84

exit5:
jmp returnhere5

"ACRSP.exe"+17329ED:
jmp vault_to_hang
nop 3
returnhere5:


alloc(vault_to_hang_2,2048)
label(returnhere6)
label(exit6)

vault_to_hang_2:
call ACRSP.exe+BFC140
cmp byte ptr [vault_enable],01
je ACRSP.exe+69B1AC
cmp byte ptr [bindEmptyHand],01
je ACRSP.exe+69B1AC

exit6:
jmp returnhere6

"ACRSP.exe"+69B16A:
jmp vault_to_hang_2
returnhere6:


alloc(vault_inner_ledge,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

vault_inner_ledge:
mov [vault_inner_ledge_f],00
cmp byte ptr [vault_inner_ledge_enable],01
jne originalcode7
mov [vault_inner_ledge_f],01

originalcode7:
cmp dword ptr [esi+54],01
jne ACRSP.exe+15C3C3E

exit7:
jmp returnhere7

"ACRSP.exe"+15C3C0B:
jmp vault_inner_ledge
nop
returnhere7:


alloc(vault_inner_ledge_2,2048)
label(returnhere8)
label(exit8)

vault_inner_ledge_2:
cmp byte ptr [vault_inner_ledge_f],01
je ACRSP.exe+6DF282
test byte ptr [ecx+000001D1],02

exit8:
jmp returnhere8

"ACRSP.exe"+6DF270:
jmp vault_inner_ledge_2
nop 2
returnhere8:


alloc(vault_freeform,2048)
label(returnhere9)
label(exit9)

vault_freeform:
mov [vault_ground_land_f],01
mov ecx,[esi+08]
mov ecx,[ecx+00000108]

exit9:
jmp returnhere9

"ACRSP.exe"+6B50C9:
jmp vault_freeform
nop 4
returnhere9:


alloc(vault_freeform_2,2048)
label(returnhere10)
label(originalcode10)
label(exit10)
label(passed_code_10)

vault_freeform_2:
cmp byte ptr [vault_ground_land_f],01
jne originalcode10
mov dl,[vault_pass_counter]
cmp dl,[vault_required_passes]
jb passed_code_10
mov [vault_pass_counter],00
mov [vault_ground_land_f],00
jmp exit10

passed_code_10:
inc byte ptr [vault_pass_counter]

originalcode10:
cmp edx,[eax+08]
jb ACRSP.exe+6F827C

exit10:
jmp returnhere10

"ACRSP.exe"+6F8197:
jmp vault_freeform_2
nop 4
returnhere10:


alloc(vault_freeform_3,2048)
label(returnhere11)
label(exit11)

vault_freeform_3:
test al,al
//jne ACRSP.exe+6F827C

exit11:
jmp returnhere11

"ACRSP.exe"+6F81AC:
jmp vault_freeform_3
nop 3
returnhere11:


alloc(vault_from_hang,2048)
label(returnhere12)
label(originalcode12)
label(exit12)

vault_from_hang:
cmp byte ptr [vault_enable],01
jne originalcode12
cmp byte ptr [on_hang_free_f],00
je ACRSP.exe+6BB16C

originalcode12:
test al,al
jne ACRSP.exe+6BB16C

exit12:
jmp returnhere12

"ACRSP.exe"+6BAB74:
jmp vault_from_hang
nop 3
returnhere12:


alloc(vault_from_hang_2,2048)
label(returnhere13)
label(originalcode13)
label(exit13)

vault_from_hang_2:
cmp byte ptr [vault_enable],01
jne originalcode13
cmp byte ptr [on_hang_free_f],00
je ACRSP.exe+1732B49

originalcode13:
test al,al
je ACRSP.exe+1732B49
mov eax,[edx+44]

exit13:
jmp returnhere13

"ACRSP.exe"+1732B3B:
jmp vault_from_hang_2
nop 2
returnhere13:


alloc(vault_to_fall,2048)
label(returnhere14)
label(exit14)

vault_to_fall:
mov [vault_to_fall_f],01
mov ecx,esi
call ACRSP.exe+6B2DA0

exit14:
jmp returnhere14

"ACRSP.exe"+6B5110:
jmp vault_to_fall
nop 2
returnhere14:


[DISABLE]
"ACRSP.exe"+15C3E33:
db 0F 85 75 01 00 00
//jne ACRSP.exe+15C3FAE

"ACRSP.exe"+BF07E9:
db 51 8D 95 E0 FC FF FF
//push ecx
//lea edx,[ebp-00000320]

"ACRSP.exe"+1732A42:
db E8 D9 0A E9 FF
//call ACRSP.exe+15C3520

"ACRSP.exe"+160E3AD:
db 80 B8 30 20 00 00 00
//cmp byte ptr [eax+00002030],00

"ACRSP.exe"+17329ED:
db 84 C0 0F 84 8F 00 00 00
//test al,al
//je ACRSP.exe+1732A84

"ACRSP.exe"+69B16A:
db E8 D1 0F 56 00
//call ACRSP.exe+BFC140

"ACRSP.exe"+15C3C0B:
db 83 7E 54 01 75 2D
//cmp dword ptr [esi+54],01
//jne ACRSP.exe+15C3C3E

"ACRSP.exe"+6DF270:
db F6 81 D1 01 00 00 02
//test byte ptr [ecx+000001D1],02

"ACRSP.exe"+6B50C9:
db 8B 4E 08 8B 89 08 01 00 00
//mov ecx,[esi+08]
//mov ecx,[ecx+00000108]

"ACRSP.exe"+6F8197:
db 3B 50 08 0F 82 DC 00 00 00
//cmp edx,[eax+08]
//jb ACRSP.exe+6F827C

"ACRSP.exe"+6F81AC:
db 84 C0 0F 85 C8 00 00 00
//test al,al
//jne ACRSP.exe+6F827C

"ACRSP.exe"+6BAB74:
db 84 C0 0F 85 F0 05 00 00
//test al,al
//jne ACRSP.exe+6BB16C

"ACRSP.exe"+1732B3B:
db 84 C0 74 0A 8B 42 44
//test al,al
//je ACRSP.exe+1732B49
//mov eax,[edx+44]

"ACRSP.exe"+6B5110:
db 8B CE E8 89 DC FF FF
//mov ecx,esi
//call ACRSP.exe+6B2DA0

dealloc(vault)
dealloc(vault_2)
dealloc(vault_landing)
dealloc(vault_from_walk)
dealloc(vault_to_hang)
dealloc(vault_to_hang_2)
dealloc(vault_inner_ledge)
dealloc(vault_inner_ledge_2)
dealloc(vault_freeform)
dealloc(vault_freeform_2)
dealloc(vault_freeform_3)
dealloc(vault_from_hang)
dealloc(vault_from_hang_2)
dealloc(vault_to_fall)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>301</ID>
                          <Description>"Forced Freeform"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(freeform,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(freeform_enable,1)

freeform:
cmp byte ptr [on_vault_f],01
je originalcode
cmp byte ptr [freeform_enable],01
je ACRSP.exe+15C433A

originalcode:
mov edx,[ebx+10]
mov byte ptr [edx],00

exit:
jmp returnhere

"ACRSP.exe"+15C3E2D:
jmp freeform
nop
returnhere:


alloc(disable_leap_of_faith,2048)
label(returnhere2)
label(exit2)

disable_leap_of_faith:
cmp byte ptr [freeform_enable],01
je ACRSP.exe+1576608
comisd xmm0,xmm3
jbe ACRSP.exe+1576608

exit2:
jmp returnhere2

"ACRSP.exe"+15761C2:
jmp disable_leap_of_faith
nop
returnhere2:


alloc(disable_wallrun_grab,2048)
label(returnhere3)
label(exit3)

disable_wallrun_grab:
cmp byte ptr [freeform_enable],01
je ACRSP.exe+1660D21
test al,al
je ACRSP.exe+1660D21

exit3:
jmp returnhere3

"ACRSP.exe"+1660C15:
jmp disable_wallrun_grab
nop 3
returnhere3:


[DISABLE]
"ACRSP.exe"+15C3E2D:
db 8B 53 10 C6 02 00
//mov edx,[ebx+10]
//mov byte ptr [edx],00

"ACRSP.exe"+15761C2:
db 0F 86 40 04 00 00
//jbe ACRSP.exe+1576608

"ACRSP.exe"+1660C15:
db 84 C0 0F 84 04 01 00 00
//test al,al
//je ACRSP.exe+1660D21

dealloc(freeform)
dealloc(disable_leap_of_faith)
dealloc(disable_wallrun_grab)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>302</ID>
                          <Description>"Parkour Down / Far"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(parkour_down,2048)
label(returnhere)
label(originalcode)
label(vault_freeform)
label(exit)

globalalloc(parkour_down_enable,1)
globalalloc(parkour_far_enable,1)
globalalloc(forced_hang_enable,1)
globalalloc(parkour_down_low_enable,1)
globalalloc(freeform_enable,1)
globalalloc(vault_inner_ledge_enable,1)
globalalloc(forced_step_enable,1)
globalalloc(dive_beam_alt_enable,1)
globalalloc(self_swing_enable,1)
globalalloc(on_vault_f,1)

parkour_down:
cmp byte ptr [on_vault_f],01
je vault_freeform
cmp byte ptr [dive_beam_alt_enable],01
je ACRSP.exe+15C3E9B
cmp byte ptr [parkour_far_enable],01
je ACRSP.exe+15C3E9B
cmp byte ptr [parkour_down_low_enable],01
je exit
cmp byte ptr [parkour_down_enable],01
je exit
cmp byte ptr [self_swing_enable],01
je exit
jmp originalcode

vault_freeform:
cmp byte ptr [freeform_enable],01
jne exit
mov eax,00000001
jmp exit

originalcode:
comiss xmm0,[ACRSP.exe+2175068]
jbe ACRSP.exe+15C3E9B

exit:
jmp returnhere

"ACRSP.exe"+15C3BAB:
jmp parkour_down
nop
returnhere:


alloc(parkour_down_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

parkour_down_2:
cmp byte ptr [parkour_down_low_enable],01
je ACRSP.exe+15C3CBF
cmp byte ptr [parkour_down_enable],01
je ACRSP.exe+15C3CBF
cmp byte ptr [self_swing_enable],01
je ACRSP.exe+15C3CBF
cmp byte ptr [forced_hang_enable],01
je exit2

originalcode2:
comisd xmm3,xmm2
jbe ACRSP.exe+15C3E12

exit2:
jmp returnhere2

"ACRSP.exe"+15C3CA8:
jmp parkour_down_2
nop 5
returnhere2:


alloc(parkour_down_3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

parkour_down_3:
cmp byte ptr [parkour_down_low_enable],01
je ACRSP.exe+15C3E8E
cmp byte ptr [parkour_down_enable],01
je ACRSP.exe+15C3E8E
cmp byte ptr [self_swing_enable],01
je ACRSP.exe+15C3E8E
cmp byte ptr [forced_hang_enable],01
je exit3

originalcode3:
comisd xmm2,xmm1
jna ACRSP.exe+15C3E12

exit3:
jmp returnhere3

"ACRSP.exe"+15C3E71:
jmp parkour_down_3
nop
returnhere3:


alloc(parkour_far_2,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

parkour_far_2:
cmp byte ptr [dive_beam_alt_enable],01
je ACRSP.exe+15C3F9B
cmp byte ptr [parkour_far_enable],01
je exit4
cmp byte ptr [forced_hang_enable],01
je ACRSP.exe+15C3F9B

originalcode4:
comisd xmm1,xmm0
jbe ACRSP.exe+15C3E12

exit4:
jmp returnhere4

"ACRSP.exe"+15C3F6A:
jmp parkour_far_2
nop 5
returnhere4:


[DISABLE]
"ACRSP.exe"+15C3BAB:
db 0F 86 EA 02 00 00
//jbe ACRSP.exe+15C3E9B

"ACRSP.exe"+15C3CA8:
db 66 0F 2F DA 0F 86 60 01 00 00
//comisd xmm3,xmm2
//jbe ACRSP.exe+15C3E12

"ACRSP.exe"+15C3E71:
db 66 0F 2F D1 76 9B
//comisd xmm2,xmm1
//jna ACRSP.exe+15C3E12

"ACRSP.exe"+15C3F6A:
db 66 0F 2F C8 0F 86 9E FE FF FF
//comisd xmm1,xmm0
//jbe ACRSP.exe+15C3E12

dealloc(parkour_down)
dealloc(parkour_down_2)
dealloc(parkour_down_3)
dealloc(parkour_far_2)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>303</ID>
                          <Description>"Forced Hang / Dive Beam / Forced Step"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(dive_beam,2048)
label(returnhere)
label(originalcode)
label(forced_hang_alt)
label(exit)

globalalloc(forced_hang_enable,1)
globalalloc(forced_hang_alt_enable,1)
globalalloc(parkour_down_enable,1)
globalalloc(dive_beam_enable,1)
globalalloc(dive_beam_far_enable,1)
globalalloc(parkour_down_enable,1)
globalalloc(parkour_down_low_enable,1)
globalalloc(forced_step_enable,1)
globalalloc(vault_step_enable,1)
globalalloc(vault_landing_far_enable,1)
globalalloc(vault_inner_ledge_enable,1)
globalalloc(dive_beam_alt_enable,1)
globalalloc(dive_beam_f,1)
globalalloc(on_hang_free_f,1)

dive_beam:
cmp byte ptr [dive_beam_alt_enable],01
je originalcode
cmp byte ptr [parkour_down_low_enable],01
je ACRSP.exe+15C3C17
cmp byte ptr [dive_beam_enable],01
je ACRSP.exe+15C3C3E
cmp byte ptr [dive_beam_far_enable],01
je ACRSP.exe+15C3C3E
cmp byte ptr [forced_step_enable],01
je ACRSP.exe+15C3C17
cmp byte ptr [forced_hang_alt_enable],01
je forced_hang_alt
cmp byte ptr [forced_hang_enable],01
jne originalcode
cmp byte ptr [on_hang_free_f],01
jne ACRSP.exe+15C3C3E
jmp originalcode

forced_hang_alt:
cmp byte ptr [on_hang_free_f],01
je ACRSP.exe+15C3C04

originalcode:
mov ecx,eax
and ecx,01
mov edx,00000002
je ACRSP.exe+15C3C04
cmp byte ptr [parkour_down_enable],01
je ACRSP.exe+15C3C17
cmp [esi+50],edx

exit:
jmp returnhere

"ACRSP.exe"+15C3BFD:
jmp dive_beam
returnhere:


alloc(dive_beam_2,2048)
label(returnhere2)
label(originalcode2)
label(forced_hang_alt_2)
label(exit2)

dive_beam_2:
cmp byte ptr [dive_beam_alt_enable],01
je originalcode2
cmp byte ptr [parkour_down_low_enable],01
je originalcode2
cmp byte ptr [dive_beam_enable],01
je exit2
cmp byte ptr [dive_beam_far_enable],01
je exit2
cmp byte ptr [forced_hang_alt_enable],01
je forced_hang_alt_2
cmp byte ptr [forced_hang_enable],01
jne originalcode2
cmp byte ptr [on_hang_free_f],01
jne exit2
jmp originalcode2

forced_hang_alt_2:
cmp byte ptr [on_hang_free_f],01
je exit2

originalcode2:
cmp dword ptr [esi+50],20
jne ACRSP.exe+15C3D13

exit2:
jmp returnhere2

"ACRSP.exe"+15C3C95:
jmp dive_beam_2
nop
returnhere2:


alloc(dive_beam_far,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

dive_beam_far:
cmp byte ptr [dive_beam_alt_enable],01
je ACRSP.exe+15C3F1D
cmp byte ptr [dive_beam_far_enable],01
je ACRSP.exe+15C3F35

originalcode3:
test cl,al
je ACRSP.exe+15C3EEC
cmp dword ptr [esi+50],02

exit3:
jmp returnhere3

"ACRSP.exe"+15C3EE4:
jmp dive_beam_far
nop
returnhere3:


alloc(forced_hang,2048)
label(returnhere4)
label(originalcode4)
label(forced_hang_code)
label(forced_step_code)
label(exit4)

forced_hang:
cmp byte ptr [dive_beam_enable],01
je forced_hang_code
cmp byte ptr [dive_beam_far_enable],01
je forced_hang_code
cmp byte ptr [forced_hang_alt_enable],01
je forced_hang_code
cmp byte ptr [forced_step_enable],01
je forced_step_code
cmp byte ptr [vault_step_enable],01
je forced_step_code
cmp byte ptr [forced_hang_enable],01
jne originalcode4
cmp byte ptr [on_hang_free_f],01
je forced_hang_code
cmp byte ptr [dive_beam_f],01
je forced_hang_code
jmp originalcode4

forced_hang_code:
mov [ebx+14],00000080
jmp originalcode4

forced_step_code:
mov [ebx+14],00000001
jmp originalcode4

originalcode4:
mov edx,eax
mov eax,[ebx+08]
cmp [ebx+14],00000080
jne exit4
mov [dive_beam_f],01

exit4:
jmp returnhere4

"ACRSP.exe"+BF07DE:
jmp forced_hang
returnhere4:


alloc(forced_hang_2,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

forced_hang_2:
cmp byte ptr [dive_beam_enable],01
je originalcode5
cmp byte ptr [forced_hang_enable],01
je exit5

originalcode5:
cmp dword ptr [esi+54],10
jne ACRSP.exe+15C3D13

exit5:
jmp returnhere5

"ACRSP.exe"+15C3C8F:
jmp forced_hang_2
nop
returnhere5:


alloc(forced_step,2048)
label(returnhere6)
label(originalcode6)
label(limit_hop)
label(exit6)

forced_step:
cmp byte ptr [vault_landing_far_enable],01
je originalcode6
cmp byte ptr [forced_step_enable],01
je limit_hop
jmp originalcode6

limit_hop:
cmp eax,03
je originalcode6
mov eax,00
mov [ebp-000000AC],eax
jmp exit6

originalcode6:
movzx eax,word ptr [esi+06]
and eax,00003FFF
mov [ebp-000000AC],eax

exit6:
jmp returnhere6

"ACRSP.exe"+15C38FA:
jmp forced_step
nop
returnhere6:


alloc(inner_ledge,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

inner_ledge:
cmp byte ptr [vault_inner_ledge_enable],01
je ACRSP.exe+15C3C79
cmp byte ptr [parkour_down_low_enable],01
je ACRSP.exe+15C3C79
cmp byte ptr [forced_step_enable],01
je ACRSP.exe+15C3C79

originalcode7:
test dl,al
je ACRSP.exe+15C3C4C
cmp [esi+50],edx

exit7:
jmp returnhere7

"ACRSP.exe"+15C3C43:
jmp inner_ledge
nop 2
returnhere7:


[DISABLE]
"ACRSP.exe"+15C3BFD:
db 74 05 39 56 50
//je ACRSP.exe+15C3C04
//cmp [esi+50],edx

"ACRSP.exe"+15C3C95:
db 83 7E 50 20 75 78
//cmp dword ptr [esi+50],20
//jne ACRSP.exe+15C3D13

"ACRSP.exe"+15C3EE4:
db 74 06 83 7E 50 02
//je ACRSP.exe+15C3EEC
//cmp dword ptr [esi+50],02

"ACRSP.exe"+BF07DE:
db 8B D0 8B 43 08
//mov edx,eax
//mov eax,[ebx+08]

"ACRSP.exe"+15C3C8F:
db 83 7E 54 10 75 7E
//cmp dword ptr [esi+54],10
//jne ACRSP.exe+15C3D13

"ACRSP.exe"+15C38FA:
db 89 85 54 FF FF FF
//mov [ebp-000000AC],eax

"ACRSP.exe"+15C3C43:
db 84 C2 74 05 39 56 50
//test dl,al
//je ACRSP.exe+15C3C4C
//cmp [esi+50],edx

dealloc(dive_beam)
dealloc(dive_beam_2)
dealloc(dive_beam_far)
dealloc(forced_hang)
dealloc(forced_hang_2)
dealloc(forced_step)
dealloc(inner_ledge)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>304</ID>
                          <Description>"Drop to Fall"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(drop_to_fall,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(bindLegs,1)
globalalloc(bindEmptyHand,1)
globalalloc(bindHighProfile,1)
globalalloc(drop_to_fall_enable,1)
globalalloc(drop_to_release_f,1)
globalalloc(drop_to_fall_f,1)
globalalloc(drop_to_hang_f,1)
globalalloc(on_hang_free_f,1)
globalalloc(hang_free_hook_f,1)
globalalloc(drop_to_fall_speed,4)
globalalloc(hang_free_hook_speed,4)

hang_free_hook_speed:
dd (float)0.5

drop_to_fall:
mov [drop_to_fall_f],00
mov [drop_to_release_f],00
cmp byte ptr [drop_to_fall_enable],01
jne originalcode
mov [drop_to_fall_f],01
mov [drop_to_release_f],01
cmp byte ptr [bindHighProfile],01
jne originalcode
jmp ACRSP.exe+6B44E3

originalcode:
test al,al
je ACRSP.exe+6B44E3

exit:
jmp returnhere

"ACRSP.exe"+6B41E4:
jmp drop_to_fall
nop 3
returnhere:


alloc(drop_to_fall_2,2048)
label(returnhere2)
label(code_drop_fall_2)
label(hang_free_2)
label(hang_free_hook_2)
label(originalcode2)
label(exit2)

drop_to_fall_2:
cmp byte ptr [drop_to_fall_enable],01
jne code_drop_fall_2
mov [drop_to_fall_f],01
mov [drop_to_release_f],01

code_drop_fall_2:
mov [drop_to_fall_speed],(float)0.5
cmp eax,082F9F3B
je hang_free_2
cmp eax,0ED639AB
je hang_free_hook_2
jmp originalcode2

hang_free_2:
mov [drop_to_fall_speed],(float)0.3
jmp originalcode2

hang_free_hook_2:
mov [drop_to_fall_speed],(float)0.1
mov [hang_free_hook_f],01
jmp originalcode2

originalcode2:
mov edx,[esi+08]
mov ecx,[edx+00000108]

exit2:
jmp returnhere2

"ACRSP.exe"+69723A:
jmp drop_to_fall_2
nop 4
returnhere2:


alloc(drop_to_fall_3,2048)
label(returnhere3)
label(originalcode3)
label(hang_free_hook_drop_3)
label(exit3)

drop_to_fall_3:
cmp byte ptr [drop_to_fall_f],01
jne hang_free_hook_drop_3
fld [drop_to_fall_speed]
fxch st(1)
fcomip st(0),st(1)
fstp st(0)
jb ACRSP.exe+697264
jmp ACRSP.exe+69725D

hang_free_hook_drop_3:
cmp byte ptr [hang_free_hook_f],01
jne originalcode3
fld [hang_free_hook_speed]
fxch st(1)
fcomip st(0),st(1)
fstp st(0)
jb ACRSP.exe+697264
mov [drop_to_fall_f],01
mov [hang_free_hook_f],00
jmp ACRSP.exe+69725D

originalcode3:
fld1
fxch st(1)
fcomip st(0),st(1)

exit3:
jmp returnhere3

"ACRSP.exe"+697253:
jmp drop_to_fall_3
nop
returnhere3:


alloc(drop_to_fall_4,2048)
label(returnhere4)
label(code4)
label(code_check_4)
label(exit4)

drop_to_fall_4:
mov ecx,[esi+10]
cmp byte ptr [drop_to_hang_f],00
jne code_check_4
mov [ecx+78],00000000
mov [drop_to_hang_f],01

code_check_4:
cmp [ecx+78],00000001
je code4
mov [ecx+78],00000000

code4:
mov ecx,esi
test al,al
je ACRSP.exe+6B504E
mov [drop_to_hang_f],00
cmp byte ptr [bindLegs],01
je exit4
cmp byte ptr [drop_to_release_f],01
je ACRSP.exe+6B501C
cmp byte ptr [bindEmptyHand],01
je ACRSP.exe+6B501C
cmp byte ptr [drop_to_fall_enable],01
je ACRSP.exe+6B501C
mov [drop_to_fall_f],00
jmp exit4

exit4:
jmp returnhere4

"ACRSP.exe"+6B503E:
jmp drop_to_fall_4
nop
returnhere4:


alloc(drop_to_fall_5,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

drop_to_fall_5:
cmp byte ptr [drop_to_fall_f],01
jne originalcode5
mov [drop_to_fall_f],00
mov [on_hang_free_f],00
mov [ecx+78],00000000
mov ecx,esi
jmp ACRSP.exe+697D6B

originalcode5:
cmp dword ptr [ecx+78],00
mov ecx,esi
jne ACRSP.exe+697E3E

exit5:
jmp returnhere5

"ACRSP.exe"+697D3B:
jmp drop_to_fall_5
nop 3
returnhere5:


alloc(drop_to_fall_6,2048)
label(returnhere6)
label(exit6)

drop_to_fall_6:
mov [drop_to_hang_f],00
mov [drop_to_release_f],01
call ACRSP.exe+6A3AC0

exit6:
jmp returnhere6

"ACRSP.exe"+6B501C:
jmp drop_to_fall_6
returnhere6:


[DISABLE]
"ACRSP.exe"+6B41E4:
db 84 C0 0F 84 F7 02 00 00
//test al,al
//je ACRSP.exe+6B44E3

"ACRSP.exe"+69723A:
db 8B 56 08 8B 8A 08 01 00 00
//mov edx,[esi+08]
//mov ecx,[edx+00000108]

"ACRSP.exe"+697253:
db D9 E8 D9 C9 DF F1
//fld1
//fxch st(1)
//fcomip st(0),st(1)

"ACRSP.exe"+6B503E:
db 8B CE 84 C0 74 0A
//mov ecx,esi
//test al,al
//je ACRSP.exe+6B504E

"ACRSP.exe"+697D3B:
db 8B CE 0F 85 FB 00 00 00
//mov ecx,esi
//jne ACRSP.exe+697E3E

"ACRSP.exe"+6B501C:
db E8 9F EA FE FF
//call ACRSP.exe+6A3AC0

dealloc(drop_to_fall)
dealloc(drop_to_fall_2)
dealloc(drop_to_fall_3)
dealloc(drop_to_fall_4)
dealloc(drop_to_fall_5)
dealloc(drop_to_fall_6)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>305</ID>
                          <Description>"Ledge Drop"</Description>
                          <Options moHideChildren="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(ledge_drop,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(ledge_drop_enable,1)
globalalloc(ledge_drop_always,1)
globalalloc(ledge_drop_f,1)
globalalloc(vault_inner_ledge_f,1)

ledge_drop_always:
db 00
//00: Activate with Parkour Down or Freeform
//01: Always On

ledge_drop:
cmp byte ptr [ledge_drop_enable],01
je ACRSP.exe+160F116
cmp byte ptr [vault_inner_ledge_f],01
je ACRSP.exe+160F116

originalcode:
test al,al
je ACRSP.exe+160F116
cmp dword ptr [ebp-64],01

exit:
jmp returnhere

"ACRSP.exe"+160F0E1:
jmp ledge_drop
nop 3
returnhere:


alloc(ledge_drop_2,2048)
label(returnhere2)
label(code2)
label(exit2)

ledge_drop_2:
mov [ledge_drop_f],00
cmp byte ptr [ebp-3C],00
je ACRSP.exe+160F116
cmp byte ptr [bindHighProfile],01
jne code2
cmp byte ptr [bindLegs],01
je exit2

code2:
mov [ledge_drop_f],01

exit2:
jmp returnhere2

"ACRSP.exe"+160F0BA:
jmp ledge_drop_2
nop
returnhere2:


alloc(ledge_drop_3,2048)
label(returnhere3)
label(exit3)

ledge_drop_3:
mov [ledge_drop_f],00
call ACRSP.exe+79F620

exit3:
jmp returnhere3

"ACRSP.exe"+160F3AC:
jmp ledge_drop_3
returnhere3:


[DISABLE]
"ACRSP.exe"+160F0E1:
db 84 C0 74 31 83 7D 9C 01
//test al,al
//je ACRSP.exe+160F116
//cmp dword ptr [ebp-64],01

"ACRSP.exe"+160F0BA:
db 80 7D C4 00 74 56
//cmp byte ptr [ebp-3C],00
//je ACRSP.exe+160F116

"ACRSP.exe"+160F3AC:
db E8 6F 02 19 FF
//call ACRSP.exe+79F620

dealloc(ledge_drop)
dealloc(ledge_drop_2)
dealloc(ledge_drop_3)
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>306</ID>
                              <Description>"Activation Choice"</Description>
                              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0: Activate with Parkour Down or Freeform
1: Always On
</DropDownList>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>ledge_drop_always</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>307</ID>
                          <Description>"Beam Drop"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(beam_drop,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(beam_drop_enable,1)
globalalloc(ledge_drop_f,1)

beam_drop:
cmp byte ptr [beam_drop_enable],01
je ACRSP.exe+1739C4E

originalcode:
comiss xmm2,[ebp-00000100]

exit:
jmp returnhere

"ACRSP.exe"+1739C30:
jmp beam_drop
nop 2
returnhere:


alloc(beam_drop_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

beam_drop_2:
cmp byte ptr [beam_drop_enable],01
je ACRSP.exe+1737FBC

originalcode2:
comiss xmm2,[ebp-00000180]

exit2:
jmp returnhere2

"ACRSP.exe"+1737FB3:
jmp beam_drop_2
nop 2
returnhere2:


alloc(nso_idle,2048)
label(returnhere3)
label(exit3)

nso_idle:
mov [ledge_drop_f],01
mov eax,[ebp-54]
mov [ebp-18],eax

exit3:
jmp returnhere3

"ACRSP.exe"+1739C4E:
jmp nso_idle
nop
returnhere3:


alloc(nso_step,2048)
label(returnhere4)
label(exit4)

nso_step:
mov [ledge_drop_f],01
mov [ebp-20],edx
mov [ebp-1C],edx

exit4:
jmp returnhere4

"ACRSP.exe"+1737FBC:
jmp nso_step
nop
returnhere4:


alloc(nso_idle_hp,2048)
label(returnhere5)
label(exit5)

nso_idle_hp:
mov [ledge_drop_f],00
movss xmm0,[ebp-00000100]

exit5:
jmp returnhere5

"ACRSP.exe"+1739C9A:
jmp nso_idle_hp
nop 3
returnhere5:


alloc(nso_step_hp,2048)
label(returnhere6)
label(exit6)

nso_step_hp:
mov [ledge_drop_f],00
xor eax,eax
mov [ebp-20],eax

exit6:
jmp returnhere6

"ACRSP.exe"+1737FF1:
jmp nso_step_hp
returnhere6:


[DISABLE]
"ACRSP.exe"+1739C30:
db 0F 2F 95 00 FF FF FF
//comiss xmm2,[ebp-00000100]

"ACRSP.exe"+1737FB3:
db 0F 2F 95 80 FE FF FF
//comiss xmm2,[ebp-00000180]

"ACRSP.exe"+1739C4E:
db 8B 45 AC 89 45 E8
//mov eax,[ebp-54]
//mov [ebp-18],eax

"ACRSP.exe"+1737FBC:
db 89 55 E0 89 55 E4
//mov [ebp-20],edx
//mov [ebp-1C],edx

"ACRSP.exe"+1739C9A:
db F3 0F 10 85 00 FF FF FF
//movss xmm0,[ebp-00000100]

"ACRSP.exe"+1737FF1:
db 33 C0 89 45 E0
//xor eax,eax
//mov [ebp-20],eax

dealloc(beam_drop)
dealloc(beam_drop_2)
dealloc(nso_idle)
dealloc(nso_step)
dealloc(nso_idle_hp)
dealloc(nso_step_hp)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>308</ID>
                          <Description>"Fix Lamp Swing Animation"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(fix_lamp_anim,2048)
label(returnhere)
label(originalcode)
label(codeNext)
label(codeExit)
label(exit)

globalalloc(lamp_drop_f,1)

fix_lamp_anim:

originalcode:
push ebp
mov ebp,esp
cmp dword ptr [ebp+08],00
push esi
mov esi,ecx
jne codeExit
mov eax,[esi+08]
mov ecx,[eax+00000108]
call ACRSP.exe+1D9310
push 00
mov ecx,eax
call ACRSP.exe+1995C0
test al,al
je codeNext
mov ecx,esi
call ACRSP.exe+6EE800
pop esi
pop ebp
ret 0004

codeNext:
mov ecx,[esi+08]
mov ecx,[ecx+00000108]
call ACRSP.exe+1D9310
push 00
lea edx,[ebp+0B]
push edx
mov ecx,eax
call ACRSP.exe+199330
cmp [lamp_drop_f],01
jne codeExit
mov ecx,esi
call ACRSP.exe+6EFEC0
mov al,[esi+00000764]
mov ecx,esi
mov [esi+00000652],al
mov [lamp_drop_f],00
call ACRSP.exe+6EDAF0

codeExit:
pop esi
pop ebp
ret 0004

exit:
jmp returnhere

"ACRSP.exe"+6F0170:
jmp fix_lamp_anim
nop 2
returnhere:




[DISABLE]
dealloc(fix_lamp_anim)
"ACRSP.exe"+6F0170:
db 55 8B EC 83 7D 08 00
//push ebp
//mov ebp,esp
//cmp dword ptr [ebp+08],00
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>309</ID>
                              <Description>"Lamp Swing Drop"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(lamp_drop,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(lamp_drop_enable,1)
globalalloc(freeform_enable,1)
globalalloc(lamp_drop_f,1)

lamp_drop:
cmp byte ptr [lamp_drop_enable],01
jne originalcode
mov ecx,esi
jmp exit

originalcode:
test al,al
je ACRSP.exe+70A268
mov ecx,esi

exit:
jmp returnhere

"ACRSP.exe"+70A247:
jmp lamp_drop
nop
returnhere:


alloc(lamp_drop_2,2048)
label(returnhere2)
label(lampdrop2)
label(exit2)

lamp_drop_2:
cmp byte ptr [lamp_drop_enable],01
je lampdrop2
cmp byte ptr [freeform_enable],01
je lampdrop2
test al,al
je ACRSP.exe+6F6C32
jmp exit2

lampdrop2:
mov [lamp_drop_f],01
jmp ACRSP.exe+6F6C32

exit2:
jmp returnhere2

"ACRSP.exe"+6F69F5:
jmp lamp_drop_2
nop
returnhere2:


[DISABLE]
"ACRSP.exe"+70A247:
db 84 C0 74 1D 8B CE
//test al,al
//je ACRSP.exe+70A268
//mov ecx,esi

"ACRSP.exe"+6F69F5:
db 0F 84 37 02 00 00
//je ACRSP.exe+6F6C32

dealloc(lamp_drop)
dealloc(lamp_drop_2)
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>310</ID>
                          <Description>"Disable Stumble"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(disable_stumble,2048)
label(returnhere)
label(exit)

disable_stumble:
jmp ACRSP.exe+70476C

exit:
jmp returnhere

"ACRSP.exe"+703E14:
jmp disable_stumble
nop
returnhere:




[DISABLE]
dealloc(disable_stumble)
"ACRSP.exe"+703E14:
db 0F 84 17 02 00 00
//je ACRSP.exe+704031
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>311</ID>
                          <Description>"Disable Snap on NSO Landing"</Description>
                          <Options moHideChildren="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(disable_snap,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(player_velocity,16)
globalalloc(horizontal_velocity,4)
globalalloc(freeform_enable,1)
globalalloc(soft_land_enable,1)
globalalloc(ground_roll_enable,1)
globalalloc(freeform_jump_f,1)
globalalloc(dive_beam_f,1)
globalalloc(disable_snap_always,1)
globalalloc(vault_inner_ledge_f,1)
globalalloc(swan_dive_f,1)

alloc(height_limit,4)
height_limit:
dd (float)-12

alloc(horizontal_limit,4)
horizontal_limit:
dd (float)1

disable_snap_always:
db 00
//00: Dynamically Snap
//01: Always Disable Snap

disable_snap:
cmp byte ptr [swan_dive_f],01
je ACRSP.exe+703E10
cmp byte ptr [dive_beam_f],01
je ACRSP.exe+703E10
cmp byte ptr [vault_inner_ledge_f],01
je ACRSP.exe+703E10
cmp byte ptr [freeform_jump_f],01
je originalcode
cmp byte ptr [ground_roll_enable],01
je ACRSP.exe+703E10
cmp byte ptr [freeform_enable],01
je ACRSP.exe+704031
cmp byte ptr [soft_land_enable],01
je originalcode
cmp byte ptr [disable_snap_always],01
je ACRSP.exe+703E10
fld dword ptr [player_velocity+8]
fld dword ptr [height_limit]
fcomip st(0),st(1)
fstp st(0)
ja originalcode
fld dword ptr [horizontal_velocity]
fld dword ptr [horizontal_limit]
fcomip st(0),st(1)
fstp st(0)
jb ACRSP.exe+703E10

originalcode:
test al,al
je ACRSP.exe+703E10
mov ecx,[esi+08]

exit:
jmp returnhere

"ACRSP.exe"+703DA9:
jmp disable_snap
returnhere:




[DISABLE]
dealloc(disable_snap)
dealloc(height_limit)
dealloc(horizontal_limit)
"ACRSP.exe"+703DA9:
db 74 65 8B 4E 08
//je ACRSP.exe+703E10
//mov ecx,[esi+08]
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>312</ID>
                              <Description>"Activation Choice"</Description>
                              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0: Dynamically Snap
1: Always Disable Snap
</DropDownList>
                              <ShowAsSigned>0</ShowAsSigned>
                              <VariableType>Byte</VariableType>
                              <Address>disable_snap_always</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>313</ID>
                          <Description>"Disable Eject Angle Restriction"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(crouch_eject,2048)
label(crouch_eject_left)
label(crouch_climb_leap_code)
label(returnhere)
label(exit)

globalalloc(eject_clamp_f,1)
globalalloc(horizontal_clamp,4)
globalalloc(diagonal_clamp,4)
globalalloc(diagonal_angle,4)
globalalloc(diagonal_angle_hang,4)
globalalloc(wallrun_back_eject_angle,4)
globalalloc(climb_leap_angle,4)
globalalloc(zero,4)
globalalloc(forced_hang_enable,1)

horizontal_clamp:
dd (float)1.55

diagonal_clamp:
dd (float)1.9

diagonal_angle:
dd (float)1.6

diagonal_angle_hang:
dd (float)1.7

wallrun_back_eject_angle:
dd (float)0.78

climb_leap_angle:
dd (float)2.36

zero:
dd (float)0

crouch_eject:
mov [eject_clamp_f],00
comiss xmm0,[climb_leap_angle]
jae crouch_climb_leap_code
comiss xmm0,[horizontal_clamp]
jb ACRSP.exe+1732437
movss xmm1,[ebp-28]
mov [eject_clamp_f],01
comiss xmm1,[zero]
ja crouch_eject_left
comiss xmm0,[diagonal_clamp]
jb ACRSP.exe+17323BA
fld dword ptr [diagonal_angle]
cmp byte ptr [forced_hang_enable],01
jne ACRSP.exe+17323C0
fstp st(0)
fld dword ptr [diagonal_angle_hang]
jmp ACRSP.exe+17323C0

crouch_eject_left:
comiss xmm0,[diagonal_clamp]
jb ACRSP.exe+17323FA
fld dword ptr [diagonal_angle]
fchs
cmp byte ptr [forced_hang_enable],01
jne ACRSP.exe+1732400
fstp st(0)
fld dword ptr [diagonal_angle_hang]
fchs
jmp ACRSP.exe+1732400

crouch_climb_leap_code:
movaps xmm0,[ebp-60]
jmp ACRSP.exe+1732391

exit:
jmp returnhere

"ACRSP.exe"+173238B:
jmp crouch_eject
nop
returnhere:


alloc(stand_eject,2048)
label(stand_eject_left)
label(stand_climb_leap_code)
label(returnhere2)
label(exit2)

stand_eject:
mov [eject_clamp_f],00
comiss xmm0,[climb_leap_angle]
jae stand_climb_leap_code
comiss xmm0,[horizontal_clamp]
jb ACRSP.exe+1733EAE
movss xmm1,[ebp-34]
mov [eject_clamp_f],01
comiss xmm1,[zero]
ja stand_eject_left
comiss xmm0,[diagonal_clamp]
jb ACRSP.exe+1733E2B
fld dword ptr [diagonal_angle]
cmp byte ptr [forced_hang_enable],01
jne ACRSP.exe+1733E31
fstp st(0)
fld dword ptr [diagonal_angle_hang]
jmp ACRSP.exe+1733E31

stand_eject_left:
comiss xmm0,[diagonal_clamp]
jb ACRSP.exe+1733E6E
fld dword ptr [diagonal_angle]
fchs
cmp byte ptr [forced_hang_enable],01
jne ACRSP.exe+1733E74
fstp st(0)
fld dword ptr [diagonal_angle_hang]
fchs
jmp ACRSP.exe+1733E74

stand_climb_leap_code:
movaps xmm0,[ebp-70]
jmp ACRSP.exe+1733E02

exit2:
jmp returnhere2

"ACRSP.exe"+1733DFC:
jmp stand_eject
nop
returnhere2:


alloc(wallrun_eject,2048)
label(returnhere3)
label(wallrun_eject_left)
label(exit3)

wallrun_eject:
mov [eject_clamp_f],00
add esp,0C
movss xmm1,[ebp-18]
movsd xmm2,[ACRSP.exe+2176BD0]
cvtps2pd xmm0,xmm1
andpd xmm0,xmm2
cvtsd2ss xmm0,xmm0

comiss xmm0,[horizontal_clamp]
jb ACRSP.exe+165FF69
mov [eject_clamp_f],01
comiss xmm1,[zero]
ja wallrun_eject_left
comiss xmm0,[diagonal_clamp]
jb ACRSP.exe+165FF14
fld dword ptr [diagonal_angle]
cmp byte ptr [forced_hang_enable],01
jne ACRSP.exe+165FF34
fstp st(0)
fld dword ptr [diagonal_angle_hang]
jmp ACRSP.exe+165FF34

wallrun_eject_left:
comiss xmm0,[diagonal_clamp]
jb ACRSP.exe+165FF2E
fld dword ptr [diagonal_angle]
fchs
cmp byte ptr [forced_hang_enable],01
jne ACRSP.exe+165FF34
fstp st(0)
fld dword ptr [diagonal_angle_hang]
fchs
jmp ACRSP.exe+165FF34

exit3:
jmp returnhere3

"ACRSP.exe"+165FF02:
jmp wallrun_eject
nop
returnhere3:


alloc(wallrun_eject_2,2048)
label(returnhere4)
label(wallrun_code_2)
label(exit4)

wallrun_eject_2:
comiss xmm0,[wallrun_back_eject_angle]
ja wallrun_code_2
jmp ACRSP.exe+1734F08

wallrun_code_2:
movss [ebp-14],xmm1
jmp ACRSP.exe+1734E53

exit4:
jmp returnhere4

"ACRSP.exe"+1734DDA:
jmp wallrun_eject_2
returnhere4:


alloc(crouch_climb_leap,2048)
label(returnhere5)
label(exit5)

crouch_climb_leap:
comiss xmm0,[climb_leap_angle]
jbe ACRSP.exe+173236E

exit5:
jmp returnhere5

"ACRSP.exe"+1732246:
jmp crouch_climb_leap
nop
returnhere5:


alloc(stand_climb_leap,2048)
label(returnhere6)
label(exit6)

stand_climb_leap:
comiss xmm0,[climb_leap_angle]
jbe ACRSP.exe+1733DDD

exit6:
jmp returnhere6

"ACRSP.exe"+1733CB5:
jmp stand_climb_leap
nop
returnhere6:


[DISABLE]
"ACRSP.exe"+173238B:
db 76 1B 0F 28 45 A0
//jna ACRSP.exe+17323A8
//movaps xmm0,[ebp-60]

"ACRSP.exe"+1733DFC:
db 76 1B 0F 28 45 90
//jna ACRSP.exe+1733E19
//movaps xmm0,[ebp-70]

"ACRSP.exe"+165FF02:
db D9 45 E8 83 C4 0C
//fld dword ptr [ebp-18]
//add esp,0C

"ACRSP.exe"+1734DDA:
db 0F 2F D0 76 35
//comiss xmm2,xmm0
//jna ACRSP.exe+1734E14

"ACRSP.exe"+1732246:
db 0F 86 22 01 00 00
//jbe ACRSP.exe+173236E

"ACRSP.exe"+1733CB5:
db 0F 86 22 01 00 00
//jbe ACRSP.exe+1733DDD

dealloc(crouch_eject)
dealloc(stand_eject)
dealloc(wallrun_eject)
dealloc(wallrun_eject_2)
dealloc(crouch_climb_leap)
dealloc(stand_climb_leap)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>314</ID>
                          <Description>"Disable Water Dive"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(disable_water_dive,2048)
label(returnhere)
label(exit)

globalalloc(swan_dive_enable,1)

disable_water_dive:
cmp byte ptr [swan_dive_enable],01
je ACRSP.exe+1730D85
jmp ACRSP.exe+1730E18

exit:
jmp returnhere

"ACRSP.exe"+1730D73:
jmp disable_water_dive
nop
returnhere:




[DISABLE]
dealloc(disable_water_dive)
"ACRSP.exe"+1730D73:
db 75 10 80 7D E7 00
//jne ACRSP.exe+1730D85
//cmp byte ptr [ebp-19],00
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>315</ID>
                          <Description>"Forced / Disable Ledge Grab"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(forced_disable_ledge_grab,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(disable_ledge_grab_enable,1)
globalalloc(forced_ledge_grab_enable,1)
globalalloc(self_swing_enable,1)
globalalloc(bindEmptyHand,1)
globalalloc(bindHighProfile,1)
globalalloc(dive_beam_f,1)
globalalloc(drop_to_release_f,1)

forced_disable_ledge_grab:
cmp byte ptr [forced_ledge_grab_enable],01
je exit
cmp byte ptr [bindEmptyHand],01
je originalcode
cmp byte ptr [disable_ledge_grab_enable],01
je ACRSP.exe+703AEA
cmp byte ptr [dive_beam_f],01
je ACRSP.exe+703AEA

originalcode:
cmp byte ptr [ebp-11],00
je ACRSP.exe+703AEA

exit:
jmp returnhere

"ACRSP.exe"+70286F:
jmp forced_disable_ledge_grab
nop
returnhere:


alloc(forced_disable_ledge_grab_2,2048)
label(returnhere2)
label(originalcode2)
label(drop_to_release_2)
label(exit2)

forced_disable_ledge_grab_2:
cmp byte ptr [drop_to_release_f],01
je drop_to_release_2
cmp byte ptr [forced_ledge_grab_enable],01
je ACRSP.exe+702022
cmp byte ptr [self_swing_enable],01
je ACRSP.exe+7024C6
cmp byte ptr [bindEmptyHand],01
je ACRSP.exe+702022
cmp byte ptr [disable_ledge_grab_enable],01
je ACRSP.exe+7024C6
jmp originalcode2

drop_to_release_2:
cmp byte ptr [bindEmptyHand],01
je ACRSP.exe+7024C6
mov [drop_to_release_f],00

originalcode2:
test byte ptr [esi+000001D0],40

exit2:
jmp returnhere2

"ACRSP.exe"+70200F:
jmp forced_disable_ledge_grab_2
nop 2
returnhere2:


alloc(forced_hands_ledge_grab,2048)
label(returnhere3)
label(exit3)

forced_hands_ledge_grab:
cmp byte ptr [bindHighProfile],00
je ACRSP.exe+701DA7
test byte ptr [esi+000001D0],-80

exit3:
jmp returnhere3

"ACRSP.exe"+701D9E:
jmp forced_hands_ledge_grab
nop 2
returnhere3:


[DISABLE]
"ACRSP.exe"+70286F:
db 0F 84 75 12 00 00
//je ACRSP.exe+703AEA

"ACRSP.exe"+70200F:
db F6 86 D0 01 00 00 40
//test byte ptr [esi+000001D0],40

"ACRSP.exe"+701D9E:
db F6 86 D0 01 00 00 80
//test byte ptr [esi+000001D0],-80

dealloc(forced_disable_ledge_grab)
dealloc(forced_disable_ledge_grab_2)
dealloc(forced_hands_ledge_grab)
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>316</ID>
                              <Description>"Disable Wall Rebound"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(disable_wall_rebound,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(disable_ledge_grab_enable,1)
globalalloc(dive_beam_f,1)
globalalloc(vault_inner_ledge_f,1)

disable_wall_rebound:
cmp byte ptr [disable_ledge_grab_enable],01
je ACRSP.exe+1730818
cmp byte ptr [dive_beam_f],01
je ACRSP.exe+1730818
cmp byte ptr [vault_inner_ledge_f],01
je ACRSP.exe+1730818

originalcode:
test al,al
je ACRSP.exe+1730818
mov eax,[edi]

exit:
jmp returnhere

"ACRSP.exe"+17307FF:
jmp disable_wall_rebound
nop
returnhere:




[DISABLE]
dealloc(disable_wall_rebound)
"ACRSP.exe"+17307FF:
db 84 C0 74 15 8B 07
//test al,al
//je ACRSP.exe+1730818
//mov eax,[edi]
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>317</ID>
                              <Description>"Disable Staggered Ledge Grab"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(disable_staggered_ledge_grab,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(swan_dive_f,1)
globalalloc(dive_beam_f,1)
globalalloc(near_miss_f,1)
globalalloc(bindLegs,1)

disable_staggered_ledge_grab:
cmp byte ptr [swan_dive_f],01
je exit
cmp byte ptr [dive_beam_f],01
je exit
cmp byte ptr [near_miss_f],01
je exit
cmp byte ptr [bindLegs],01
je exit

originalcode:
comiss xmm0,[ebp-34]
jbe ACRSP.exe+70388E

exit:
jmp returnhere

"ACRSP.exe"+7036E7:
jmp disable_staggered_ledge_grab
nop
returnhere:




[DISABLE]
dealloc(disable_staggered_ledge_grab)
"ACRSP.exe"+7036E7:
db 0F 86 A1 01 00 00
//jbe ACRSP.exe+70388E
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>318</ID>
                          <Description>"Fix Eject Animation"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(wallrun_eject,2048)
label(returnhere)
label(originalcode)
label(exit)
label(left_eject_state)

globalalloc(eject_clamp_f,1)
globalalloc(hang_eject_f,4)
globalalloc(relative_input_f,4)
globalalloc(zero,4)

zero:
dd (float)0

wallrun_eject:
mov [eject_clamp_f],00
fld dword ptr [relative_input_f]
fld dword ptr [zero]
fcomip st(0),st(1)
fstp st(0)
jb left_eject_state
mov eax,00000002
jmp originalcode

left_eject_state:
mov eax,00000001

originalcode:
mov [ebp-20],eax
push edx
unpcklps xmm3,xmm1

exit:
jmp returnhere

"ACRSP.exe"+165FED1:
jmp wallrun_eject
nop 2
returnhere:


alloc(hang_eject,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(left_eject_state2)

hang_eject:
fld dword ptr [hang_eject_f]
fld dword ptr [zero]
fcomip st(0),st(1)
fstp st(0)
jb left_eject_state2
mov eax,00000002
jmp originalcode2

left_eject_state2:
mov eax,00000001

originalcode2:
push eax
mov eax,[ebx+0C]
push ecx

exit2:
jmp returnhere2

"ACRSP.exe"+BF70FC:
jmp hang_eject
returnhere2:


alloc(hang_eject_2,2048)
label(returnhere3)
label(exit3)

hang_eject_2:
mov eax,[relative_input_f]
mov [hang_eject_f],eax
mov eax,[ebx+10]
movaps xmm0,[eax]

exit3:
jmp returnhere3

"ACRSP.exe"+BE629D:
jmp hang_eject_2
nop
returnhere3:


alloc(back_eject,2048)
label(returnhere4)
label(exit4)

back_eject:
cmp [ebx+38],01
je ACRSP.exe+BEF946

exit4:
jmp returnhere4

"ACRSP.exe"+BEF931:
jmp back_eject
returnhere4:


[DISABLE]
"ACRSP.exe"+165FED1:
db 89 45 E0 52 0F 14 D9
//mov [ebp-20],eax
//push edx
//unpcklps xmm3,xmm1

"ACRSP.exe"+BF70FC:
db 50 8B 43 0C 51
//push eax
//mov eax,[ebx+0C]
//push ecx

"ACRSP.exe"+BE629D:
db 8B 43 10 0F 28 00
//mov eax,[ebx+10]
//movaps xmm0,[eax]

"ACRSP.exe"+BEF931:
db 0F 2F E0 77 10
//comiss xmm4,xmm0
//ja ACRSP.exe+BEF946

dealloc(wallrun_eject)
dealloc(hang_eject)
dealloc(hang_eject_2)
dealloc(back_eject)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>319</ID>
                          <Description>"Horse Flip"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(horse_flip,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(horse_flip_enable,1)
globalalloc(on_hang_free_f,1)

horse_flip:
cmp byte ptr [horse_flip_enable],01
jne originalcode
mov eax,00000005
jmp exit

originalcode:
cmp byte ptr [esi+00000BEC],00
mov eax,00000003

exit:
jmp returnhere

"ACRSP.exe"+6959C5:
jmp horse_flip
returnhere:


alloc(horse_flip_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

horse_flip_2:
cmp byte ptr [horse_flip_enable],01
jne originalcode2
jmp ACRSP.exe+BEEAEB

originalcode2:
comisd xmm1,xmm0
jna ACRSP.exe+BEEAEB

exit2:
jmp returnhere2

"ACRSP.exe"+BEEABC:
jmp horse_flip_2
nop
returnhere2:


[DISABLE]
"ACRSP.exe"+6959C5:
db B8 03 00 00 00
//mov eax,00000003

"ACRSP.exe"+BEEABC:
db 66 0F 2F C8 76 29
//comisd xmm1,xmm0
//jna ACRSP.exe+BEEAEB

dealloc(horse_flip)
dealloc(horse_flip_2)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>320</ID>
                          <Description>"Hang to Hang"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(hang_to_hang,2048)
label(returnhere)
label(originalcode)
label(button_release)
label(exit)

globalalloc(hang_to_hang_enable,1)
globalalloc(hang_to_hang_f,1)
globalalloc(hang_to_hang_disable_f,1)

hang_to_hang:
cmp byte ptr [hang_to_hang_enable],01
jne button_release
cmp byte ptr [hang_to_hang_disable_f],01
je originalcode
mov [hang_to_hang_f],01
jmp originalcode

button_release:
mov [hang_to_hang_disable_f],00
mov [hang_to_hang_f],00

originalcode:
mov ecx,[esi+14]
mov eax,[ecx]

exit:
jmp returnhere

"ACRSP.exe"+6D5FC:
jmp hang_to_hang
returnhere:


alloc(hang_to_hang_stand,2048)
label(returnhere2)
label(exit2)

hang_to_hang_stand:
call ACRSP.exe+6C90D0
cmp byte ptr [hang_to_hang_f],01
je ACRSP.exe+6DCA6A

exit2:
jmp returnhere2

"ACRSP.exe"+6DCA42:
jmp hang_to_hang_stand
returnhere2:


alloc(hang_to_hang_stand_2,2048)
label(returnhere3)
label(exit3)

hang_to_hang_stand_2:
call ACRSP.exe+6C90D0
cmp byte ptr [hang_to_hang_f],01
je ACRSP.exe+6DCB8C

exit3:
jmp returnhere3

"ACRSP.exe"+6DCB35:
jmp hang_to_hang_stand_2
returnhere3:


alloc(hang_to_hang_stand_3,2048)
label(returnhere4)
label(exit4)

hang_to_hang_stand_3:
call ACRSP.exe+6C95B0
cmp byte ptr [hang_to_hang_f],01
jne exit4
mov [hang_to_hang_disable_f],01
mov [hang_to_hang_f],00
je ACRSP.exe+6DCCE7

exit4:
jmp returnhere4

"ACRSP.exe"+6DCCCB:
jmp hang_to_hang_stand_3
returnhere4:


alloc(hang_to_hang_stand_4,2048)
label(returnhere5)
label(exit5)

hang_to_hang_stand_4:
mov [hang_to_hang_disable_f],01
mov [hang_to_hang_f],00
mov al,01
mov [esi+00000B74],al

exit5:
jmp returnhere5

"ACRSP.exe"+6DC987:
jmp hang_to_hang_stand_4
nop 3
returnhere5:


alloc(hang_to_hang_crouch,2048)
label(returnhere6)
label(exit6)

hang_to_hang_crouch:
call ACRSP.exe+69E870
cmp byte ptr [hang_to_hang_f],01
je ACRSP.exe+6B906C

exit6:
jmp returnhere6

"ACRSP.exe"+6B905F:
jmp hang_to_hang_crouch
returnhere6:


alloc(hang_to_hang_crouch_2,2048)
label(returnhere7)
label(exit7)

hang_to_hang_crouch_2:
call ACRSP.exe+6AE550
cmp byte ptr [hang_to_hang_f],01
jne exit7
mov [hang_to_hang_disable_f],01
mov [hang_to_hang_f],00
je ACRSP.exe+6B90FC

exit7:
jmp returnhere7

"ACRSP.exe"+6B90EF:
jmp hang_to_hang_crouch_2
returnhere7:


[DISABLE]
"ACRSP.exe"+6D5FC:
db 8B 4E 14 8B 01
//mov ecx,[esi+14]
//mov eax,[ecx]

"ACRSP.exe"+6DCA42:
db E8 89 C6 FE FF
//call ACRSP.exe+6C90D0

"ACRSP.exe"+6DCB35:
db E8 96 C5 FE FF
//call ACRSP.exe+6C90D0

"ACRSP.exe"+6DCCCB:
db E8 E0 C8 FE FF
//call ACRSP.exe+6C95B0

"ACRSP.exe"+6DC987:
db B0 01 88 86 74 0B 00 00
//mov al,01
//mov [esi+00000B74],al

"ACRSP.exe"+6B905F:
db E8 0C 58 FE FF
//call ACRSP.exe+69E870

"ACRSP.exe"+6B90EF:
db E8 5C 54 FF FF
//call ACRSP.exe+6AE550

dealloc(hang_to_hang)
dealloc(hang_to_hang_stand)
dealloc(hang_to_hang_stand_2)
dealloc(hang_to_hang_stand_3)
dealloc(hang_to_hang_stand_4)
dealloc(hang_to_hang_crouch)
dealloc(hang_to_hang_crouch_2)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>321</ID>
                          <Description>"Quick Eject / Pull Up"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(drop_to_hang,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(on_hang_free_f,1)
globalalloc(dismount_enable,1)
globalalloc(dismount_hang_free_eject_f,1)
globalalloc(bindLegsTap,1)
globalalloc(bindLegs,1)

drop_to_hang:
mov eax,[esi+10]
cmp dword ptr [eax+5C],0C
jne originalcode
mov [eax+5C],01

originalcode:
pop esi
pop ebp
ret 0004

exit:
jmp returnhere

"ACRSP.exe"+6BA409:
jmp drop_to_hang
returnhere:


alloc(drop_to_hang_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

drop_to_hang_2:
cmp byte ptr [on_hang_free_f],00
je originalcode2
cmp byte ptr [dismount_enable],01
je originalcode2
mov [edx+5C],00000001
jmp exit2

originalcode2:
mov [edx+5C],0000000C

exit2:
jmp returnhere2

"ACRSP.exe"+6B7B76:
jmp drop_to_hang_2
nop 2
returnhere2:


alloc(drop_to_hang_3,2048)
label(returnhere3)
label(exit3)

drop_to_hang_3:
call ACRSP.exe+45B0A0
cmp byte ptr [bindLegsTap],01
jne exit3
cmp byte ptr [dismount_enable],01
jne exit3
fstp st(0)
mov [dismount_hang_free_eject_f],01
jmp ACRSP.exe+69725D

exit3:
jmp returnhere3

"ACRSP.exe"+69724E:
jmp drop_to_hang_3
returnhere3:


alloc(drop_to_hang_4,2048)
label(returnhere4)
label(exit4)

drop_to_hang_4:
mov [dismount_hang_free_eject_f],00
push ebp
mov ebp,esp
cmp dword ptr [ebp+08],00

exit4:
jmp returnhere4

"ACRSP.exe"+6BA300:
jmp drop_to_hang_4
nop 2
returnhere4:


alloc(manual_ledge_grab,2048)
label(returnhere5)
label(originalcode5)
label(exit5)

manual_ledge_grab:
call ACRSP.exe+199560
cmp byte ptr [on_hang_free_f],01
jne originalcode5
cmp byte ptr [bindLegs],01
je ACRSP.exe+697521

originalcode5:
cmp byte ptr [bindLegsTap],01
je ACRSP.exe+697521

exit5:
jmp returnhere5

"ACRSP.exe"+697518:
jmp manual_ledge_grab
returnhere5:


alloc(manual_ledge_grab_2,2048)
label(returnhere6)
label(exit6)

manual_ledge_grab_2:
cmp eax,04
je ACRSP.exe+697525
cmp eax,05
je ACRSP.exe+6974E3
mov ecx,[esi+08]
mov ecx,[ecx+00000108]
call ACRSP.exe+1D9330
mov ecx,[eax+000004F8]
jmp ACRSP.exe+697506

exit6:
jmp returnhere6

"ACRSP.exe"+6974D9:
jmp manual_ledge_grab_2
returnhere6:


alloc(prescriptive_ledge_grab,2048)
label(returnhere7)
label(exit7)

prescriptive_ledge_grab:
call ACRSP.exe+1995C0
cmp byte ptr [bindLegsTap],01
je ACRSP.exe+69508C

exit7:
jmp returnhere7

"ACRSP.exe"+695083:
jmp prescriptive_ledge_grab
returnhere7:


[DISABLE]
"ACRSP.exe"+6BA409:
db 5E 5D C2 04 00
//pop esi
//pop ebp
//ret 0004

"ACRSP.exe"+6B7B76:
db C7 42 5C 01 00 00 00
//mov [edx+5C],00000001

"ACRSP.exe"+69724E:
db E8 4D 3E DC FF
//call ACRSP.exe+45B0A0

"ACRSP.exe"+6BA300:
db 55 8B EC 83 7D 08 00
//push ebp
//mov ebp,esp
//cmp dword ptr [ebp+08],00

"ACRSP.exe"+697518:
db E8 43 20 B0 FF
//call ACRSP.exe+199560

"ACRSP.exe"+6974D9:
db 83 F8 03 74 05
//cmp eax,03
//je ACRSP.exe+6974E3

"ACRSP.exe"+695083:
db E8 38 45 B0 FF
//call ACRSP.exe+1995C0

dealloc(drop_to_hang)
dealloc(drop_to_hang_2)
dealloc(drop_to_hang_3)
dealloc(drop_to_hang_4)
dealloc(manual_ledge_grab)
dealloc(manual_ledge_grab_2)
dealloc(prescriptive_ledge_grab)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>322</ID>
                          <Description>"Swing Off Beam / Pull up Pole"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(hang,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(pVelocity,4)
globalalloc(ledge_self_flip_f,1)
globalalloc(self_flip_f,1)
globalalloc(forced_hang_enable,1)
globalalloc(horse_flip_enable,1)
globalalloc(vanilla_beam_entry_enable,1)

hang:
mov [ledge_self_flip_f],00
push eax
mov eax,[pVelocity]
cmp eax,0
je originalcode
mov eax,[eax+60]
cmp eax,0
je originalcode
mov eax,[eax+0]
cmp eax,0
je originalcode
mov eax,[eax+114]
cmp eax,0
je originalcode
mov eax,[eax+60]
cmp eax,0
je originalcode
mov eax,[eax+0]
cmp eax,0
je originalcode
mov eax,[eax+18]
cmp eax,0
je originalcode
mov eax,[eax+744]
cmp eax,0
je originalcode
shr eax,10
cmp al,00
jne originalcode
mov [ledge_self_flip_f],01

originalcode:
pop eax
mov [eax+3C],ecx
inc edi
add eax,04

exit:
jmp returnhere

"ACRSP.exe"+69663A:
jmp hang
nop 2
returnhere:


alloc(pole_to_beam,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

pole_to_beam:
mov eax,[ebp-4C]
cmp byte ptr [forced_hang_enable],01
je originalcode2
cmp eax,04
jne originalcode2
mov eax,01
mov [ebp-4C],eax

originalcode2:
cmp eax,04


exit2:
jmp returnhere2

"ACRSP.exe"+157C385:
jmp pole_to_beam
nop
returnhere2:


alloc(release_beam,2048)
label(returnhere3)
label(exit3)

release_beam:
cmp byte ptr [self_flip_f],01
jne ACRSP.exe+6958DC
cmp byte ptr [horse_flip_enable],01
je ACRSP.exe+6958DC
cmp byte ptr [ledge_self_flip_f],01
jne ACRSP.exe+6958DC
cmp dword ptr [esi+00000BAC],03
jne ACRSP.exe+6958BE
jmp ACRSP.exe+6958DC

exit3:
jmp returnhere3

"ACRSP.exe"+6958D1:
jmp release_beam
nop 4
returnhere3:


alloc(pull_up,2048)
label(returnhere4)
label(exit4)

pull_up:
jmp ACRSP.exe+6BABED

exit4:
jmp returnhere4

"ACRSP.exe"+6BABC1:
jmp pull_up
nop
returnhere4:


alloc(swing_idle,2048)
label(returnhere5)
label(exit5)

swing_idle:
jmp ACRSP.exe+695467

exit5:
jmp returnhere5

"ACRSP.exe"+695455:
jmp swing_idle
nop
returnhere5:


alloc(swing_idle_2,2048)
label(returnhere6)
label(exit6)

swing_idle_2:
//ja ACRSP.exe+6954AF

exit6:
jmp returnhere6

"ACRSP.exe"+695578:
jmp swing_idle_2
nop
returnhere6:


alloc(swing_entry,2048)
label(returnhere7)
label(exit7)

swing_entry:
jmp ACRSP.exe+695C98

exit7:
jmp returnhere7

"ACRSP.exe"+695C4C:
jmp swing_entry
nop 3
returnhere7:


alloc(swing_camera,2048)
label(returnhere8)
label(exit8)

swing_camera:
jmp ACRSP.exe+69CDD5

exit8:
jmp returnhere8

"ACRSP.exe"+69CDCA:
jmp swing_camera
nop 4
returnhere8:


alloc(vanilla_beam_entry,2048)
label(returnhere9)
label(originalcode9)
label(exit9)

vanilla_beam_entry:
cmp byte ptr [vanilla_beam_entry_enable],01
je ACRSP.exe+695C56

originalcode9:
mov eax,00000003

exit9:
jmp returnhere9

"ACRSP.exe"+695C41:
jmp vanilla_beam_entry
returnhere9:


[DISABLE]
"ACRSP.exe"+69663A:
db 89 48 3C 47 83 C0 04
//mov [eax+3C],ecx
//inc edi
//add eax,04

"ACRSP.exe"+157C385:
db 8B 45 B4 83 F8 04
//mov eax,[ebp-4C]
//cmp eax,04

"ACRSP.exe"+6958D1:
db 75 EB 83 BE B0 0B 00 00 03
//jne ACRSP.exe+6958BE
//cmp dword ptr [esi+00000BB0],03

"ACRSP.exe"+6BABC1:
db 0F 84 A5 05 00 00
//je ACRSP.exe+6BB16C

"ACRSP.exe"+695455:
db 0F 85 28 01 00 00
//jne ACRSP.exe+695583

"ACRSP.exe"+695578:
db 0F 87 31 FF FF FF
//ja ACRSP.exe+6954AF

"ACRSP.exe"+695C4C:
db 75 08 39 86 B0 0B 00 00
//jne ACRSP.exe+695C56
//cmp [esi+00000BB0],eax

"ACRSP.exe"+69CDCA:
db 74 09 83 BE B0 0B 00 00 03
//je ACRSP.exe+69CDD5
//cmp dword ptr [esi+00000BB0],03

"ACRSP.exe"+695C41:
db B8 03 00 00 00
//mov eax,00000003

dealloc(hang)
dealloc(pole_to_beam)
dealloc(release_beam)
dealloc(pull_up)
dealloc(swing_idle)
dealloc(swing_idle_2)
dealloc(swing_entry)
dealloc(swing_camera)
dealloc(vanilla_beam_entry)
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>323</ID>
                              <Description>"Swing Off Instantly"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(instant_swingoff,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(instant_swingoff_f,1)
globalalloc(direction_input_f,16)
globalalloc(relative_input_f,4)
alloc(forward_input,4)
alloc(backward_input,4)

forward_input:
dd (float)1.31

backward_input:
dd (float)1.83

instant_swingoff:
cmp byte ptr [instant_swingoff_f],01
mov [instant_swingoff_f],00
je ACRSP.exe+695935

originalcode:
test byte ptr [esi+00000BD5],40

exit:
jmp returnhere

"ACRSP.exe"+6958FA:
jmp instant_swingoff
nop 2
returnhere:


alloc(disable_pullup_rotate,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

disable_pullup_rotate:
cmp byte ptr [instant_swingoff_f],01
je ACRSP.exe+1732B8F

originalcode2:
comiss xmm0,[ACRSP.exe+231065C]
jbe ACRSP.exe+1732B8F

exit2:
jmp returnhere2

"ACRSP.exe"+1732AFC:
jmp disable_pullup_rotate
nop
returnhere2:


alloc(manual_ledge_grab,2048)
label(returnhere3)
label(exit3)

manual_ledge_grab:
mov [instant_swingoff_f],01
call ACRSP.exe+697470

exit3:
jmp returnhere3

"ACRSP.exe"+6A96B0:
jmp manual_ledge_grab
returnhere3:


alloc(drop_to_hang,2048)
label(returnhere4)
label(exit4)

drop_to_hang:
mov [instant_swingoff_f],01
call ACRSP.exe+6A7370

exit4:
jmp returnhere4

"ACRSP.exe"+6B5044:
jmp drop_to_hang
returnhere4:


alloc(drop_to_hang_2,2048)
label(returnhere5)
label(originalcode5)
label(disable_instant)
label(exit5)

drop_to_hang_2:
cmp [direction_input_f],00000000
je disable_instant

fld dword ptr [relative_input_f]
fabs
fld dword ptr [forward_input]
fcomip st(0),st(1)
fstp st(0)
jb originalcode5

fld dword ptr [relative_input_f]
fabs
fld dword ptr [backward_input]
fcomip st(0),st(1)
fstp st(0)
ja originalcode5

disable_instant:
mov [instant_swingoff_f],00
call ACRSP.exe+69D2C0
jmp exit5

originalcode5:
call ACRSP.exe+69D2C0

exit5:
jmp returnhere5

"ACRSP.exe"+6A9653:
jmp drop_to_hang_2
returnhere5:


alloc(drop_to_hang_3,2048)
label(returnhere6)
label(exit6)

drop_to_hang_3:
mov [instant_swingoff_f],00
mov al,[esi+00000BD5]

exit6:
jmp returnhere6

"ACRSP.exe"+6BA337:
jmp drop_to_hang_3
nop
returnhere6:


[DISABLE]
"ACRSP.exe"+6958FA:
db F6 86 D5 0B 00 00 40
//test byte ptr [esi+00000BD5],40

"ACRSP.exe"+1732AFC:
db 0F 86 8D 00 00 00
//jbe ACRSP.exe+1732B8F

"ACRSP.exe"+6A96B0:
db E8 BB DD FE FF
//call ACRSP.exe+697470

"ACRSP.exe"+6B5044:
db E8 27 23 FF FF
//call ACRSP.exe+6A7370

"ACRSP.exe"+6A9653:
db E8 68 3C FF FF
//call ACRSP.exe+69D2C0

"ACRSP.exe"+6BA337:
db 8A 86 D5 0B 00 00
//mov al,[esi+00000BD5]

dealloc(instant_swingoff)
dealloc(disable_pullup_rotate)
dealloc(manual_ledge_grab)
dealloc(drop_to_hang)
dealloc(drop_to_hang_2)
dealloc(drop_to_hang_3)
dealloc(forward_input)
dealloc(backward_input)
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>324</ID>
                          <Description>"Swan Dive"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(forced_swan_dive,2048)
label(returnhere)
label(originalcode)
label(already_dive)
label(exit)

globalalloc(swan_dive_enable,1)
globalalloc(swan_dive_f,1)
globalalloc(kiosk_cancel_enable,1)
globalalloc(diag_swing_f,1)
globalalloc(on_hang_free_f,1)
globalalloc(on_vault_f,1)
globalalloc(fall_height,4)
globalalloc(ground_roll_enable,1)
globalalloc(already_rolled_f,1)
alloc(lower_height_threshold,4)
alloc(higher_height_threshold,4)

lower_height_threshold:
dd (float)6

higher_height_threshold:
dd (float)12

forced_swan_dive:
cmp byte ptr [swan_dive_f],01
je already_dive
cmp byte ptr [swan_dive_enable],01
jne originalcode
cmp byte ptr [on_hang_free_f],01
je originalcode
cmp byte ptr [on_vault_f],01
je originalcode
mov [swan_dive_f],01
jmp exit

already_dive:
mov [already_rolled_f],01
jmp exit

originalcode:
cmp eax,00002000
jne ACRSP.exe+BF07DE

exit:
jmp returnhere

"ACRSP.exe"+BF0719:
jmp forced_swan_dive
nop
returnhere:


alloc(forced_swan_dive_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

forced_swan_dive_2:
cmp byte ptr [swan_dive_f],01
jne originalcode2
mov ecx,esi
call ACRSP.exe+6EABD0
jmp exit2

originalcode2:
call ACRSP.exe+6FA990

exit2:
jmp returnhere2

"ACRSP.exe"+70A16B:
jmp forced_swan_dive_2
returnhere2:


alloc(forced_swan_dive_3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

forced_swan_dive_3:
cmp byte ptr [swan_dive_f],01
jne originalcode3
mov [swan_dive_f],00
mov [kiosk_cancel_enable],01
je ACRSP.exe+16B373F

originalcode3:
cmp al,[esi+00000130]

exit3:
jmp returnhere3

"ACRSP.exe"+16B36C1:
jmp forced_swan_dive_3
nop
returnhere3:


alloc(ragdoll_to_ground,2048)
label(returnhere4)
label(originalcode4)
label(exit4)

ragdoll_to_ground:
cmp byte ptr [swan_dive_f],01
jne originalcode4
fld dword ptr [fall_height]
fld dword ptr [higher_height_threshold]
fcomip st(0),st(1)
fstp st(0)
jbe originalcode4
cmp byte ptr [ground_roll_enable],01
je ACRSP.exe+6F83C6
fld dword ptr [fall_height]
fld dword ptr [lower_height_threshold]
fcomip st(0),st(1)
fstp st(0)
ja ACRSP.exe+6F83C6

originalcode4:
test al,al
je ACRSP.exe+6F83C6
fld dword ptr [ebp-08]

exit4:
jmp returnhere4

"ACRSP.exe"+6F836D:
jmp ragdoll_to_ground
returnhere4:


[DISABLE]
"ACRSP.exe"+BF0719:
db 0F 85 BF 00 00 00
//jne ACRSP.exe+BF07DE

"ACRSP.exe"+70A16B:
db E8 20 08 FF FF
//call ACRSP.exe+6FA990

"ACRSP.exe"+16B36C1:
db 3A 86 30 01 00 00
//cmp al,[esi+00000130]

"ACRSP.exe"+6F836D:
db 74 57 D9 45 F8
//je ACRSP.exe+6F83C6
//fld dword ptr [ebp-08]

dealloc(forced_swan_dive)
dealloc(forced_swan_dive_2)
dealloc(forced_swan_dive_3)
dealloc(ragdoll_to_ground)
dealloc(lower_height_threshold)
dealloc(higher_height_threshold)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>325</ID>
                          <Description>"Forced Hook Climb"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(forced_hook_climb,2048)
label(returnhere)
label(exit)

globalalloc(forced_hook_climb_leap_enable,1)
globalalloc(forced_hook_climb_leap_double_enable,1)
globalalloc(forced_hook_climb_leap_hang_enable,1)
globalalloc(forced_hook_pull_up_enable,1)
globalalloc(forced_hook_climb_leap_rehook_enable,1)
globalalloc(hook_tap_f,1)
globalalloc(bindLegsTap,1)

alloc(value,4)
value:
dd (float)0

forced_hook_climb:
cmp byte ptr [forced_hook_climb_leap_enable],01
je ACRSP.exe+69BB15
cmp byte ptr [forced_hook_climb_leap_double_enable],01
je ACRSP.exe+69BB15
cmp byte ptr [forced_hook_climb_leap_hang_enable],01
je ACRSP.exe+69BB15
cmp byte ptr [forced_hook_pull_up_enable],01
je ACRSP.exe+69BDC2

movss xmm1,[value]
cvtss2sd xmm0,xmm0
cvtps2pd xmm1,xmm1

exit:
jmp returnhere

"ACRSP.exe"+69BB04:
jmp forced_hook_climb
nop 2
returnhere:


alloc(forced_hook_climb_double,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

forced_hook_climb_double:
cmp byte ptr [forced_hook_climb_leap_enable],01
je originalcode2
cmp byte ptr [forced_hook_climb_leap_double_enable],01
jne ACRSP.exe+69BF99
mov [eax+08],ecx
jmp exit2

originalcode2:
cmp [esi+000001C0],ecx
jne ACRSP.exe+69BF99
mov [eax+08],ecx

exit2:
jmp returnhere2

"ACRSP.exe"+69BF83:
jmp forced_hook_climb_double
returnhere2:


alloc(forced_hook_climb_hang,2048)
label(returnhere3)
label(exit3)

forced_hook_climb_hang:
call ACRSP.exe+6BE610
cmp byte ptr [forced_hook_climb_leap_hang_enable],01
je ACRSP.exe+6B57A2

exit3:
jmp returnhere3

"ACRSP.exe"+6B5799:
jmp forced_hook_climb_hang
returnhere3:


alloc(forced_hook_climb_pull_up,2048)
label(returnhere4)
label(exit4)

forced_hook_climb_pull_up:
cmp byte ptr [forced_hook_pull_up_enable],01
je exit4

test al,al
je ACRSP.exe+6A2B8D

exit4:
jmp returnhere4

"ACRSP.exe"+6A2A99:
jmp forced_hook_climb_pull_up
nop
returnhere4:


alloc(forced_hook_climb_hang_pull_up,2048)
label(returnhere5)
label(exit5)

forced_hook_climb_hang_pull_up:
call ACRSP.exe+BFA820
cmp byte ptr [forced_hook_pull_up_enable],01
jne exit5
cmp byte ptr [forced_hook_pull_up_enable],01
jne exit5
jmp ACRSP.exe+6A2BE8

exit5:
jmp returnhere5

"ACRSP.exe"+6A2B84:
jmp forced_hook_climb_hang_pull_up
returnhere5:


alloc(forced_hook_climb_hang_pull_up_2,2048)
label(returnhere6)
label(exit6)

forced_hook_climb_hang_pull_up_2:
call ACRSP.exe+BF9EA0
cmp byte ptr [forced_hook_pull_up_enable],01
jne exit6
cmp byte ptr [forced_hook_pull_up_enable],01
jne exit6
jmp ACRSP.exe+6A2CA6

exit6:
jmp returnhere6

"ACRSP.exe"+6A2C99:
jmp forced_hook_climb_hang_pull_up_2
returnhere6:


alloc(forced_hook_climb_tap,2048)
label(returnhere7)
label(originalcode7)
label(exit7)

forced_hook_climb_tap:
mov [hook_tap_f],00
cmp byte ptr [forced_hook_climb_leap_rehook_enable],01
je ACRSP.exe+69BFB1
cmp byte ptr [esi+000001D0],01
jne originalcode7
cmp byte ptr [bindLegsTap],01
jne originalcode7
mov [hook_tap_f],01
jmp ACRSP.exe+69BFB1

originalcode7:
cmp byte ptr [esi+000001D0],00

exit7:
jmp returnhere7

"ACRSP.exe"+69BF68:
jmp forced_hook_climb_tap
nop 2
returnhere7:


alloc(forced_hook_climb_tap_2,2048)
label(returnhere8)
label(originalcode8)
label(exit8)

forced_hook_climb_tap_2:
cmp byte ptr [forced_hook_climb_leap_rehook_enable],01
je ACRSP.exe+69BFBA
cmp byte ptr [hook_tap_f],01
jne originalcode8
cmp byte ptr [forced_hook_climb_leap_enable],01
je ACRSP.exe+69C01E
cmp byte ptr [forced_hook_climb_leap_double_enable],01
je ACRSP.exe+69C03D

originalcode8:
cmp byte ptr [esi+000001D1],00

exit8:
jmp returnhere8

"ACRSP.exe"+69BFB1:
jmp forced_hook_climb_tap_2
nop 2
returnhere8:


alloc(forced_hook_climb_tap_3,2048)
label(returnhere9)
label(exit9)

forced_hook_climb_tap_3:
cmp byte ptr [hook_tap_f],01
jne exit9
mov [ecx+0000202A],al
mov [hook_tap_f],00

exit9:
jmp returnhere9

"ACRSP.exe"+173239D:
jmp forced_hook_climb_tap_3
nop
returnhere9:


[DISABLE]
"ACRSP.exe"+69BB04:
db F3 0F 5A C0 0F 5A C9
//cvtss2sd xmm0,xmm0
//cvtps2pd xmm1,xmm1

"ACRSP.exe"+69BF83:
db 75 14 89 48 08
//jne ACRSP.exe+69BF99
//mov [eax+08],ecx

"ACRSP.exe"+6B5799:
db E8 72 8E 00 00
//call ACRSP.exe+6BE610

"ACRSP.exe"+6A2A99:
db 0F 84 EE 00 00 00
//je ACRSP.exe+6A2B8D

"ACRSP.exe"+6A2B84:
db E8 97 7C 55 00
//call ACRSP.exe+BFA820

"ACRSP.exe"+6A2C99:
db E8 02 72 55 00
//call ACRSP.exe+BF9EA0

"ACRSP.exe"+69BF68:
db 80 BE D0 01 00 00 00
//cmp byte ptr [esi+000001D0],00

"ACRSP.exe"+69BFB1:
db 80 BE D1 01 00 00 00
//cmp byte ptr [esi+000001D1],00

"ACRSP.exe"+173239D:
db 88 81 2A 20 00 00
//mov [ecx+0000202A],al

dealloc(forced_hook_climb)
dealloc(forced_hook_climb_double)
dealloc(forced_hook_climb_hang)
dealloc(forced_hook_climb_pull_up)
dealloc(forced_hook_climb_hang_pull_up)
dealloc(forced_hook_climb_hang_pull_up_2)
dealloc(forced_hook_climb_tap)
dealloc(forced_hook_climb_tap_2)
dealloc(forced_hook_climb_tap_3)
dealloc(value)
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>326</ID>
                          <Description>"Ground Landings"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(ground_landings,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(soft_land_height_threshold,4)
globalalloc(drop_height,4)
globalalloc(ground_roll_enable,1)
globalalloc(ground_roll_alt_enable,1)
globalalloc(soft_land_enable,1)

soft_land_height_threshold:
dd (float)6

ground_landings:
movss [drop_height],xmm0

cmp byte ptr [ground_roll_enable],01
je ACRSP.exe+6F4E94
cmp byte ptr [soft_land_enable],01
jne originalcode
comiss xmm0,[soft_land_height_threshold]
jbe ACRSP.exe+6F5087

originalcode:
comiss xmm0,[ACRSP.exe+21794BC]
jbe ACRSP.exe+6F5087

exit:
jmp returnhere

"ACRSP.exe"+6F4E81:
jmp ground_landings
nop
returnhere:


alloc(ground_roll,2048)
label(returnhere1)
label(originalcode1)
label(exit1)

ground_roll:
cmp byte ptr [ground_roll_enable],01
jne originalcode1
fld dword ptr [ebp-28]
jmp exit1

originalcode1:
comisd xmm0,[ACRSP.exe+217E4C0]
jna ACRSP.exe+6F4F28
fld dword ptr [ebp-28]

exit1:
jmp returnhere1

"ACRSP.exe"+6F4EC6:
jmp ground_roll
returnhere1:


alloc(ground_roll_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

ground_roll_2:
cmp byte ptr [ground_roll_enable],01
je exit2

originalcode2:
cmp eax,02
je ACRSP.exe+6F4F28

exit2:
jmp returnhere2

"ACRSP.exe"+6F4EDA:
jmp ground_roll_2
returnhere2:


alloc(ground_roll_3,2048)
label(returnhere3)
label(exit3)

ground_roll_3:
call ACRSP.exe+6E32F0
cmp byte ptr [ground_roll_alt_enable],01
je ACRSP.exe+6F4EEA
jmp ACRSP.exe+6F4F09

exit3:
jmp returnhere3

"ACRSP.exe"+6F4EE1:
jmp ground_roll_3
returnhere3:


[DISABLE]
"ACRSP.exe"+6F4E81:
db 0F 86 00 02 00 00
//jbe ACRSP.exe+6F5087

"ACRSP.exe"+6F4EC6:
db 76 60 D9 45 D8
//jna ACRSP.exe+6F4F28
//fld dword ptr [ebp-28]

"ACRSP.exe"+6F4EDA:
db 83 F8 02 74 49
//cmp eax,02
//je ACRSP.exe+6F4F28

"ACRSP.exe"+6F4EE1:
db E8 0A E4 FE FF
//call ACRSP.exe+6E32F0

dealloc(ground_landings)
dealloc(ground_roll)
dealloc(ground_roll_2)
dealloc(ground_roll_3)
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>327</ID>
                              <Description>"Remove Hard Landing / Roll Screen Shake"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(remove_land_shake,2048)
label(returnhere)
label(exit)

remove_land_shake:
jmp ACRSP.exe+6F502A

exit:
jmp returnhere

"ACRSP.exe"+6F5009:
jmp remove_land_shake
nop
returnhere:




[DISABLE]
dealloc(remove_land_shake)
"ACRSP.exe"+6F5009:
db 80 7D EB 00 74 1B
//cmp byte ptr [ebp-15],00
//je ACRSP.exe+6F502A
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>328</ID>
                              <Description>"Smooth Vault Ground Landing"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(smooth_vault,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(drop_height,4)
globalalloc(vault_to_fall_f,1)
globalalloc(vault_land_height,4)

vault_land_height:
dd (float)2

smooth_vault:
cmp byte ptr [vault_to_fall_f],01
jne originalcode
mov [vault_to_fall_f],00
movss xmm0,[drop_height]
comiss xmm0,[vault_land_height]
ja originalcode
jmp ACRSP.exe+6F5132

originalcode:
cmp [ebp-14],eax
jne ACRSP.exe+6F5132
mov ecx,[esi+08]
mov [vault_to_fall_f],00

exit:
jmp returnhere

"ACRSP.exe"+6F50FB:
jmp smooth_vault
returnhere:


[DISABLE]
dealloc(smooth_vault)
"ACRSP.exe"+6F50FB:
db 75 35 8B 4E 08
//jne ACRSP.exe+6F5132
//mov ecx,[esi+08]
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>329</ID>
                              <Description>"Forced Ground Roll"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(forced_ground_roll,2048)
label(returnhere)
label(exit)

globalalloc(forced_ground_roll_enable,1)
globalalloc(forced_ground_roll_f,1)

forced_ground_roll:
lea ecx,[eax+000000A0]
cmp byte ptr [forced_ground_roll_enable],01
jne exit
mov [forced_ground_roll_f],01
call ACRSP.exe+AA2840
jmp ACRSP.exe+160E5BB

exit:
jmp returnhere

"ACRSP.exe"+160E5A2:
jmp forced_ground_roll
nop
returnhere:


alloc(forced_ground_roll_2,2048)
label(returnhere2)
label(exit2)

forced_ground_roll_2:
call ACRSP.exe+6DF270
cmp byte ptr [forced_ground_roll_f],00
je exit2
mov [forced_ground_roll_f],00
jmp ACRSP.exe+70A16B

exit2:
jmp returnhere2

"ACRSP.exe"+70A162:
jmp forced_ground_roll_2
returnhere2:


[DISABLE]
"ACRSP.exe"+160E5A2:
db 8D 88 A0 00 00 00
//lea ecx,[eax+000000A0]

"ACRSP.exe"+70A162:
db E8 09 51 FD FF
//call ACRSP.exe+6DF270

dealloc(forced_ground_roll)
dealloc(forced_ground_roll_2)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>330</ID>
                              <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                              <Options moDeactivateChildrenAsWell="1"/>
                              <GroupHeader>1</GroupHeader>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>331</ID>
                                  <Description>"Values"</Description>
                                  <Options moHideChildren="1"/>
                                  <Color>808080</Color>
                                  <GroupHeader>1</GroupHeader>
                                  <CheatEntries>
                                    <CheatEntry>
                                      <ID>332</ID>
                                      <Description>"Drop Height"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <Color>808080</Color>
                                      <VariableType>Float</VariableType>
                                      <Address>drop_height</Address>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>333</ID>
                                      <Description>"Soft Land Height Threshold"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <Color>808080</Color>
                                      <VariableType>Float</VariableType>
                                      <Address>soft_land_height_threshold</Address>
                                    </CheatEntry>
                                  </CheatEntries>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>334</ID>
                          <Description>"Kiosk Moves"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(kiosk_moves,2048)
label(returnhere)
label(originalcode)
label(exit)
label(kiosk_roll)
labeL(kiosk_swing)

globalalloc(kiosk_roll_f,1)
globalalloc(kiosk_swing_f,1)
globalalloc(kiosk_roll_enable,1)
globalalloc(kiosk_swing_enable,1)
globalalloc(relative_input_f,4)
globalalloc(already_rolled_f,1)
globalalloc(zero,4)

zero:
dd (float)0

kiosk_moves:
cmp byte ptr [kiosk_roll_f],01
je kiosk_roll
cmp byte ptr [kiosk_swing_f],01
je kiosk_swing
jmp originalcode

kiosk_roll:
mov edx,02
jmp originalcode

kiosk_swing:
mov edx,01
jmp originalcode

originalcode:
mov [kiosk_roll_f],00
mov [kiosk_swing_f],00
mov [eax+24],edx
lea edx,[eax+28]

exit:
jmp returnhere

"ACRSP.exe"+8A009F:
jmp kiosk_moves
nop
returnhere:


alloc(kiosk_moves_2,2048)
label(returnhere2)
label(exit2)

kiosk_moves_2:
fcomip st(0),st(1)
fstp st(0)
fld dword ptr [relative_input_f]
fld dword ptr [zero]
fcomip st(0),st(1)
fstp st(0)
jna ACRSP.exe+16B2C94

exit2:
jmp returnhere2

"ACRSP.exe"+16B2C7E:
jmp kiosk_moves_2
nop
returnhere2:


alloc(manual_kiosk,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

manual_kiosk:
cmp byte ptr [kiosk_roll_enable],01
jne originalcode3
cmp [ebx+14],00000080
je originalcode3
cmp [ebx+14],00000040
je originalcode3
mov [ebx+14],00000400
mov [kiosk_roll_f],01
cmp byte ptr [kiosk_swing_enable],01
jne originalcode3
mov [kiosk_swing_f],01
mov [kiosk_roll_f],00

originalcode3:
push edx
push esi
push eax
lea ecx,[ebp-3C]

exit3:
jmp returnhere3

"ACRSP.exe"+BF07E3:
jmp manual_kiosk
nop
returnhere3:


alloc(kiosk_roll_end,2048)
label(returnhere4)
label(exit4)

kiosk_roll_end:
mov [already_rolled_f],01
jmp ACRSP.exe+16B2E0C

exit4:
jmp returnhere4

"ACRSP.exe"+16B2DF9:
jmp kiosk_roll_end
returnhere4:


alloc(kiosk_swing_end,2048)
label(returnhere5)
label(exit5)

kiosk_swing_end:
mov [already_rolled_f],01
mov ecx,esi
call ACRSP.exe+16B2A30

exit5:
jmp returnhere5

"ACRSP.exe"+16B2DB7:
jmp kiosk_swing_end
nop 2
returnhere5:


[DISABLE]
"ACRSP.exe"+8A009F:
db 89 50 24 8D 50 28
//mov [eax+24],edx
//lea edx,[eax+28]

"ACRSP.exe"+16B2C7E:
db DF F1 DD D8 76 10
//fcomip st(0),st(1)
//fstp st(0)
//jna ACRSP.exe+16B2C94

"ACRSP.exe"+BF07E3:
db 52 56 50 8D 4D C4
//push edx
//push esi
//push eax
//lea ecx,[ebp-3C]

"ACRSP.exe"+16B2DF9:
db E8 82 F8 FF FF
//call ACRSP.exe+16B2680

"ACRSP.exe"+16B2DB7:
db 8B CE E8 72 FC FF FF
//mov ecx,esi
//call ACRSP.exe+16B2A30

dealloc(kiosk_moves)
dealloc(kiosk_moves_2)
dealloc(manual_kiosk)
dealloc(kiosk_roll_end)
dealloc(kiosk_swing_end)
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>335</ID>
                              <Description>"Forced Kiosk"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(forced_kiosk,2048)
label(returnhere)
label(originalcode)
label(force_move)
label(exit)

globalalloc(kiosk_roll_f,1)
globalalloc(kiosk_swing_f,1)
globalalloc(forced_kiosk_enable,1)
globalalloc(kiosk_roll_enable,1)
globalalloc(kiosk_swing_enable,1)
globalalloc(already_rolled_f,1)
globalalloc(player_velocity,16)
globalalloc(falling_height,4)

falling_height:
dd (float)0.5

forced_kiosk:
fld dword ptr [player_velocity+8]
fld dword ptr [falling_height]
fcomip st(0),st(1)
fstp st(0)
ja originalcode
cmp byte ptr [already_rolled_f],01
je originalcode
cmp byte ptr [forced_kiosk_enable],01
jne originalcode
cmp byte ptr [kiosk_roll_enable],01
jne originalcode
mov [kiosk_roll_f],01
mov [already_rolled_f],01
cmp byte ptr [kiosk_swing_enable],01
jne force_move
mov [kiosk_swing_f],01
mov [kiosk_roll_f],00

force_move:
mov ecx,esi
jmp exit

originalcode:
test al,al
je ACRSP.exe+70A1AC
mov ecx,esi

exit:
jmp returnhere

"ACRSP.exe"+70A19B:
jmp forced_kiosk
nop
returnhere:


alloc(forced_kiosk_2,2048)
label(returnhere2)
label(exit2)

forced_kiosk_2:
call ACRSP.exe+199AB0
cmp byte ptr [forced_kiosk_enable],01
jne exit2
fstp st(0)
jmp ACRSP.exe+16B36FB

exit2:
jmp returnhere2

"ACRSP.exe"+16B36E8:
jmp forced_kiosk_2
returnhere2:


[DISABLE]
"ACRSP.exe"+70A19B:
db 84 C0 74 0D 8B CE
//test al,al
//je ACRSP.exe+70A1AC
//mov ecx,esi

"ACRSP.exe"+16B36E8:
db E8 C3 63 AE FE
//call ACRSP.exe+199AB0

dealloc(forced_kiosk)
dealloc(forced_kiosk_2)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>336</ID>
                              <Description>"Kiosk Cancel"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(kiosk_roll_cancel,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(kiosk_cancel_enable,1)

kiosk_roll_cancel:
cmp byte ptr [kiosk_cancel_enable],01
je ACRSP.exe+16B2E0C

originalcode:
cmp dword ptr [ebp+08],00
jne ACRSP.exe+16B2E13
mov eax,[esi+08]

exit:
jmp returnhere

"ACRSP.exe"+16B2DDA:
jmp kiosk_roll_cancel
returnhere:


alloc(kiosk_swing_cancel,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

kiosk_swing_cancel:
cmp byte ptr [kiosk_cancel_enable],01
je ACRSP.exe+16B2DB7

originalcode2:
cmp dword ptr [ebp+08],00
jne ACRSP.exe+16B2DBE
mov eax,[esi+08]

exit2:
jmp returnhere2

"ACRSP.exe"+16B2D9A:
jmp kiosk_swing_cancel
returnhere2:


[DISABLE]
"ACRSP.exe"+16B2DDA:
db 75 37 8B 46 08
//jne ACRSP.exe+16B2E13
//mov eax,[esi+08]

"ACRSP.exe"+16B2D9A:
db 75 22 8B 46 08
//jne ACRSP.exe+16B2DBE
//mov eax,[esi+08]

dealloc(kiosk_roll_cancel)
dealloc(kiosk_swing_cancel)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>337</ID>
                              <Description>"Smooth Prescriptive Kiosk Moves"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(smooth_kiosk,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(kiosk_speed,4)
kiosk_speed:
dd (float)0.9

smooth_kiosk:
fstp st(0)
fld dword ptr [kiosk_speed]

originalcode:
fxch st(1)
fcomip st(0),st(1)
fstp st(0)

exit:
jmp returnhere

"ACRSP.exe"+16B36F3:
jmp smooth_kiosk
nop
returnhere:




[DISABLE]
dealloc(smooth_kiosk)
"ACRSP.exe"+16B36F3:
db D9 C9 DF F1 DD D8
//fxch st(1)
//fcomip st(0),st(1)
//fstp st(0)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>338</ID>
                              <Description>"Kiosk Distance Modifier"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(kiosk_distance,2048)
label(returnhere)
label(exit)
label(short_roll)
label(far_roll)
label(dismount_roll)

globalalloc(pEntity,4)
globalalloc(kiosk_roll_air_f,1)
globalalloc(parkour_down_low_enable,1)
globalalloc(parkour_down_enable,1)
globalalloc(parkour_far_enable,1)
globalalloc(short_kiosk_roll_value,4)
globalalloc(far_kiosk_roll_value,4)
globalalloc(dismount_kiosk_roll_value,4)

short_kiosk_roll_value:
dd (float)0.7

far_kiosk_roll_value:
dd (float)1.2

dismount_kiosk_roll_value:
dd (float)0.4

kiosk_distance:
movss xmm0,[eax+68]
cmp eax,[pEntity]
jne exit
cmp byte ptr [kiosk_roll_air_f],01
jne exit
cmp byte ptr [parkour_down_low_enable],01
je dismount_roll
cmp byte ptr [parkour_down_enable],01
je short_roll
cmp byte ptr [parkour_far_enable],01
je far_roll
jmp exit

short_roll:
movss xmm0,[short_kiosk_roll_value]
jmp exit

far_roll:
movss xmm0,[far_kiosk_roll_value]
jmp exit

dismount_roll:
movss xmm0,[dismount_kiosk_roll_value]

exit:
jmp returnhere

"ACRSP.exe"+13F246:
jmp kiosk_distance
returnhere:


alloc(kiosk_air,2048)
label(returnhere1)
label(exit1)

kiosk_air:
mov [kiosk_roll_air_f],01
push ebp
mov ebp,esp
cmp dword ptr [ebp+08],00

exit1:
jmp returnhere1

"ACRSP.exe"+16B2DD0:
jmp kiosk_air
nop 2
returnhere1:


alloc(kiosk_finish,2048)
label(returnhere2)
label(exit2)

kiosk_finish:
mov [kiosk_roll_air_f],00
mov ecx,esi
call ACRSP.exe+16B2AA0

exit2:
jmp returnhere2

"ACRSP.exe"+16B2E0C:
jmp kiosk_finish
nop 2
returnhere2:


[DISABLE]
"ACRSP.exe"+13F246:
db F3 0F 10 40 68
//movss xmm0,[eax+68]

"ACRSP.exe"+16B2DD0:
db 55 8B EC 83 7D 08 00
//push ebp
//mov ebp,esp
//cmp dword ptr [ebp+08],00

"ACRSP.exe"+16B2E0C:
db 8B CE E8 8D FC FF FF
//mov ecx,esi
//call ACRSP.exe+16B2AA0

dealloc(kiosk_distance)
dealloc(kiosk_air)
dealloc(kiosk_finish)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>339</ID>
                              <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                              <Options moDeactivateChildrenAsWell="1"/>
                              <GroupHeader>1</GroupHeader>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>340</ID>
                                  <Description>"Values"</Description>
                                  <Options moHideChildren="1"/>
                                  <Color>808080</Color>
                                  <GroupHeader>1</GroupHeader>
                                  <CheatEntries>
                                    <CheatEntry>
                                      <ID>341</ID>
                                      <Description>"Kiosk Start Speed"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <Color>808080</Color>
                                      <VariableType>Float</VariableType>
                                      <Address>kiosk_speed</Address>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>342</ID>
                                      <Description>"Short Kiosk Roll Value"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <Color>808080</Color>
                                      <VariableType>Float</VariableType>
                                      <Address>short_kiosk_roll_value</Address>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>343</ID>
                                      <Description>"Far Kiosk Roll Value"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <Color>808080</Color>
                                      <VariableType>Float</VariableType>
                                      <Address>far_kiosk_roll_value</Address>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>344</ID>
                                      <Description>"Dismount Kiosk Roll Value"</Description>
                                      <ShowAsSigned>0</ShowAsSigned>
                                      <Color>808080</Color>
                                      <VariableType>Float</VariableType>
                                      <Address>dismount_kiosk_roll_value</Address>
                                    </CheatEntry>
                                  </CheatEntries>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>345</ID>
                          <Description>"Enhanced Direction"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(enhanced_direction,2048)
label(returnhere)
label(originalcode)
label(exit)
label(clamp)
label(clamp_1)
label(swan_dive)

globalalloc(pEntity,4)
globalalloc(direction_input_f,16)
globalalloc(diag_swing_f,1)
globalalloc(relative_input_f,4)
globalalloc(clamp_f,1)
globalalloc(inverse,16)
globalalloc(swan_dive_f,1)
globalalloc(vector_coords,16)
globalalloc(angle_radians,4)
globalalloc(cos_value,4)
globalalloc(sin_value,4)
globalalloc(vector_pos,16)
globalalloc(vector_neg,16)

inverse:
dd (float)1 (float)-1 (float)0 (float)0

angle_radians:
dd (float)1.05

enhanced_direction:
cmp ecx,[pEntity]
jne originalcode
cmp [swan_dive_f],01
je swan_dive
cmp [direction_input_f],00000000
je originalcode
cmp byte ptr [diag_swing_f],00
je originalcode
cmp byte ptr [clamp_f],01
je clamp
movaps xmm0,[direction_input_f]
movaps [eax+20],xmm0
shufps xmm0,xmm0,E1
mulps xmm0,[inverse]
movaps [eax+10],xmm0
mov [diag_swing_f],00
jmp originalcode

clamp:
fld dword ptr [angle_radians]
fsin
fstp dword ptr [sin_value]
fld dword ptr [angle_radians]
fcos
fstp dword ptr [cos_value]

fld dword ptr [relative_input_f]
fldz
fcomip st(0),st(1)
fstp st(0)
ja clamp_1

fld dword ptr [angle_radians]
fchs
fsin
fstp dword ptr [sin_value]
fld dword ptr [angle_radians]
fchs
fcos
fstp dword ptr [cos_value]

clamp_1:
fld dword ptr [cos_value]
fstp dword ptr [vector_pos]
fld dword ptr [sin_value]
fstp dword ptr [vector_pos+4]

fld dword ptr [sin_value]
fstp dword ptr [vector_neg]
fld dword ptr [cos_value]
fchs
fstp dword ptr [vector_neg+4]

movaps xmm0,[eax+20]
movaps xmm1,xmm0
shufps xmm0,xmm0,0
shufps xmm1,xmm1,55
mulps xmm0,[vector_pos]
mulps xmm1,[vector_neg]
subps xmm0,xmm1
movaps [eax+20],xmm0
shufps xmm0,xmm0,E1
mulps xmm0,[inverse]
movaps [eax+10],xmm0
mov [diag_swing_f],00
mov [clamp_f],00
jmp originalcode

swan_dive:
movaps xmm0,[vector_coords]
movaps [eax+20],xmm0
shufps xmm0,xmm0,E1
mulps xmm0,[inverse]
movaps [eax+10],xmm0

originalcode:
mov ecx,[eax+08]
test ecx,ecx

exit:
jmp returnhere

"ACRSP.exe"+202F38:
jmp enhanced_direction
returnhere:


alloc(enhanced_direction_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

enhanced_direction_2:
cmp ecx,[pEntity]
jne originalcode2
cmp byte ptr [swan_dive_f],01
je exit2
cmp byte ptr [diag_swing_f],00
je originalcode2
cmp [direction_input_f],00000000
je originalcode2
jmp exit2

originalcode2:
movaps [eax],xmm0
movaps xmm0,[edx+10]
movaps [eax+10],xmm0

exit2:
jmp returnhere2

"ACRSP.exe"+1780EF:
jmp enhanced_direction_2
nop 6
returnhere2:


[DISABLE]
"ACRSP.exe"+202F38:
db 8B 48 08 85 C9
//mov ecx,[eax+08]
//test ecx,ecx

"ACRSP.exe"+1780EF:
db 0F 29 00 0F 28 42 10 0F 29 40 10
//movaps [eax],xmm0
//movaps xmm0,[edx+10]
//movaps [eax+10],xmm0

dealloc(enhanced_direction)
dealloc(enhanced_direction_2)
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>346</ID>
                              <Description>"Swing"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(enhanced_swing,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(diag_swing_f,1)
globalalloc(self_flip_f,1)
globalalloc(clamp_f,1)
globalalloc(direction_input_f,16)
globalalloc(relative_input_f,4)
globalalloc(angle_radians,4)
alloc(angle_restriction_back,4)
alloc(angle_restriction_side,4)

angle_restriction_back:
dd (float)2

angle_restriction_side:
dd (float)1.05

enhanced_swing:
cmp byte ptr [self_flip_f],01
je originalcode
mov [diag_swing_f],01
mov ecx,[angle_restriction_side]
mov [angle_radians],ecx

originalcode:
mov ecx,[esi+10]
lea edx,[ebp-000000C0]

exit:
jmp returnhere

"ACRSP.exe"+1732D3B:
jmp enhanced_swing
nop 4
returnhere:


alloc(enhanced_swing_2,2048)
label(returnhere2)
label(exit2)

enhanced_swing_2:
//je ACRSP.exe+17330B6
mov ecx,[ebp-18]

exit2:
jmp returnhere2

"ACRSP.exe"+1733058:
jmp enhanced_swing_2
returnhere2:


alloc(self_flip,2048)
label(returnhere3)
label(exit3)

self_flip:
mov [clamp_f],00
mov [self_flip_f],00
ja exit3
fld dword ptr [ebp-44]
fld dword ptr [angle_restriction_back]
fcomip st(0),st(1)
fstp st(0)
ja clamp_code
mov [self_flip_f],01
jmp exit3

clamp_code:
mov [clamp_f],01

exit3:
jmp returnhere3

"ACRSP.exe"+1732CF9:
jmp self_flip
nop
returnhere3:


alloc(self_flip_2,2048)
label(returnhere4)
label(exit4)

self_flip_2:
cmp byte ptr [self_flip_f],01
je ACRSP.exe+6A9981
xor ecx,ecx
lea edx,[ebp-08]

exit4:
jmp returnhere4

"ACRSP.exe"+6A9939:
jmp self_flip_2
returnhere4:


alloc(self_flip_3,2048)
label(returnhere5)
label(exit5)

self_flip_3:
lea ecx,[esi+00000F54]

exit5:
jmp returnhere5

"ACRSP.exe"+6A999F:
jmp self_flip_3
nop 3
returnhere5:


[DISABLE]
"ACRSP.exe"+1732D3B:
db 8B 4E 10 8D 95 40 FF FF FF
//mov ecx,[esi+10]
//lea edx,[ebp-000000C0]

"ACRSP.exe"+1733058:
db 74 5C 8B 4D E8
//je ACRSP.exe+17330B6
//mov ecx,[ebp-18]

"ACRSP.exe"+1732CF9:
db 0F 86 CB 03 00 00
//jbe ACRSP.exe+17330CA

"ACRSP.exe"+6A9939:
db 33 C9 8D 55 F8
//xor ecx,ecx
//lea edx,[ebp-08]

"ACRSP.exe"+6A999F:
db 74 63 8D 8E 54 0F 00 00
//je ACRSP.exe+6A9A04
//lea ecx,[esi+00000F54]

dealloc(enhanced_swing)
dealloc(enhanced_swing_2)
dealloc(self_flip)
dealloc(self_flip_2)
dealloc(self_flip_3)
dealloc(angle_restriction_back)
dealloc(angle_restriction_side)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>347</ID>
                              <Description>"Ground Roll"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(enhanced_ground_roll,2048)
label(returnhere)
label(originalcode)
label(clamp_code)
label(exit)

globalalloc(diag_swing_f,1)
globalalloc(clamp_f,1)
globalalloc(direction_input_f,16)
globalalloc(relative_input_f,4)
globalalloc(angle_radians,4)
alloc(angle_restriction_back,4)
alloc(angle_restriction_side,4)

angle_restriction_back:
dd (float)2.5

angle_restriction_side:
dd (float)0.8

enhanced_ground_roll:
mov [diag_swing_f],00
mov [clamp_f],00
cmp [direction_input_f],00000000
je originalcode
fld dword ptr [relative_input_f]
fabs
fld dword ptr [angle_restriction_back]
fcomip st(0),st(1)
fstp st(0)
jb originalcode
fld dword ptr [relative_input_f]
fabs
fld dword ptr [angle_restriction_side]
fcomip st(0),st(1)
fstp st(0)
ja clamp_code
mov [clamp_f],01
mov eax,[angle_restriction_side]
mov [angle_radians],eax

clamp_code:
mov [diag_swing_f],01

originalcode:
lea eax,[ebp-1C]
push eax
push ecx

exit:
jmp returnhere

"ACRSP.exe"+6F4ECB:
jmp enhanced_ground_roll
returnhere:




[DISABLE]
dealloc(enhanced_ground_roll)
dealloc(angle_restriction_back)
dealloc(angle_restriction_side)
"ACRSP.exe"+6F4ECB:
db 8D 45 E4 50 51
//lea eax,[ebp-1C]
//push eax
//push ecx
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>348</ID>
                              <Description>"Kiosk Roll"</Description>
                              <Options moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(enhanced_kiosk_roll,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(diag_swing_f,1)
globalalloc(clamp_f,1)
globalalloc(direction_input_f,16)
globalalloc(relative_input_f,4)
alloc(angle_restriction,4)

angle_restriction:
dd (float)2

enhanced_kiosk_roll:
mov [diag_swing_f],00
mov [clamp_f],00
cmp [edi+24],00000001
je originalcode
cmp [direction_input_f],00000000
je originalcode
fld dword ptr [relative_input_f]
fabs
fld dword ptr [angle_restriction]
fcomip st(0),st(1)
fstp st(0)
jb originalcode
mov [diag_swing_f],01

originalcode:
pop edi
pop esi
mov esp,ebp
pop ebp

exit:
jmp returnhere

"ACRSP.exe"+16B2C9B:
jmp enhanced_kiosk_roll
returnhere:


alloc(enhanced_kiosk_roll_2,2048)
label(returnhere2)
label(exit2)

enhanced_kiosk_roll_2:
mov [diag_swing_f],00
mov ecx,[eax+00000108]

exit2:
jmp returnhere2

"ACRSP.exe"+16B2DDF:
jmp enhanced_kiosk_roll_2
nop
returnhere2:


[DISABLE]
"ACRSP.exe"+16B2C9B:
db 5F 5E 8B E5 5D
//pop edi
//pop esi
//mov esp,ebp
//pop ebp

"ACRSP.exe"+16B2DDF:
db 8B 88 08 01 00 00
//mov ecx,[eax+00000108]

dealloc(enhanced_kiosk_roll)
dealloc(enhanced_kiosk_roll_2)
dealloc(angle_restriction)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>349</ID>
                              <Description>"Lamp Hookblade"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(enhance_lamp_hookblade,2048)
label(returnhere)
label(originalcode)
label(exit)

globalalloc(diag_swing_f,1)
globalalloc(lamp_hook_f,1)
globalalloc(direction_input_f,16)
globalalloc(relative_input_f,4)
alloc(angle_restriction,4)

angle_restriction:
dd (float)1.05

enhance_lamp_hookblade:
mov [lamp_hook_f],01
mov [diag_swing_f],00
mov [clamp_f],00
cmp [direction_input_f],00000000
je originalcode
fld dword ptr [relative_input_f]
fabs
fld dword ptr [angle_restriction]
fcomip st(0),st(1)
fstp st(0)
jb originalcode
mov [diag_swing_f],01

originalcode:
mov eax,[esi+08]
mov ecx,[eax+00000108]

exit:
jmp returnhere

"ACRSP.exe"+70722A:
jmp enhance_lamp_hookblade
nop 4
returnhere:




[DISABLE]
dealloc(enhance_lamp_hookblade)
dealloc(angle_restriction)
"ACRSP.exe"+70722A:
db 8B 46 08 8B 88 08 01 00 00
//mov eax,[esi+08]
//mov ecx,[eax+00000108]
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>350</ID>
                              <Description>"Zip Line"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(enhanced_zip_line,2048)
label(returnhere)
label(originalcode)
label(clamp_code)
label(exit)

globalalloc(diag_swing_f,1)
globalalloc(clamp_f,1)
globalalloc(direction_input_f,16)
globalalloc(relative_input_f,4)
globalalloc(angle_radians,4)
alloc(angle_restriction_back,4)
alloc(angle_restriction_side,4)

angle_restriction_back:
dd (float)2.5

angle_restriction_side:
dd (float)0.53

enhanced_zip_line:
mov [diag_swing_f],00
mov [clamp_f],00
cmp [direction_input_f],00000000
je originalcode
fld dword ptr [relative_input_f]
fabs
fld dword ptr [angle_restriction_back]
fcomip st(0),st(1)
fstp st(0)
jb originalcode
fld dword ptr [relative_input_f]
fabs
fld dword ptr [angle_restriction_side]
fcomip st(0),st(1)
fstp st(0)
ja clamp_code
mov [clamp_f],01
mov eax,[angle_restriction_side]
mov [angle_radians],eax

clamp_code:
mov [diag_swing_f],01

originalcode:
mov eax,[esi]
mov edx,[eax+04]

exit:
jmp returnhere

"ACRSP.exe"+174DC55:
jmp enhanced_zip_line
returnhere:




[DISABLE]
dealloc(enhanced_zip_line)
dealloc(angle_restriction_back)
dealloc(angle_restriction_side)
"ACRSP.exe"+174DC55:
db 8B 06 8B 50 04
//mov eax,[esi]
//mov edx,[eax+04]
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>351</ID>
                          <Description>"Coords Modifier"</Description>
                          <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
alloc(coords_modifier,2048)
label(returnhere)
label(originalcode)
label(exit)
label(get_coords)
label(coords_mod)
label(vault_coords_mod)
label(swing_up)
label(swing_up_2)
label(parkour_down_low)
label(vault_landing_far)
label(vault_landing_low)
label(vault_freeform)
label(coords_change)
label(forced_hang)
label(dive_beam_far)
label(self_swing)

globalalloc(pEntity,4)
globalalloc(coords_mod_f,1)
globalalloc(swing_up_f,1)
globalalloc(parkour_down_low_f,1)
globalalloc(vault_landing_far_f,1)
globalalloc(vault_landing_low_f,1)
globalalloc(vault_freeform_f,1)
globalalloc(forced_hang_f,1)
globalalloc(dive_beam_far_f,1)
globalalloc(self_swing_f,1)
globalalloc(on_vault_f,1)
globalalloc(smooth_fall_f,1)
globalalloc(player_coords,16)
globalalloc(player_rotation,16)
globalalloc(direction_input_f,16)
globalalloc(empty_height_float,16)
globalalloc(swing_up_height,16)
globalalloc(swing_up_distance,4)
globalalloc(vault_landing_far_height,16)
globalalloc(vault_landing_far_distance,4)
globalalloc(vault_landing_low_height,16)
globalalloc(vault_landing_low_distance,4)
globalalloc(vault_target_height,16)
globalalloc(vault_target_distance,4)
globalalloc(dive_beam_far_height,16)
globalalloc(dive_beam_far_distance,4)
globalalloc(self_swing_height,16)
globalalloc(self_swing_distance,4)
globalalloc(parkour_down_low_height,16)
globalalloc(forced_hang_height,16)
globalalloc(forced_hang_bonus_height,16)
globalalloc(forced_hang_minimum_height,16)

globalalloc(parkour_down_low_enable,1)
globalalloc(dive_beam_far_enable,1)
globalalloc(vault_landing_low_enable,1)
globalalloc(vault_landing_far_enable,1)
globalalloc(forced_hang_enable,1)
globalalloc(parkour_down_enable,1)
globalalloc(swing_up_enable,1)
globalalloc(parkour_far_enable,1)
globalalloc(self_swing_enable,1)
globalalloc(dive_beam_alt_enable,1)

empty_height_float:
dd (float)1 (float)1 (float)0 (float)0

swing_up_height:
dd (float)0 (float)0 (float)1 (float)0

parkour_down_low_height:
dd (float)0 (float)0 (float)-3.25 (float)0

vault_landing_far_height:
dd (float)0 (float)0 (float)1 (float)0

vault_landing_low_height:
dd (float)0 (float)0 (float)-3.25 (float)0

vault_target_height:
dd (float)0 (float)0 (float)2 (float)0

forced_hang_height:
dd (float)0 (float)0 (float)0.75 (float)0

forced_hang_bonus_height:
dd (float)0 (float)0 (float)1 (float)0

forced_hang_minimum_height:
dd (float)0 (float)0 (float)1.4 (float)0

dive_beam_far_height:
dd (float)0 (float)0 (float)-1 (float)0

self_swing_height:
dd (float)0 (float)0 (float)0 (float)0

dive_beam_far_distance:
dd (float)3

vault_landing_far_distance:
dd (float)1

vault_landing_low_distance:
dd (float)1

vault_target_distance:
dd (float)-2

swing_up_distance:
dd (float)0.5

self_swing_distance:
dd (float)-1

coords_modifier:
cmp byte ptr [coords_mod_f],01
je coords_mod
push ebx
mov ebx,[pEntity]
add ebx,10
cmp eax,ebx
pop ebx
je get_coords
jmp originalcode

get_coords:
movaps xmm2,[eax+10]
movaps [player_rotation],xmm2
movaps xmm2,[eax+30]
movaps [player_coords],xmm2
mov eax,[ebx+08]
jmp exit

coords_mod:
cmp byte ptr [on_vault_f],01
je vault_coords_mod
cmp byte ptr [dive_beam_far_f],01
je dive_beam_far
cmp byte ptr [swing_up_f],01
je swing_up
cmp byte ptr [parkour_down_low_f],01
je parkour_down_low
cmp byte ptr [self_swing_f],01
je self_swing
cmp byte ptr [forced_hang_f],01
je forced_hang
jmp originalcode

vault_coords_mod:
cmp byte ptr [vault_freeform_f],01
je vault_freeform
cmp byte ptr [vault_landing_far_f],01
je vault_landing_far
cmp byte ptr [vault_landing_low_f],01
je vault_landing_low
jmp originalcode

dive_beam_far:
movaps xmm1,[player_rotation]
movaps xmm2,[dive_beam_far_distance]
shufps xmm2,xmm2,0
mulps xmm1,xmm2
mulps xmm1,[empty_height_float]
addps xmm1,[dive_beam_far_height]
cmp byte ptr [dive_beam_alt_enable],01
je coords_change
mov [parkour_far_enable],00
jmp coords_change

swing_up:
movaps xmm1,[player_rotation]
cmp [direction_input_f],00000000
je swing_up_2
movaps xmm1,[direction_input_f]

swing_up_2:
movaps xmm2,[swing_up_distance]
shufps xmm2,xmm2,0
mulps xmm1,xmm2
mulps xmm1,[empty_height_float]
addps xmm1,[swing_up_height]
cmp byte ptr [forced_hang_f],00
je coords_change
addps xmm1,[forced_hang_bonus_height]
movaps xmm2,[forced_hang_minimum_height]
shufps xmm1,xmm1,C6
shufps xmm2,xmm2,C6
maxss xmm1,xmm2
shufps xmm1,xmm1,C6
jmp coords_change

parkour_down_low:
movaps xmm1,[parkour_down_low_height]
jmp coords_change

vault_landing_far:
movaps xmm1,[player_rotation]
movaps xmm2,[vault_landing_far_distance]
shufps xmm2,xmm2,0
mulps xmm1,xmm2
mulps xmm1,[empty_height_float]
addps xmm1,[vault_landing_far_height]
cmp byte ptr [forced_hang_f],00
je coords_change
addps xmm1,[forced_hang_bonus_height]
jmp coords_change

vault_landing_low:
movaps xmm1,[player_rotation]
movaps xmm2,[vault_landing_low_distance]
shufps xmm2,xmm2,0
mulps xmm1,xmm2
mulps xmm1,[empty_height_float]
addps xmm1,[vault_landing_low_height]
jmp coords_change

vault_freeform:
movaps xmm1,[player_rotation]
movaps xmm2,[vault_target_distance]
shufps xmm2,xmm2,0
mulps xmm1,xmm2
mulps xmm1,[empty_height_float]
addps xmm1,[vault_target_height]
mov [smooth_fall_f],01
jmp coords_change

forced_hang:
cmp byte ptr [on_hang_free_f],00
je originalcode
movaps xmm1,[forced_hang_height]
jmp coords_change

self_swing:
movaps xmm1,[direction_input_f]
movaps xmm2,[self_swing_distance]
shufps xmm2,xmm2,0
mulps xmm1,xmm2
mulps xmm1,[empty_height_float]
addps xmm1,[self_swing_height]
jmp coords_change

coords_change:
movaps xmm2,[eax+30]
addps xmm2,xmm1
mov eax,[ebx+08]
mov [coords_mod_f],00
mov [swing_up_f],00
mov [parkour_down_low_f],00
mov [vault_landing_far_f],00
mov [vault_landing_low_f],00
mov [vault_freeform_f],00
mov [forced_hang_f],00
mov [dive_beam_far_f],00
mov [self_swing_f],00
jmp exit

originalcode:
movaps xmm2,[eax+30]
mov eax,[ebx+08]

exit:
jmp returnhere

"ACRSP.exe"+7730:
jmp coords_modifier
nop 2
returnhere:


alloc(coords_modifier_2,2048)
label(returnhere2)
label(exit2)

coords_modifier_2:
mov [coords_mod_f],00
mov [swing_up_f],00
mov [parkour_down_low_f],00
mov [vault_landing_far_f],00
mov [vault_landing_low_f],00
mov [vault_freeform_f],00
mov [forced_hang_f],00
mov [dive_beam_far_f],00
mov [self_swing_f],00
add dword ptr [ebp-04],3C
inc eax

exit2:
jmp returnhere2

"ACRSP.exe"+172BFC7:
jmp coords_modifier_2
returnhere2:


alloc(coords_modifier_3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

coords_modifier_3:
cmp byte ptr [parkour_down_low_enable],01
jne @f
mov [parkour_down_low_f],01

@@:
cmp byte ptr [dive_beam_far_enable],01
jne @f
mov [dive_beam_far_f],01

@@:
cmp byte ptr [vault_landing_low_enable],01
jne @f
cmp byte ptr [on_vault_f],01
jne @f
mov [vault_landing_low_f],01

@@:
cmp byte ptr [vault_landing_far_enable],01
jne @f
cmp byte ptr [on_vault_f],01
jne @f
mov [vault_landing_far_f],01

@@:
cmp byte ptr [freeform_enable],01
jne @f
cmp byte ptr [on_vault_f],01
jne @f
mov [vault_freeform_f],01

@@:
cmp byte ptr [self_swing_enable],01
jne @f
mov [self_swing_f],01

@@:
cmp byte ptr [forced_hang_enable],01
jne @f
cmp byte ptr [parkour_down_enable],01
je @f
mov [forced_hang_f],01

@@:
cmp byte ptr [swing_up_enable],01
jne @f
mov [swing_up_f],01

originalcode3:
add esi,[ebp-04]
mov ax,[esi+0A]

exit3:
jmp returnhere3

"ACRSP.exe"+172BF76:
jmp coords_modifier_3
nop 2
returnhere3:


[DISABLE]
"ACRSP.exe"+7730:
db 0F 28 50 30 8B 43 08
//movaps xmm2,[eax+30]
//mov eax,[ebx+08]

"ACRSP.exe"+172BFC7:
db 83 45 FC 3C 40
//add dword ptr [ebp-04],3C
//inc eax

"ACRSP.exe"+172BF76:
db 03 75 FC 66 8B 46 0A
//add esi,[ebp-04]
//mov ax,[esi+0A]

dealloc(coords_modifier)
dealloc(coords_modifier_2)
dealloc(coords_modifier_3)
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>352</ID>
                              <Description>"Target Modifier"</Description>
                              <Options moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(target_modifier,4096)
label(returnhere)
label(originalcode)
label(exit)
label(lamp_hook_check)
label(ledge_drop_check)
label(freeform_jump_diff_check)
label(checks)
label(near_miss)
label(vault_inner_ledge)
label(nso_jump_short)
label(nso_jump_far)
label(nso_jump_dismount)
label(ground_jump_short)
label(ground_jump_far)
label(ground_jump_dismount)
label(swing_short)
label(swing_far)
label(swing_dismount)
label(hang_short)
label(hang_far)
label(hang_dismount)
label(ledge_drop)
label(ledge_drop_short)
label(ledge_drop_far)
label(ledge_drop_dismount)
label(freeform_jump)
label(parkour_down_freeform_jump)
label(parkour_down_freeform_swing)
label(parkour_down_low_freeform_jump)
label(parkour_down_low_freeform_swing)
label(lamp_hook_freeform)
label(lamp_hook_freeform_short)
label(lamp_hook_freeform_far)
label(lamp_hook_freeform_dismount)
label(vault_freeform)
label(vault_freeform_short)
label(vault_freeform_far)
label(vault_freeform_dismount)
label(rotation_vector)
label(vector)
label(math)
label(below_zero)

//Flags and mod states
globalalloc(pEntity,4)
globalalloc(target_f,1)
globalalloc(ledge_drop_f,1)
globalalloc(freeform_jump_f,1)
globalalloc(on_hang_free_f,1)
globalalloc(on_hang_wall_f,1)
globalalloc(on_ground_f,1)
globalalloc(on_nso_f,1)
globalalloc(on_vault_f,1)
globalalloc(vault_inner_ledge_f,1)
globalalloc(near_miss_f,1)
globalalloc(smooth_fall_f,1)
globalalloc(on_hang_free_f,1)
globalalloc(dismount_hang_free_eject_f,1)
globalalloc(already_rolled_f,1)
globalalloc(move_type_f,4)
globalalloc(eject_clamp_f,1)
globalalloc(lamp_hook_f,1)

globalalloc(parkour_down_enable,1)
globalalloc(parkour_down_low_enable,1)
globalalloc(freeform_enable,1)
globalalloc(short_freeform_enable,1)
globalalloc(far_freeform_enable,1)
globalalloc(near_miss_enable,1)
globalalloc(dismount_enable,1)

//Player and target coordinates
globalalloc(player_coords,16)
globalalloc(player_rotation,16)
globalalloc(start_coords,16)
globalalloc(target_coords,16)
globalalloc(vector_coords,16)
globalalloc(direction_input_f,16)
globalalloc(input_vector_coords,16)
globalalloc(dot_product,16)

// Jump and movement height values
globalalloc(nso_jump_short_height,16)
globalalloc(nso_jump_far_height,16)
globalalloc(nso_jump_dismount_height,16)
globalalloc(ground_jump_short_height,16)
globalalloc(ground_jump_far_height,16)
globalalloc(ground_jump_dismount_height,16)
globalalloc(swing_short_height,16)
globalalloc(swing_far_height,16)
globalalloc(swing_dismount_height,16)
globalalloc(hang_short_height,16)
globalalloc(hang_far_height,16)
globalalloc(hang_dismount_height,16)
globalalloc(ledge_drop_short_height,16)
globalalloc(ledge_drop_far_height,16)
globalalloc(ledge_drop_dismount_height,16)
globalalloc(lamp_hook_freeform_height,16)
globalalloc(lamp_hook_freeform_short_height,16)
globalalloc(lamp_hook_freeform_far_height,16)
globalalloc(lamp_hook_freeform_dismount_height,16)
globalalloc(vault_freeform_height,16)
globalalloc(vault_freeform_short_height,16)
globalalloc(vault_freeform_far_height,16)
globalalloc(vault_freeform_dismount_height,16)
globalalloc(vault_inner_ledge_height,16)
globalalloc(near_miss_height,16)
globalalloc(parkour_down_freeform_jump_height,16)
globalalloc(parkour_down_freeform_swing_height,16)
globalalloc(parkour_down_low_freeform_jump_height,16)
globalalloc(parkour_down_low_freeform_swing_height,16)
globalalloc(freeform_jump_target_diff_height,16)
globalalloc(swing_up_height_cycle,4)

nso_jump_short_height:
dd (float)0 (float)0 (float)0 (float)0
nso_jump_far_height:
dd (float)0 (float)0 (float)0 (float)0
nso_jump_dismount_height:
dd (float)0 (float)0 (float)0 (float)0

ground_jump_short_height:
dd (float)0 (float)0 (float)0 (float)0
ground_jump_far_height:
dd (float)0 (float)0 (float)0 (float)0
ground_jump_dismount_height:
dd (float)0 (float)0 (float)0 (float)0

swing_short_height:
dd (float)0 (float)0 (float)0 (float)0
swing_far_height:
dd (float)0 (float)0 (float)0 (float)0
swing_dismount_height:
dd (float)0 (float)0 (float)0 (float)0

hang_short_height:
dd (float)0 (float)0 (float)0 (float)0
hang_far_height:
dd (float)0 (float)0 (float)0 (float)0
hang_dismount_height:
dd (float)0 (float)0 (float)0 (float)0

ledge_drop_short_height:
dd (float)0 (float)0 (float)0 (float)0
ledge_drop_far_height:
dd (float)0 (float)0 (float)0 (float)0
ledge_drop_dismount_height:
dd (float)0 (float)0 (float)0 (float)0

lamp_hook_freeform_height:
dd (float)0 (float)0 (float)0 (float)0
lamp_hook_freeform_short_height:
dd (float)0 (float)0 (float)0 (float)0
lamp_hook_freeform_far_height:
dd (float)0 (float)0 (float)0 (float)0
lamp_hook_freeform_dismount_height:
dd (float)0 (float)0 (float)0 (float)0

vault_freeform_height:
dd (float)0 (float)0 (float)-4 (float)0
vault_freeform_short_height:
dd (float)0 (float)0 (float)-4 (float)0
vault_freeform_far_height:
dd (float)0 (float)0 (float)-4 (float)0
vault_freeform_dismount_height:
dd (float)0 (float)0 (float)-4 (float)0
vault_inner_ledge_height:
dd (float)0 (float)0 (float)0 (float)0

near_miss_height:
dd (float)0 (float)0 (float)-1.5 (float)0

parkour_down_freeform_jump_height:
dd (float)0 (float)0 (float)1 (float)0
parkour_down_freeform_swing_height:
dd (float)0 (float)0 (float)0 (float)0
parkour_down_low_freeform_jump_height:
dd (float)0 (float)0 (float)1 (float)0
parkour_down_low_freeform_swing_height:
dd (float)0 (float)0 (float)0 (float)0

freeform_jump_target_diff_height:
dd (float)0 (float)0 (float)-3 (float)0

swing_up_height_cycle:
dd (float)0.75

// Jump and movement value modifiers
globalalloc(nso_jump_short_distance,4)
globalalloc(nso_jump_far_distance,4)
globalalloc(nso_jump_dismount_distance,4)
globalalloc(ground_jump_short_distance,4)
globalalloc(ground_jump_far_distance,4)
globalalloc(ground_jump_dismount_distance,4)
globalalloc(swing_short_distance,4)
globalalloc(swing_far_distance,4)
globalalloc(swing_dismount_distance,4)
globalalloc(hang_short_distance,4)
globalalloc(hang_far_distance,4)
globalalloc(hang_dismount_distance,4)
globalalloc(ledge_drop_short_distance,4)
globalalloc(ledge_drop_far_distance,4)
globalalloc(ledge_drop_dismount_distance,4)
globalalloc(lamp_hook_freeform_distance,4)
globalalloc(lamp_hook_freeform_short_distance,4)
globalalloc(lamp_hook_freeform_far_distance,4)
globalalloc(lamp_hook_freeform_dismount_distance,4)
globalalloc(vault_freeform_distance,4)
globalalloc(vault_freeform_short_distance,4)
globalalloc(vault_freeform_far_distance,4)
globalalloc(vault_freeform_dismount_distance,4)
globalalloc(vault_inner_ledge_distance,4)
globalalloc(near_miss_distance,4)
globalalloc(parkour_down_freeform_jump_distance,4)
globalalloc(parkour_down_freeform_swing_distance,4)
globalalloc(parkour_down_low_freeform_jump_distance,4)
globalalloc(parkour_down_low_freeform_swing_distance,4)
globalalloc(freeform_jump_target_diff_distance,16)

nso_jump_short_distance:
dd (float)-5
nso_jump_far_distance:
dd (float)1
nso_jump_dismount_distance:
dd (float)-6.5

ground_jump_short_distance:
dd (float)-4
ground_jump_far_distance:
dd (float)1
ground_jump_dismount_distance:
dd (float)-6

swing_short_distance:
dd (float)-2
swing_far_distance:
dd (float)2
swing_dismount_distance:
dd (float)-3

hang_short_distance:
dd (float)-5
hang_far_distance:
dd (float)1.5
hang_dismount_distance:
dd (float)-7

ledge_drop_short_distance:
dd (float)-1
ledge_drop_far_distance:
dd (float)1
ledge_drop_dismount_distance:
dd (float)-1.5

lamp_hook_freeform_distance:
dd (float)8
lamp_hook_freeform_short_distance:
dd (float)-2
lamp_hook_freeform_far_distance:
dd (float)1
lamp_hook_freeform_dismount_distance:
dd (float)-4

vault_freeform_distance:
dd (float)3.5
vault_freeform_short_distance:
dd (float)2.5
vault_freeform_far_distance:
dd (float)4
vault_freeform_dismount_distance:
dd (float)1.5
vault_inner_ledge_distance:
dd (float)0.5

near_miss_distance:
dd (float)0

parkour_down_freeform_jump_distance:
dd (float)-3
parkour_down_freeform_swing_distance:
dd (float)-1
parkour_down_low_freeform_jump_distance:
dd (float)-4
parkour_down_low_freeform_swing_distance:
dd (float)-2

freeform_jump_target_diff_distance:
dd (float)8

//Miscellaneous values
globalalloc(empty_height_float,16)
globalalloc(empty_last_float,16)

empty_height_float:
dd (float)1 (float)1 (float)0 (float)0
empty_last_float:
dd (float)1 (float)1 (float)1 (float)0

//Physics-related parameters
globalalloc(height_offset,16)
globalalloc(distance_between_jump,4)
globalalloc(vert_diff,4)
globalalloc(hori_diff,4)
globalalloc(v_hmax,4)
globalalloc(v_vmax,4)
globalalloc(gravity,4)
globalalloc(retention_v,4)
globalalloc(retention_h,4)
globalalloc(v_hthresh,4)
globalalloc(v_vthresh,4)
globalalloc(factor_in,4)
globalalloc(v_outthresh,4)
globalalloc(k_upmax,4)
globalalloc(k_coef,4)
globalalloc(f_max,4)
globalalloc(f_min,4)
globalalloc(dv1,4)
globalalloc(dv2,4)
globalalloc(f_1,4)
globalalloc(f_2,4)
globalalloc(h_max,4)
globalalloc(h_min,4)
globalalloc(dh1,4)
globalalloc(dh2,4)
globalalloc(h_1,4)
globalalloc(h_2,4)
globalalloc(swing_far_ratio,4)
globalalloc(swing_far_static,4)
globalalloc(negate_mask,4)
globalalloc(zero,4)
globalalloc(one,4)
globalalloc(two,4)
globalalloc(freeform_distance,4)
globalalloc(beam_drop_distance,4)
globalalloc(dot_threshold,4)

height_offset:
dd (float)0 (float)0 (float)1 (float)0
v_hmax:
dd (float)7
v_vmax:
dd (float)6
gravity:
dd (float)8
retention_v:
dd (float)1
retention_h:
dd (float)0.6
v_hthresh:
dd (float)6
v_vthresh:
dd (float)-6
factor_in:
dd (float)0.79
v_outthresh:
dd (float)12
k_upmax:
dd (float)2
k_coef:
dd (float)2
f_max:
dd (float)1
f_min:
dd (float)0
dv1:
dd (float)-0.15
dv2:
dd (float)-0.16
f_1:
dd (float)0
f_2:
dd (float)1
h_max:
dd (float)1.2
h_min:
dd (float)1
dh1:
dd (float)-1.5
dh2:
dd (float)-4.5
h_1:
dd (float)1
h_2:
dd (float)1.15
swing_far_ratio:
dd (float)1.25
swing_far_static:
dd (float)1.5
negate_mask:
dd 80000000
zero:
dd (float)0
one:
dd (float)1
two:
dd (float)2
freeform_distance:
dd (float)8
beam_drop_distance:
dd (float)3.5
dot_threshold:
dd (float)0.99

//Velocity parameters
globalalloc(v_v,4)
globalalloc(v_h,4)
globalalloc(v_vout,4)
globalalloc(v_hout,4)
globalalloc(influence_v,4)
globalalloc(t_pre,4)
globalalloc(t_true,4)
globalalloc(f_main,4)
globalalloc(h_main,4)
globalalloc(k_coef_out,4)
globalalloc(swing_up_height,16)

target_modifier:
cmp byte ptr [target_f],00
je originalcode
cmp byte ptr [already_rolled_f],01
je originalcode

movaps xmm1,xmm0
movaps xmm2,[player_coords]
movaps [start_coords],xmm2
subps xmm1,xmm2
movaps xmm4,xmm1
mulps xmm1,[empty_height_float]
movaps xmm3,xmm1
mulps xmm3,xmm3
haddps xmm3,xmm3
sqrtps xmm3,xmm3
shufps xmm3,xmm3,0
divps xmm1,xmm3
movaps [vector_coords],xmm1
movaps xmm3,[direction_input_f]
movaps [input_vector_coords],xmm3

mulps xmm4,xmm4
mulps xmm4,[empty_last_float]
haddps xmm4,xmm4
haddps xmm4,xmm4
sqrtss xmm4,xmm4

mov [freeform_jump_f],00
cmp [edi+10],00000000
jne checks
cmp [edi+14],00000000
jne checks
cmp [edi+18],00000000
jne checks
mov [freeform_jump_f],01
mov eax,[move_type_f]
mov [eax],00000001

lamp_hook_check:
cmp byte ptr [lamp_hook_f],01
jne ledge_drop_check
movss xmm1,[lamp_hook_freeform_distance]
shufps xmm1,xmm1,0
movaps xmm3,[player_rotation]
mulps xmm3,xmm1
addps xmm2,xmm3
movaps xmm0,xmm2
addps xmm0,[lamp_hook_freeform_height]
jmp lamp_hook_freeform

ledge_drop_check:
comiss xmm4,[freeform_distance]
ja freeform_jump_diff_check
comiss xmm4,[beam_drop_distance]
jb math
cmp byte ptr [ledge_drop_f],01
je ledge_drop

freeform_jump_diff_check:
cmp byte ptr [eject_clamp_f],01
mov [eject_clamp_f],00
je checks
cmp [input_vector_coords],00000000
je checks

mulps xmm1,xmm3
haddps xmm1,xmm1
haddps xmm1,xmm1
movaps [dot_product],xmm1
comiss xmm1,[dot_threshold]
jae checks
movss xmm1,[freeform_jump_target_diff_distance]
shufps xmm1,xmm1,0
mulps xmm3,xmm1
addps xmm2,xmm3
movaps xmm0,xmm2
addps xmm0,[freeform_jump_target_diff_height]

checks:
cmp byte ptr [dismount_hang_free_eject_f],01
je hang_dismount
cmp byte ptr [near_miss_enable],01
je near_miss
cmp byte ptr [on_vault_f],01
je vault_freeform
cmp byte ptr [dismount_enable],01
je nso_jump_dismount
cmp byte ptr [short_freeform_enable],01
je nso_jump_short
cmp byte ptr [far_freeform_enable],01
je nso_jump_far
cmp byte ptr [vault_inner_ledge_f],01
je vault_inner_ledge
cmp byte ptr [freeform_jump_f],01
je freeform_jump
jmp math

near_miss:
movss xmm4,[near_miss_distance]
movaps xmm5,[near_miss_height]
mov [near_miss_f],01
mov [smooth_fall_f],01
jmp vector

vault_inner_ledge:
movss xmm4,[vault_inner_ledge_distance]
movaps xmm5,[vault_inner_ledge_height]
jmp vector

nso_jump_dismount:
cmp byte ptr [on_vault_f],01
je vault_freeform_dismount
cmp byte ptr [on_ground_f],01
je ground_jump_dismount
cmp byte ptr [on_hang_free_f],01
je swing_dismount
cmp byte ptr [on_hang_wall_f],01
je hang_dismount
movss xmm4,[nso_jump_dismount_distance]
movaps xmm5,[nso_jump_dismount_height]
jmp vector

ground_jump_dismount:
movss xmm4,[ground_jump_dismount_distance]
movaps xmm5,[ground_jump_dismount_height]
jmp vector

swing_dismount:
movss xmm4,[swing_dismount_distance]
movaps xmm5,[swing_dismount_height]
jmp vector

hang_dismount:
movss xmm4,[hang_dismount_distance]
movaps xmm5,[hang_dismount_height]
jmp vector

nso_jump_short:
cmp byte ptr [on_vault_f],01
je vault_freeform_short
cmp byte ptr [on_ground_f],01
je ground_jump_short
cmp byte ptr [on_hang_free_f],01
je swing_short
cmp byte ptr [on_hang_wall_f],01
je hang_short
movss xmm4,[nso_jump_short_distance]
movaps xmm5,[nso_jump_short_height]
jmp vector

ground_jump_short:
movss xmm4,[ground_jump_short_distance]
movaps xmm5,[ground_jump_short_height]
jmp vector

swing_short:
movss xmm4,[swing_short_distance]
movaps xmm5,[swing_short_height]
jmp vector

hang_short:
movss xmm4,[hang_short_distance]
movaps xmm5,[hang_short_height]
jmp vector

nso_jump_far:
cmp byte ptr [on_vault_f],01
je vault_freeform_far
cmp byte ptr [on_ground_f],01
je ground_jump_far
cmp byte ptr [on_hang_free_f],01
je swing_far
cmp byte ptr [on_hang_wall_f],01
je hang_far
movss xmm4,[nso_jump_far_distance]
movaps xmm5,[nso_jump_far_height]
jmp vector

ground_jump_far:
movss xmm4,[ground_jump_far_distance]
movaps xmm5,[ground_jump_far_height]
jmp vector

swing_far:
movss xmm4,[swing_far_distance]
movaps xmm5,[swing_far_height]
jmp vector

hang_far:
movss xmm4,[hang_far_distance]
movaps xmm5,[hang_far_height]
jmp vector

ledge_drop:
cmp byte ptr [dismount_enable],01
je ledge_drop_dismount
cmp byte ptr [short_freeform_enable],01
je ledge_drop_short
cmp byte ptr [far_freeform_enable],01
je ledge_drop_far
jmp math

ledge_drop_dismount:
movss xmm4,[ledge_drop_dismount_distance]
movaps xmm5,[ledge_drop_dismount_height]
jmp vector

ledge_drop_short:
movss xmm4,[ledge_drop_short_distance]
movaps xmm5,[ledge_drop_short_height]
jmp vector

ledge_drop_far:
movss xmm4,[ledge_drop_far_distance]
movaps xmm5,[ledge_drop_far_height]
jmp vector

freeform_jump:
cmp byte ptr [parkour_down_enable],01
je parkour_down_freeform_jump
cmp byte ptr [parkour_down_low_enable],01
je parkour_down_low_freeform_jump
jmp math

parkour_down_freeform_jump:
cmp byte ptr [on_hang_free_f],01
je parkour_down_freeform_swing
cmp byte ptr [lamp_hook_f],01
je lamp_hook_freeform_short
movss xmm4,[parkour_down_freeform_jump_distance]
movaps xmm5,[parkour_down_freeform_jump_height]
jmp vector

parkour_down_freeform_swing:
movss xmm4,[parkour_down_freeform_swing_distance]
movaps xmm5,[parkour_down_freeform_swing_height]
jmp vector

parkour_down_low_freeform_jump:
cmp byte ptr [on_hang_free_f],01
je parkour_down_low_freeform_swing
cmp byte ptr [lamp_hook_f],01
je lamp_hook_freeform_dismount
movss xmm4,[parkour_down_low_freeform_jump_distance]
movaps xmm5,[parkour_down_low_freeform_jump_height]
jmp vector

parkour_down_low_freeform_swing:
movss xmm4,[parkour_down_low_freeform_swing_distance]
movaps xmm5,[parkour_down_low_freeform_swing_height]
jmp vector

lamp_hook_freeform:
cmp byte ptr [dismount_enable],01
je lamp_hook_freeform_dismount
cmp byte ptr [short_freeform_enable],01
je lamp_hook_freeform_short
cmp byte ptr [far_freeform_enable],01
je lamp_hook_freeform_far
cmp byte ptr [freeform_enable],01
jmp math

lamp_hook_freeform_dismount:
movss xmm4,[lamp_hook_freeform_dismount_distance]
movaps xmm5,[lamp_hook_freeform_dismount_height]
jmp rotation_vector

lamp_hook_freeform_short:
movss xmm4,[lamp_hook_freeform_short_distance]
movaps xmm5,[lamp_hook_freeform_short_height]
jmp rotation_vector

lamp_hook_freeform_far:
movss xmm4,[lamp_hook_freeform_far_distance]
movaps xmm5,[lamp_hook_freeform_far_height]
jmp rotation_vector

vault_freeform:
cmp byte ptr [dismount_enable],01
je vault_freeform_dismount
cmp byte ptr [short_freeform_enable],01
je vault_freeform_short
cmp byte ptr [far_freeform_enable],01
je vault_freeform_far
cmp byte ptr [freeform_enable],01
jne math
movss xmm4,[vault_freeform_distance]
movaps xmm5,[vault_freeform_height]
jmp rotation_vector

vault_freeform_dismount:
movss xmm4,[vault_freeform_dismount_distance]
movaps xmm5,[vault_freeform_dismount_height]
jmp rotation_vector

vault_freeform_short:
movss xmm4,[vault_freeform_short_distance]
movaps xmm5,[vault_freeform_short_height]
jmp rotation_vector

vault_freeform_far:
movss xmm4,[vault_freeform_far_distance]
movaps xmm5,[vault_freeform_far_height]
jmp rotation_vector

rotation_vector:
movaps xmm1,[player_rotation]
shufps xmm4,xmm4,0
mulps xmm1,xmm4
addps xmm0,xmm1
addps xmm0,xmm5
mov [smooth_fall_f],01
jmp math

vector:
movaps xmm1,[vector_coords]
shufps xmm4,xmm4,0
mulps xmm1,xmm4
addps xmm0,xmm1
addps xmm0,xmm5
mov [dismount_hang_free_eject_f],00
mov [ledge_drop_f],00

math:
movaps [target_coords],xmm0
movaps xmm1,xmm0
subps xmm1,[height_offset]
movaps xmm2,[player_coords]
subps xmm1,xmm2
mulps xmm1,xmm1
mulps xmm1,[empty_last_float]
haddps xmm1,xmm1
haddps xmm1,xmm1
sqrtss xmm1,xmm1
movss [distance_between_jump],xmm1

movaps xmm1,xmm0                    // Copy target coordinates to xmm1
subps xmm1,[height_offset]          // Subtract height offset from z-coordinate (vertical difference)
subps xmm1, xmm2                    // Subtract starting coordinates from target (x2 - x1, y2 - y1, z2 - z1)
shufps xmm1,xmm1,C6                 // Shuffle xmm1 to isolate the vertical difference (z-axis)
movss [vert_diff],xmm1              // Store the vertical difference (dv)
shufps xmm1,xmm1,C6                 // Shuffle xmm1 back to work on x, y components for horizontal distance
mulps xmm1, xmm1                    // Square the differences for (x2 - x1)^2 + (y2 - y1)^2
mulps xmm1,[empty_last_float]       // Ensure last float is empty (to handle packed values correctly)
haddps xmm1,xmm1                    // Horizontally add pairs to compute final sum of squares for dh
sqrtss xmm1,xmm1                    // Square root to get horizontal distance (dh)
movss [hori_diff],xmm1              // Store the horizontal difference (dh)

divss xmm1,[v_hmax]                 // Calculate t_pre = dh / v_hmax
movss [t_pre],xmm1                  // Store t_pre

mulss xmm1,[gravity]                // Multiply gravity by t_pre for the next part of v_v calculation
divss xmm1,[two]                    // Divide by 2 for g * t_pre / 2
movss xmm3,[vert_diff]              // Load vertical difference dv
divss xmm3,[t_pre]                  // Calculate dv / t_pre
addss xmm1,xmm3                     // Add the dv/t_pre and g*t_pre/2 parts for v_vpre
maxss xmm1,[zero]                   // Clamp to ensure v_v &gt;= 0
minss xmm1,[v_vmax]                 // Clamp to v_vmax to ensure v_v &lt;= v_vmax
movss [v_v],xmm1                    // Store the final vertical velocity (v_v)

mulss xmm1,xmm1                     // Square v_v to start the determinant for time calculation
movss xmm3,[gravity]                // Load gravity (g)
mulss xmm3,[two]                    // Multiply gravity by 2 for 2 * g * dv
mulss xmm3,[vert_diff]              // Multiply result by dv
subss xmm1,xmm3                     // Subtract 2 * g * dv from v_v^2
sqrtss xmm1,xmm1                    // Square root to compute D_pre1 (processed determinant)
movss xmm3,[gravity]                // Load gravity again for division
xorps xmm3,[negate_mask]            // Negate gravity using xor (g -&gt; -g)
divss xmm1,xmm3                     // Divide D_pre1 by -g

movss xmm3,[v_v]                    // Load v_v for D_pre2
divss xmm3,[gravity]                // Divide by gravity to compute D_pre2

movss xmm4,xmm3                     // Copy D_pre2 to xmm4 for t1 calculation
addss xmm4,xmm1                     // Calculate t1 = D_pre2 + D_pre1
movss xmm5,xmm3                     // Copy D_pre2 to xmm5 for t2 calculation
subss xmm5,xmm1                     // Calculate t2 = D_pre2 - D_pre1

comiss xmm4,[zero]                  // Compare t1 to zero
jb below_zero                       // If t1 &lt; 0, jump to below_zero
minss xmm5,xmm4                     // Otherwise, t_true = min(t1, t2)

below_zero:                         // Label for when t1 is &lt;= 0
movss [t_true],xmm5                 // Store the correct t_true value

movss xmm1,[hori_diff]              // Load dh for horizontal velocity calculation
divss xmm1,xmm5                     // Divide by t_true to get v_h = dh / t_true
minss xmm1,[v_hmax]                 // Clamp v_h to v_hmax
movss [v_h],xmm1                    // Store horizontal velocity (v_h)

movss xmm1,[v_v]                    // Load v_v
movss xmm3,[gravity]                // Load gravity again
mulss xmm3,xmm5                     // Multiply by t_true
subss xmm1,xmm3                     // Calculate v_v - g * t_true
mulss xmm1,[retention_v]            // Multiply by retention factor (retention_v)
movss [v_vout],xmm1                 // Store the vertical outward velocity (v_vout)

minss xmm1,[zero]                   // Clamp v_vout to min(0, v_vout)
maxss xmm1,[v_vthresh]              // Clamp to max(min(v_vout, 0), v_hthresh)

movss xmm3,[one]                    // Load 1.0 for influence factor calculation
subss xmm3,[factor_in]              // Calculate 1 - f_i

divss xmm1,[v_vthresh]              // Divide max(v_vout, 0) by v_hthresh
mulss xmm1,xmm3                     // Multiply by (1 - f_i)

addss xmm1,[factor_in]              // Add f_i to complete influence_v calculation
movss [influence_v],xmm1            // Store the influence factor (influence_v)

mulss xmm1,[retention_h]            // Multiply by retention_h for horizontal outward velocity
mulss xmm1,[v_h]                    // Multiply by horizontal velocity (v_h)
minss xmm1,[v_hthresh]              // Clamp to v_hthresh
movss [v_hout],xmm1                 // Store the horizontal outward velocity (v_hout)

mulss xmm1,xmm1                     // Square v_hout
movss xmm3,[v_vout]                 // Load v_vout
mulss xmm3,xmm3                     // Square v_vout
addss xmm1,xmm3                     // Add squared v_vout and v_hout
sqrtss xmm1,xmm1                    // Square root to get total velocity (v_out)

movss xmm3,[f_2]                    // Load f2
subss xmm3,[f_1]                    // Compute (f2 - f1)
movss xmm4,[dv2]                    // Load dv2
subss xmm4,[dv1]                    // Compute (dv2 - dv1)
divss xmm3,xmm4                     // Compute (f2 - f1) / (dv2 - dv1)
movss xmm4,[vert_diff]              // Load dv
subss xmm4,[dv1]                    // Compute (dv - dv1)
mulss xmm3,xmm4                     // Multiply by dv: ((f2 - f1)/(dv2 - dv1)) * (dv - dv1)
addss xmm3,[f_1]                    // Add f1: ((f2 - f1)/(dv2 - dv1)) * dv + f1

maxss xmm3,[f_min]                  // Clamp to f_min
minss xmm3,[f_max]                  // Clamp to f_max
movss [f_main],xmm3                 // Store the clamped f

movss xmm4,[k_coef]                 // Load k_coef into xmm1
mulss xmm3,xmm4                     // Multiply k_coef by f
movss [k_coef_out],xmm3             // Store the result in k_coef_out

movss xmm3,[h_2]                    // Load h2
subss xmm3,[h_1]                    // Compute (h2 - h1)
movss xmm4,[dh2]                    // Load dh2
subss xmm4,[dh1]                    // Compute (dh2 - dh1)
divss xmm3,xmm4                     // Compute (h2 - h1) / (dh2 - dh1)
movss xmm4,[vert_diff]              // Load dv
subss xmm4,[dh1]                    // Compute (dh - dh1)
mulss xmm3,xmm4                     // Multiply by dh: ((h2 - h1)/(dh2 - dh1)) * (dh - dh1)
addss xmm3,[h_1]                    // Add h1: ((h2 - h1)/(dh2 - dh1)) * dh + h1

maxss xmm3,[h_min]                  // Clamp to h_min
minss xmm3,[h_max]                  // Clamp to h_max
movss [h_main],xmm3                 // Store the clamped h

movss xmm4,[k_coef_out]             // Load k_coef into xmm1
mulss xmm3,xmm4                     // Multiply k_coef by f
movss [k_coef_out],xmm3             // Store the result in k_coef_out

divss xmm1,[v_outthresh]            // Divide v_out by v_outthresh to get k_pre
mulss xmm1,[k_coef_out]             // Multiply by k_coef_out
minss xmm1,[k_upmax]                // Clamp to k_upmax
movss [swing_up_height+8],xmm1      // Store the final swing up value (k)

mulss xmm1,[swing_far_ratio]        // Multiply by swing_far_ratio
addss xmm1,[swing_far_static]       // Add swing_far_static
movss [swing_far_distance],xmm1     // Store the final swing up value (k)

originalcode:
mov [target_f],00
mov [lamp_hook_f],00
movaps [edi],xmm0
movaps [esi],xmm0
movaps xmm0,[edi+10]

exit:
jmp returnhere

"ACRSP.exe"+65F2E3:
jmp target_modifier
nop 2
returnhere:


alloc(target_modifier_2,2048)
label(returnhere2)
label(originalcode2)
label(exit2)

target_modifier_2:
mov eax,[ebp+768]
cmp eax,[pEntity]
jne originalcode2
mov [target_f],01

originalcode2:
call ACRSP.exe+65F2C0

exit2:
jmp returnhere2

"ACRSP.exe"+BE75F4:
jmp target_modifier_2
returnhere2:


alloc(smooth_fall,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

smooth_fall:
cmp byte ptr [smooth_fall_f],01
jne originalcode3
mov [smooth_fall_f],00
jmp ACRSP.exe+704BD9

originalcode3:
call ACRSP.exe+6EB440


exit3:
jmp returnhere3

"ACRSP.exe"+704BD0:
jmp smooth_fall
returnhere3:


alloc(swing_up_cycle,2048)
label(returnhere4)
label(exit4)

swing_up_cycle:
mov ecx,[swing_up_height_cycle]
mov [swing_up_height+8],ecx
push 00
mov ecx,edi
call ACRSP.exe+199CB0

exit4:
jmp returnhere4

"ACRSP.exe"+69590C:
jmp swing_up_cycle
nop 4
returnhere4:


alloc(swing_up_drop,2048)
label(returnhere5)
label(exit5)

swing_up_drop:
call ACRSP.exe+6B3F40
mov [swing_up_height+8],00000000

exit5:
jmp returnhere5

"ACRSP.exe"+6B500C:
jmp swing_up_drop
returnhere5:


alloc(move_type,2048)
label(returnhere6)
label(exit6)

move_type:
lea eax,[ebx+14]
mov [move_type_f],eax
mov eax,[ebx+14]
mov [ebp-3C],edx

exit6:
jmp returnhere6

"ACRSP.exe"+BF0514:
jmp move_type
nop
returnhere6:


[DISABLE]
"ACRSP.exe"+65F2E3:
db 0F 29 06 0F 28 47 10
//movaps [esi],xmm0
//movaps xmm0,[edi+10]

"ACRSP.exe"+BE75F4:
db E8 C7 7C A7 FF
//call ACRSP.exe+65F2C0

"ACRSP.exe"+704BD0:
db E8 6B 68 FE FF
//call ACRSP.exe+6EB440

"ACRSP.exe"+69590C:
db 6A 00 8B CF E8 9B 43 B0 FF
//push 00
//mov ecx,edi
//call ACRSP.exe+199CB0

"ACRSP.exe"+6B500C:
db E8 2F EF FF FF
//call ACRSP.exe+6B3F40

"ACRSP.exe"+BF0514:
db 8B 43 14 89 55 C4
//mov eax,[ebx+14]
//mov [ebp-3C],edx

dealloc(target_modifier)
dealloc(target_modifier_2)
dealloc(smooth_fall)
dealloc(swing_up_cycle)
dealloc(swing_up_drop)
dealloc(move_type)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>353</ID>
                              <Description>"Swing / Vault / Eject Modifier"</Description>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(swing_vault_coords,2048)
label(returnhere)
label(originalcode)
label(exit)
label(coords_mod)

globalalloc(coords_mod_f,1)
globalalloc(swing_up_f,1)
globalalloc(parkour_down_low_f,1)
globalalloc(vault_landing_far_f,1)
globalalloc(vault_landing_low_f,1)
globalalloc(vault_freeform_f,1)
globalalloc(forced_hang_f,1)
globalalloc(dive_beam_far_f,1)
globalalloc(forced_hang_enable,1)

swing_vault_coords:
mov [self_swing_f],00
cmp byte ptr [swing_up_f],01
je coords_mod
cmp byte ptr [parkour_down_low_f],01
je coords_mod
cmp byte ptr [vault_landing_far_f],01
je coords_mod
cmp byte ptr [vault_landing_low_f],01
je coords_mod
cmp byte ptr [vault_freeform_f],01
je coords_mod
cmp byte ptr [dive_beam_far_f],01
je coords_mod
cmp byte ptr [forced_hang_f],01
jne originalcode
cmp byte ptr [forced_hang_enable],01
je coords_mod
mov [forced_hang_f],00
jmp originalcode

coords_mod:
mov [coords_mod_f],01

originalcode:
call ACRSP.exe+7700

exit:
jmp returnhere

"ACRSP.exe"+1731D4C:
jmp swing_vault_coords
returnhere:


alloc(eject_coords,2048)
label(returnhere2)
label(originalcode2)
label(exit2)
label(coords_mod2)

eject_coords:
cmp byte ptr [parkour_down_low_f],01
je coords_mod2
cmp byte ptr [dive_beam_far_f],01
je coords_mod2
jmp originalcode2

coords_mod2:
mov [coords_mod_f],01

originalcode2:
call ACRSP.exe+7700

exit2:
jmp returnhere2

"ACRSP.exe"+1733BE4:
jmp eject_coords
returnhere2:


[DISABLE]
"ACRSP.exe"+1731D4C:
db E8 AF 59 8D FE
//call ACRSP.exe+7700

"ACRSP.exe"+1733BE4:
db E8 17 3B 8D FE
//call ACRSP.exe+7700

dealloc(swing_vault_coords)
dealloc(eject_coords)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>354</ID>
                              <Description>"NSO Idle"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(nso_idle_coords,2048)
label(returnhere)
label(originalcode)
label(exit)
label(coords_mod)

globalalloc(coords_mod_f,1)
globalalloc(nso_idle_f,1)
globalalloc(parkour_down_low_f,1)
globalalloc(forced_hang_f,1)
globalalloc(dive_beam_far_f,1)
globalalloc(self_swing_f,1)
globalalloc(forced_hang_f,1)
globalalloc(self_swing_enable,1)

nso_idle_coords:
mov [forced_hang_f],00
cmp byte ptr [nso_idle_f],01
jne originalcode
cmp byte ptr [parkour_down_low_f],01
je coords_mod
cmp byte ptr [dive_beam_far_f],01
je coords_mod
cmp byte ptr [self_swing_f],01
je coords_mod
mov [nso_idle_f],00
jmp originalcode

coords_mod:
mov [coords_mod_f],01

originalcode:
call ACRSP.exe+7700

exit:
jmp returnhere

"ACRSP.exe"+1738E39:
jmp nso_idle_coords
returnhere:


alloc(nso_idle_coords_2,2048)
label(returnhere2)
label(exit2)

nso_idle_coords_2:
mov ecx,[esi+000000F4]
cmp byte ptr [ecx+00002030],00
je exit2
cmp byte ptr [ecx+00002029],00
je exit2
mov [nso_idle_f],01


exit2:
jmp returnhere2

"ACRSP.exe"+1738E11:
jmp nso_idle_coords_2
nop
returnhere2:


alloc(nso_idle_coords_3,2048)
label(returnhere3)
label(originalcode3)
label(exit3)

nso_idle_coords_3:
mov [ebp-14],al
cmp byte ptr [nso_idle_f],01
jne originalcode3
mov al,01
mov [ebp-14],al
mov [nso_idle_f],00

originalcode3:
comisd xmm1,xmm2
jna ACRSP.exe+1739790

exit3:
jmp returnhere3

"ACRSP.exe"+1739782:
jmp nso_idle_coords_3
returnhere3:


alloc(nso_idle_coords_4,2048)
label(returnhere4)
label(exit4)

nso_idle_coords_4:
cmp dword ptr [ebp-2C],02

exit4:
jmp returnhere4

"ACRSP.exe"+1739CA9:
jmp nso_idle_coords_4
nop
returnhere4:


alloc(self_swing,2048)
label(returnhere5)
label(exit5)

self_swing:
cmp byte ptr [self_swing_enable],01
je ACRSP.exe+1739C0A
test al,al
je ACRSP.exe+1739C0A

exit5:
jmp returnhere5

"ACRSP.exe"+1739B35:
jmp self_swing
nop
returnhere5:


alloc(self_swing_2,2048)
label(returnhere6)
label(exit6)

self_swing_2:
cmp byte ptr [self_swing_enable],01
je ACRSP.exe+17399A3
test al,al
je ACRSP.exe+17399A3

exit6:
jmp returnhere6

"ACRSP.exe"+1739877:
jmp self_swing_2
nop
returnhere6:


[DISABLE]
"ACRSP.exe"+1738E39:
db E8 C2 E8 8C FE
//call ACRSP.exe+7700

"ACRSP.exe"+1738E11:
db 8B 8E F4 00 00 00
//mov ecx,[esi+000000F4]

"ACRSP.exe"+1739782:
db 88 45 EC 76 09
//mov [ebp-14],al
//jna ACRSP.exe+1739790

"ACRSP.exe"+1739CA9:
db 76 30 83 7D D4 02
//jna ACRSP.exe+1739CDB
//cmp dword ptr [ebp-2C],02

"ACRSP.exe"+1739B35:
db 0F 84 CF 00 00 00
//je ACRSP.exe+1739C0A

"ACRSP.exe"+1739877:
db 0F 84 26 01 00 00
//je ACRSP.exe+17399A3

dealloc(nso_idle_coords)
dealloc(nso_idle_coords_2)
dealloc(nso_idle_coords_3)
dealloc(nso_idle_coords_4)
dealloc(self_swing)
dealloc(self_swing_2)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>355</ID>
                              <Description>"NSO Run"</Description>
                              <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
alloc(nso_run_coords,2048)
label(returnhere)
label(originalcode)
label(exit)
label(coords_mod)

globalalloc(coords_mod_f,1)
globalalloc(nso_run_f,1)
globalalloc(parkour_down_low_f,1)
globalalloc(forced_hang_f,1)
globalalloc(dive_beam_far_f,1)
globalalloc(self_swing_f,1)
globalalloc(forced_hang_f,1)
globalalloc(forced_ground_roll_enable,1)

nso_run_coords:
mov [forced_hang_f],00
cmp byte ptr [forced_ground_roll_enable],01
je originalcode
cmp byte ptr [nso_run_f],01
jne originalcode
cmp byte ptr [parkour_down_low_f],01
je coords_mod
cmp byte ptr [dive_beam_far_f],01
je coords_mod
cmp byte ptr [self_swing_f],01
je coords_mod
mov [nso_run_f],00
jmp originalcode

coords_mod:
mov [coords_mod_f],01

originalcode:
call ACRSP.exe+7700

exit:
jmp returnhere

"ACRSP.exe"+1737A05:
jmp nso_run_coords
returnhere:


alloc(nso_run_coords_2,2048)
label(returnhere2)
label(exit2)

nso_run_coords_2:
mov ecx,[esi+000000F4]
cmp byte ptr [ecx+00002030],00
je exit2
cmp byte ptr [ecx+00002029],00
je exit2
mov [nso_run_f],01

exit2:
jmp returnhere2

"ACRSP.exe"+17379B9:
jmp nso_run_coords_2
nop
returnhere2:


alloc(nso_run_coords_3,2048)
label(returnhere3)
label(originalcode3)
label(forced_ground_roll_3)
label(exit3)

nso_run_coords_3:
cmp byte ptr [forced_ground_roll_enable],01
je forced_ground_roll_3
cmp byte ptr [nso_run_f],01
jne originalcode3
mov [nso_run_f],00
jmp exit3

forced_ground_roll_3:
cmp byte ptr [ebp-14],00
jne originalcode3
mov [forced_ground_roll_f],01
jmp exit3

originalcode3:
cmp byte ptr [ebp-14],00
je ACRSP.exe+1737FFB

exit3:
jmp returnhere3

"ACRSP.exe"+1737FDA:
jmp nso_run_coords_3
nop
returnhere3:


[DISABLE]
"ACRSP.exe"+1737A05:
db E8 F6 FC 8C FE
//call ACRSP.exe+7700

"ACRSP.exe"+17379B9:
db 8B 8E F4 00 00 00
//mov ecx,[esi+000000F4]

"ACRSP.exe"+1737FDA:
db 80 7D EC 00 74 1B
//cmp byte ptr [ebp-14],00
//je ACRSP.exe+1737FFB

dealloc(nso_run_coords)
dealloc(nso_run_coords_2)
dealloc(nso_run_coords_3)
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>356</ID>
                              <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                              <Options moDeactivateChildrenAsWell="1"/>
                              <GroupHeader>1</GroupHeader>
                              <CheatEntries>
                                <CheatEntry>
                                  <ID>357</ID>
                                  <Description>"Values"</Description>
                                  <Options moHideChildren="1"/>
                                  <Color>808080</Color>
                                  <GroupHeader>1</GroupHeader>
                                  <CheatEntries>
                                    <CheatEntry>
                                      <ID>358</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>359</ID>
                                          <Description>"Vault Landing Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_landing_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>700</ID>
                                          <Description>"Vault Landing Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_landing_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>701</ID>
                                          <Description>"Vault Landing Low Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_landing_low_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>702</ID>
                                          <Description>"Vault Landing Low Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_landing_low_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>703</ID>
                                          <Description>"Vault Freeform Target Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_target_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>704</ID>
                                          <Description>"Vault Freeform Target Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_target_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>705</ID>
                                          <Description>"Dive Beam Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>dive_beam_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>706</ID>
                                          <Description>"Dive Beam Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>dive_beam_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>707</ID>
                                          <Description>"Parkour Down Low Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_low_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>708</ID>
                                          <Description>"Forced Hang Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>forced_hang_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>709</ID>
                                          <Description>"Forced Hang Bonus Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>forced_hang_bonus_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>710</ID>
                                          <Description>"Forced Hang Minimum Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>forced_hang_minimum_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>711</ID>
                                          <Description>"Swing Up Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_up_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>712</ID>
                                          <Description>"Swing Up Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_up_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>713</ID>
                                          <Description>"Self Swing Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>self_swing_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>714</ID>
                                          <Description>"Self Swing Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>self_swing_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>715</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>716</ID>
                                          <Description>"NSO Jump Short Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>nso_jump_short_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>717</ID>
                                          <Description>"NSO Jump Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>nso_jump_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>718</ID>
                                          <Description>"NSO Jump Dismount Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>nso_jump_dismount_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>719</ID>
                                          <Description>"NSO Jump Short Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>nso_jump_short_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>720</ID>
                                          <Description>"NSO Jump Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>nso_jump_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>721</ID>
                                          <Description>"NSO Jump Dismount Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>nso_jump_dismount_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>722</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>723</ID>
                                          <Description>"Ground Jump Short Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ground_jump_short_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>724</ID>
                                          <Description>"Ground Jump Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ground_jump_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>725</ID>
                                          <Description>"Ground Jump Dismount Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ground_jump_dismount_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>726</ID>
                                          <Description>"Ground Jump Short Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ground_jump_short_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>727</ID>
                                          <Description>"Ground Jump Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ground_jump_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>728</ID>
                                          <Description>"Ground Jump Dismount Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ground_jump_dismount_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>729</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>730</ID>
                                          <Description>"Swing Short Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_short_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>731</ID>
                                          <Description>"Swing Short Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_short_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>732</ID>
                                          <Description>"Swing Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>733</ID>
                                          <Description>"Swing Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>734</ID>
                                          <Description>"Swing Dismount Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_dismount_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>735</ID>
                                          <Description>"Swing Dismount Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>swing_dismount_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>736</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>737</ID>
                                          <Description>"Hang Short Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>hang_short_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>738</ID>
                                          <Description>"Hang Short Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>hang_short_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>739</ID>
                                          <Description>"Hang Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>hang_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>740</ID>
                                          <Description>"Hang Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>hang_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>741</ID>
                                          <Description>"Hang Dismount Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>hang_dismount_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>742</ID>
                                          <Description>"Hang Dismount Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>hang_dismount_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>743</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>744</ID>
                                          <Description>"Ledge Drop Short Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ledge_drop_short_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>745</ID>
                                          <Description>"Ledge Drop Short Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ledge_drop_short_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>746</ID>
                                          <Description>"Ledge Drop Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ledge_drop_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>747</ID>
                                          <Description>"Ledge Drop Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ledge_drop_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>748</ID>
                                          <Description>"Ledge Drop Dismount Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ledge_drop_dismount_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>749</ID>
                                          <Description>"Ledge Drop Dismount Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>ledge_drop_dismount_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>750</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>751</ID>
                                          <Description>"Parkour Down Freeform Jump Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_freeform_jump_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>752</ID>
                                          <Description>"Parkour Down Freeform Jump Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_freeform_jump_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>753</ID>
                                          <Description>"Parkour Down Freeform Swing Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_freeform_swing_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>754</ID>
                                          <Description>"Parkour Down Freeform Swing Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_freeform_swing_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>755</ID>
                                          <Description>"Parkour Down Low Freeform Jump Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_low_freeform_jump_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>756</ID>
                                          <Description>"Parkour Down Low Freeform Jump Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_low_freeform_jump_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>757</ID>
                                          <Description>"Parkour Down Low Freeform Swing Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_low_freeform_swing_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>758</ID>
                                          <Description>"Parkour Down Low Freeform Swing Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>parkour_down_low_freeform_swing_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>759</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>760</ID>
                                          <Description>"Lamp Hook Freeform Short Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>lamp_hook_freeform_short_height</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>761</ID>
                                          <Description>"Lamp Hook Freeform Short Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>lamp_hook_freeform_short_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>762</ID>
                                          <Description>"Lamp Hook Freeform Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>lamp_hook_freeform_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>763</ID>
                                          <Description>"Lamp Hook Freeform Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>lamp_hook_freeform_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>764</ID>
                                          <Description>"Lamp Hook Freeform Dismount Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>lamp_hook_freeform_dismount_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>765</ID>
                                          <Description>"Lamp Hook Freeform Dismount Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>lamp_hook_freeform_dismount_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>766</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>767</ID>
                                          <Description>"Vault Freeform Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>768</ID>
                                          <Description>"Vault Freeform Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>769</ID>
                                          <Description>"Vault Freeform Short Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_short_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>770</ID>
                                          <Description>"Vault Freeform Short Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_short_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>771</ID>
                                          <Description>"Vault Freeform Far Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_far_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>772</ID>
                                          <Description>"Vault Freeform Far Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_far_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>773</ID>
                                          <Description>"Vault Freeform Dismount Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_dismount_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>774</ID>
                                          <Description>"Vault Freeform Dismount Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_freeform_dismount_distance</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>775</ID>
                                          <Description>"Vault Inner Ledge Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_inner_ledge_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>776</ID>
                                          <Description>"Vault Inner Ledge Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vault_inner_ledge_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>777</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>778</ID>
                                          <Description>"Near Miss Height"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>near_miss_height+8</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>779</ID>
                                          <Description>"Near Miss Distance"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>near_miss_distance</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                    <CheatEntry>
                                      <ID>780</ID>
                                      <Description>"---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"</Description>
                                      <GroupHeader>1</GroupHeader>
                                      <CheatEntries>
                                        <CheatEntry>
                                          <ID>781</ID>
                                          <Description>"Freeform Jump"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Byte</VariableType>
                                          <Address>freeform_jump_f</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>782</ID>
                                          <Description>"Dot Product"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>dot_product</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>783</ID>
                                          <Description>"Dot Threshold"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>dot_threshold</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>784</ID>
                                          <Description>"Input Unit Vector X"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>input_vector_coords</Address>
                                          <CheatEntries>
                                            <CheatEntry>
                                              <ID>785</ID>
                                              <Description>"Input Unit Vector Y"</Description>
                                              <ShowAsSigned>0</ShowAsSigned>
                                              <VariableType>Float</VariableType>
                                              <Address>+4</Address>
                                            </CheatEntry>
                                          </CheatEntries>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>786</ID>
                                          <Description>"Unit Vector X"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vector_coords</Address>
                                          <CheatEntries>
                                            <CheatEntry>
                                              <ID>787</ID>
                                              <Description>"Unit Vector Y"</Description>
                                              <ShowAsSigned>0</ShowAsSigned>
                                              <VariableType>Float</VariableType>
                                              <Address>+4</Address>
                                            </CheatEntry>
                                          </CheatEntries>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>788</ID>
                                          <Description>"Distance Between Jump"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>distance_between_jump</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>789</ID>
                                          <Description>"Vertical Difference"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>vert_diff</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>790</ID>
                                          <Description>"Horizontal Difference"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>hori_diff</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>791</ID>
                                          <Description>"Target Coords X"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>target_coords</Address>
                                          <CheatEntries>
                                            <CheatEntry>
                                              <ID>792</ID>
                                              <Description>"Target Coords Y"</Description>
                                              <ShowAsSigned>0</ShowAsSigned>
                                              <VariableType>Float</VariableType>
                                              <Address>+4</Address>
                                            </CheatEntry>
                                            <CheatEntry>
                                              <ID>793</ID>
                                              <Description>"Target Coords Z"</Description>
                                              <ShowAsSigned>0</ShowAsSigned>
                                              <VariableType>Float</VariableType>
                                              <Address>+8</Address>
                                            </CheatEntry>
                                          </CheatEntries>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>794</ID>
                                          <Description>"Start Coords X"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>start_coords</Address>
                                          <CheatEntries>
                                            <CheatEntry>
                                              <ID>795</ID>
                                              <Description>"Start Coords Y"</Description>
                                              <ShowAsSigned>0</ShowAsSigned>
                                              <VariableType>Float</VariableType>
                                              <Address>+4</Address>
                                            </CheatEntry>
                                            <CheatEntry>
                                              <ID>796</ID>
                                              <Description>"Start Coords Z"</Description>
                                              <ShowAsSigned>0</ShowAsSigned>
                                              <VariableType>Float</VariableType>
                                              <Address>+8</Address>
                                            </CheatEntry>
                                          </CheatEntries>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>797</ID>
                                          <Description>"f_main"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>f_main</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>798</ID>
                                          <Description>"h_main"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>h_main</Address>
                                        </CheatEntry>
                                        <CheatEntry>
                                          <ID>799</ID>
                                          <Description>"k_coef_out"</Description>
                                          <ShowAsSigned>0</ShowAsSigned>
                                          <VariableType>Float</VariableType>
                                          <Address>k_coef_out</Address>
                                        </CheatEntry>
                                      </CheatEntries>
                                    </CheatEntry>
                                  </CheatEntries>
                                </CheatEntry>
                              </CheatEntries>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <LuaScript>-- Process name
local process_name = "ACRSP.exe"

-- IDs or descriptions of the mod entries
local modEntryID = "Enable Mod"
local parkourModeEntryID = "Parkour Mode"

-- CUSTOM FUNCTIONS --
--================================================================================

function InitTimer(owner, tickRate, status, func)
   local timer = createTimer(owner)

   if timer == nil then
      return nil
   end

   timer_setInterval(timer, tickRate)
   timer_onTimer(timer, func)
   timer_setEnabled(timer, status)

   return timer
end

function cycleFullCompact(sender, force)
   local state = not (compactmenuitem.Caption == 'Compact View Mode')
   if force ~= nil then state = not force end
   compactmenuitem.Caption = state and 'Compact View Mode' or 'Full View Mode'
   getMainForm().Splitter1.Visible = state
   getMainForm().Panel4.Visible = state
   getMainForm().Panel5.Visible = state
end

function addCompactMenu()
   if compactmenualreadyexists then return end
   local parent = getMainForm().Menu.Items
   compactmenuitem = createMenuItem(parent)
   parent.add(compactmenuitem)
   compactmenuitem.Caption = 'Compact View Mode'
   compactmenuitem.OnClick = cycleFullCompact
   compactmenualreadyexists = 'yes'
end

-- Function to get a memory record by ID or description
function getMemRec(id)
   local mr
   if type(id) == "string" then
      mr = AddressList.getMemoryRecordByDescription(id)
   else
      mr = AddressList.getMemoryRecordByID(id)
   end
   if mr ~= nil then
      return mr
   else
      return nil
   end
end

-- Function to enforce dependency: "Parkour Mode" can only be enabled if "Enable Mod" is enabled
function enforceDependency()
   local enableModRec = getMemRec(modEntryID)
   local parkourModeRec = getMemRec(parkourModeEntryID)

   if enableModRec and parkourModeRec then
      if not enableModRec.Active and parkourModeRec.Active then
         parkourModeRec.Active = false
         -- print("'Parkour Mode' was automatically disabled because 'Enable Mod' is not active.")
      end
   end
end

-- VERSION AUTO-DETECTION --
--================================================================================
-- This function reads specific memory addresses to determine the version.
function autodetectVersion()
   local value1 = readInteger("ACRSP.exe+BBC866")
   if value1 and value1 == 0xFF602516 then
      return 1
   else
      local value2 = readInteger("ACRSP.exe+BF0306")
      if value2 and value2 == 0xFF5E9006 then
         return 2
      else
         return 1  -- Fallback to version 1 if neither address matches.
      end
   end
end

-- TIMERS --
--================================================================================

function process_checker(t)
   local status = readInteger(process_name)

   if status == nil then
      -- Not attached to process
      getMainForm().Caption = 'Not Attached'
      getApplication().Title = 'Not Attached'
      AddressList.disableAllWithoutExecute()
      for i = 0, AddressList.Count - 1 do
         AddressList[i].Active = false
      end
      if getProcessIDFromProcessName(process_name) ~= nil then
         sleep(2000)
         openProcess(process_name)
      end
   else
      -- Attached to process
      getMainForm().Caption = 'Attached to ' .. process_name
      getApplication().Title = 'Attached to ' .. process_name

      -- Auto-detect version periodically.
      version = autodetectVersion()
      -- print("Detected version: " .. version)

      -- Enforce dependency rule
      enforceDependency()
   end
end

--================================================================================
--================================================================================

-----------------------------   Start Execution   --------------------------------
openProcess(process_name)
process_timer = InitTimer(getMainForm(), 1000, false, process_checker)
timer_setEnabled(process_timer, true) -- Start timer
addCompactMenu()
cycleFullCompact(nil, true)
</LuaScript>
</CheatTable>